% This theory is based on the csv python package.
csv_writer_def: THEORY
BEGIN

  IMPORTING str_util

  CSVDialect: TYPE = [# dlmt: StringChar,    % delimiter
  	     	        qchr: StringChar  #] % quote char

  % CSVDialect's observers
  csv_dialect_delimeter(dialect: CSVDialect): string = dialect`dlmt
  csv_dialect_quotechar(dialect: CSVDialect): StringChar = dialect`qchr

  % Predefined dialects
  MSEXCEL_DIALECT: CSVDialect = (# dlmt := ",", qchr:= doublequote #)
  SQCOMMA_DIALECT: CSVDialect = (# dlmt := ",", qchr:= singlequote #)  

  CSVWriter: TYPE = [# outs: OStream,       % output stream
                       dlct: CSVDialect,    % csv dialect to be used by the writer
		       precision : int #]   % precision for writting rational number,
		                            % when precision is -1, print as rational

  csv_writer_stream(writer: CSVWriter): OStream = writer`outs 
  csv_writer_dialect(writer: CSVWriter): CSVDialect = writer`dlct 
  csv_writer_precision(writer: CSVWriter): int = writer`precision 

  csv_writer(csvfilename: string, dialect: CSVDialect, precision : int): CSVWriter =
    (# outs := fopenout(create,csvfilename) ,
       dlct := dialect,
       precision := precision #)

  csv_writer(csvfilename: string, dialect: CSVDialect): CSVWriter =
    csv_writer(csvfilename, dialect, val(PRECISION))

  set_csv_writer_precision(writer: CSVWriter, precision: int) : CSVWriter =
    writer WITH [`precision := precision]

END csv_writer_def

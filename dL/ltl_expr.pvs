ltl_expr : THEORY
BEGIN

  IMPORTING bool_expr
          %  ,LTL@LTL_semantics[Environment]
           ,trace_semantics

  TraceBoolExpr : TYPE = [ Trace -> bool ]

% STATE FORMULAS %

  ALLRUNS_trace(hp:HP)(f:TraceBoolExpr)(env0:Environment): bool =
    FORALL (trace:Trace): nth(trace,0) = STATE(env0) AND trace_semantic_rel(hp)(trace) IMPLIES
      f(trace)

  SOMERUNS_trace(hp:HP)(f:TraceBoolExpr)(env0:Environment): bool =
    EXISTS (trace:Trace): nth(trace,0) = STATE(env0) AND trace_semantic_rel(hp)(trace) IMPLIES
      f(trace)

% TRACE FORMULAS %

  DLOR_trace(P,Q:BoolExpr)(trace:Trace): bool = DLOR(P,Q)(state(nth(trace,0)))
  % I think we need one for each operator to establish the connection

  DLNOT_trace(f:TraceBoolExpr)(trace:Trace): bool = NOT f(trace)

  % DLGLOBALLY(f:TraceBoolExpr)(trace:Trace): bool =
  %   FORALL (suffix:Trace): is_suffix(suffix,trace) AND NOT error_trace?(trace)
  %     IMPLIES
  %       f(suffix)

  % DLEVENTUALLY(f:TraceBoolExpr)(trace:Trace): bool =
  %   EXISTS (suffix:Trace): is_suffix(suffix,trace) AND NOT error_trace?(trace)
  %     IMPLIES
  %       f(suffix)

END ltl_expr

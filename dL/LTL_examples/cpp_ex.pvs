%%
% @theory: cpp_ex
% @author: lmwhite3
% @date: Tue, 15 Aug 2023 19:49:11 GMT
%%
cpp_ex: THEORY
  BEGIN 
    

%-----------------------------------
%% Importing Differential Dynamic Logic
%-----------------------------------
  IMPORTING dL@top,
            dL@temporal_logic,
            analysis@derivative_props

%-----------------------------------
%% Define the variables
%-----------------------------------
  x: nat = 0
  y: nat = 1
  X: RealExpr = val(x)
  Y: RealExpr = val(y)




  %%Dynamics defined by
  f:{ff:(ODEs_s?(hp(0))) | length(ff)=2 AND nth(ff,1)`1 = y AND 
            EXISTS(eps:posreal): 
              FORALL(env:Environment): (nth(ff,1)`2)(env) > eps}

  Always_eventually_safe: LEMMA
  ALLRUNS_tr(SEQ(DIFF(f),TEST((Y>=0))),
              DLEVENTUALLY(DLGLOBALLY(State_Trace((Y>=0)))))


whilehp:HP = SEQ(SEQ(ASSIGN((:(x,cnst(0)):)),STAR(SEQ(TEST(X<=10),ASSIGN((:(x,X+1):))))),TEST(X>10))

While_loop_ex: LEMMA
ALLRUNS_tr(whilehp,DLEVENTUALLY(State_Trace(X=10)))



%% The bang-bang controller for acceleration

% t: nat = 0
% s: nat = 1
% v: nat = 2
% a: nat = 3

% s0: real = 0
% A: real = 5
% T: real = 0.1
% bb: HP = SEQ(UNION(SEQ(TEST(val(s)<=s0),ASSIGN((:(a,cnst(A)):))),
%                    SEQ(TEST(val(s)>s0),ASSIGN((:(a,cnst(-A)):)))),
%               STAR(SEQ(ASSIGN((:(t,cnst(0)):)), 
%                        DIFF((:(t,1),(s,val(v)),(v,val(a)):),val(t) <= T))))

% dist_s0(r:real): BoolExpr = abs(val(s)-s0) < abs(r)

% bangbang_max_ex: LEMMA
% EXISTS(M:posreal): ALLRUNS_tr(bb,DLGLOBALLY(State_Trace(abs(val(s)-s0) < M)))





%% not true... no infinite traces and only finite mode switches

% bangbang_reaches_A_ex: LEMMA
% ALLRUNS_tr(SEQ(bb,TEST(DLFALSE)), 
%             DLGLOBALLY(DLEVENTUALLY(State_Trace(val(a) =  A))))

% bangbang_reaches_minusA_ex: LEMMA
% ALLRUNS_tr(SEQ(bb,TEST(DLFALSE)), 
%             DLGLOBALLY(DLEVENTUALLY(State_Trace(val(a) = -A))))



  END cpp_ex

%%
% @theory: types_ex
% @author: lmwhite3
% @date: Wed, 24 May 2023 16:42:56 GMT
%%
types_ex: THEORY
  BEGIN 

%-----------------------------------
%% Importing Differential Dynamic Logic
%-----------------------------------
  IMPORTING dL@top,
            dL@temporal_logic

%-----------------------------------
%% Define the variables
%-----------------------------------
x: nat = 0


%------------------------------------
%% The Hybrid Program
%% 〈 {x'=6};(x:=5) 〉◇(x!=5)
%------------------------------------
% @QED eventually_not_assign proved by lmwhite3 on Fri, 26 May 2023 17:57:53 GMT
eventually_not_assign: LEMMA
SOMERUNS_tr(SEQ(DIFF((:(x,cnst(6)):)),ASSIGN((:(x,cnst(5)):))),
                      DLEVENTUALLY(State_Trace(DLNOT(val(x)=5))))

% @QED end_state_5 proved by lmwhite3 on Fri, 26 May 2023 18:00:47 GMT
end_state_5: LEMMA
ALLRUNS(SEQ(DIFF((:(x,cnst(6)):)),ASSIGN((:(x,cnst(5)):))),(val(x)=5))


% floor example

floor_re(re:RealExpr)(env:Environment): real = floor(re(env))
integer_pred_re?(re:RealExpr)(env:Environment): bool = integer_pred(re(env))

% □ 
eventually_not_int: LEMMA
SOMERUNS_tr(SEQ(DIFF((:(x,cnst(6)):)),ASSIGN((:(x,floor_re(val(x))):))),
                  DLEVENTUALLY(State_Trace(NOT integer_pred_re?(val(x)))))

% @QED end_state_int proved
end_state_int: LEMMA
ALLRUNS(SEQ(DIFF((:(x,cnst(6)):)),ASSIGN((:(x,floor_re(val(x))):))),
                                              integer_pred_re?(val(x)))










% test

% alpha: HP = UNION( SEQ(TEST(val(v) < V0),
%                           DIFF((:(v,val(a)),(a,cnst( M)) :), (val(v) <= V0 + tau))) , 
%                         SEQ(TEST(val(v) >= V0),
%                           DIFF((:(v,val(a)),(a,cnst(-M)) :), (val(v) >= V0 - tau))) )

% %〈α〉□ ◇(v=V0)
% V0_achieved_oscillation: LEMMA
%     SOMERUNS_tr(alpha,normDLGE((val(v)=V0),(val(v)=V0)))  




    
  END types_ex

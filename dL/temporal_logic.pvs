%%
% @theory: temporal_logic
% @author: LMW
% @date: Wed, 22 Mar 2023 14:09:22 GMT
%%



temporal_logic: THEORY
  BEGIN 
    
    IMPORTING ltl_expr,
              even_more_list_props[TraceState],
              substitution

%%--------------------------------------------
%%Define variables 
%%--------------------------------------------

  l,m: VAR Assigns
  f:   VAR ODEs
  j,k: VAR nat
  re:  VAR RealExpr
  r :  VAR real

  Gamma,Delta : VAR Formulas
  P,Q,J,R     : VAR BoolExpr
  S,T,U,V     : VAR TraceBoolExpr
  A,B         : VAR HP
  t           : VAR Trace
  re1,re2     : VAR RealExpr


%---------
%% Some preliminary lemmas
%-----------




  
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Normalization Rules
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% @QED norm_DLGLOBALLY proved by lmwhite3 on Mon, 27 Mar 2023 14:06:28 GMT
norm_DLGLOBALLY: LEMMA
    DLGLOBALLY(State_Trace(P)) = normDLGLOBALLY(DLTRUE,P)

% @QED norm_DLEVENTUALLY proved by lmwhite3 on Mon, 27 Mar 2023 14:06:53 GMT
norm_DLEVENTUALLY: LEMMA
    DLEVENTUALLY(State_Trace(P)) = normDLEVENTUALLY(DLFALSE,P)

% @QED norm_DLGE proved by lmwhite3 on Mon, 27 Mar 2023 15:47:52 GMT
norm_DLGE: LEMMA
    DLGLOBALLY(DLEVENTUALLY(State_Trace(P))) = normDLGE(P,P)

% @QED norm_DLEG proved by lmwhite3 on Mon, 27 Mar 2023 15:51:15 GMT
norm_DLEG: LEMMA
    DLEVENTUALLY(DLGLOBALLY(State_Trace(P))) = normDLEG(P,P)

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Normalization of Trace Formulas
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Handled by core of PVS

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Sequential Composition
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%  [;]⊓
% [A]([B](P ⊓ □Q) ⊓ □Q)
% -----------------------
% [A;B](P ⊓ □Q)
% @QED dltl_SEQcap proved by lmwhite3 on Wed, 19 Apr 2023 18:41:52 GMT
dltl_SEQcap: LEMMA
    ALLRUNS_tr(A, normDLGLOBALLY(ALLRUNS_tr(B, normDLGLOBALLY(P,Q)), Q)) =
    ALLRUNS_tr(SEQ(A,B), normDLGLOBALLY(P,Q))

%  [;]⊔
% [A]([B](P ⊔ ◇Q) ⊔ ◇Q)
% -----------------------
% [A;B](P ⊔ ◇Q)
% @QED dltl_SEQcup proved by lmwhite3 on Mon, 10 Apr 2023 18:28:22 GMT
dltl_SEQcup: LEMMA
    ALLRUNS_tr(A, normDLEVENTUALLY(ALLRUNS_tr(B, normDLEVENTUALLY(P,Q)), Q)) =
    ALLRUNS_tr(SEQ(A,B), normDLEVENTUALLY(P,Q)) 

%  [;]◁
% [A]([B](P ◁ T) ◁ T)
% -----------------------
% [A;B](P ◁ T)
% where T = □◇Q or ◇□Q

dltl_SEQtriangleEG: LEMMA
    ALLRUNS_tr(A, normDLEG(ALLRUNS_tr(B, normDLEG(P,Q)), Q)) =
    ALLRUNS_tr(SEQ(A,B), normDLEG(P,Q))

% @QED dltl_SEQtriangleGE proved by lmwhite3 on Thu, 13 Apr 2023 14:07:13 GMT
dltl_SEQtriangleGE: LEMMA
    ALLRUNS_tr(A, normDLGE(ALLRUNS_tr(B, normDLGE(P,Q)), Q)) =
    ALLRUNS_tr(SEQ(A,B), normDLGE(P,Q))

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Nondeterministic Choice
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%  [∪]T
% [A]T ∧ [B]T
% -----------------------
% [A ∪ B]T
% @QED dltl_choice proved by lmwhite3 on Tue, 28 Mar 2023 19:26:55 GMT
dltl_choice: LEMMA
    DLAND(ALLRUNS_tr(A,T), ALLRUNS_tr(B,T)) =
    ALLRUNS_tr(UNION(A,B),T)

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Test
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%  [?]⊓
% (¬P ∨ Q) ∧ R
% -----------------------
% [?P](Q ⊓ □R)
% @QED dltl_TESTcap proved by lmwhite3 on Thu, 30 Mar 2023 18:47:26 GMT
dltl_TESTcap: LEMMA
    DLAND(DLOR(DLNOT(P),Q),R) = ALLRUNS_tr(TEST(P),normDLGLOBALLY(Q,R))

%  [?]⊔
% (P ∧ Q) ∨ R
% -----------------------
% [?P](Q ⊔ ◇R)
% @QED dltl_TESTcup proved by lmwhite3 on Thu, 06 Apr 2023 17:44:10 GMT
dltl_TESTcup: LEMMA
    DLOR(DLAND(P,Q),R) = ALLRUNS_tr(TEST(P),normDLEVENTUALLY(Q,R))

%  [;]◁ ◇
% (P ∧ Q) ∨ (¬P ∧ R)
% -----------------------
% [?P](Q ◁ ◇□R)
% @QED dltl_TESTEG proved by lmwhite3 on Thu, 06 Apr 2023 18:10:17 GMT
dltl_TESTEG: LEMMA
    DLOR(DLAND(P,Q),DLAND(DLNOT(P),R)) = ALLRUNS_tr(TEST(P),normDLEG(Q,R))

%  [;]◁ □
% (P ∧ Q) ∨ (¬P ∧ R)
% -----------------------
% [?P](Q ◁ □◇R)
% @QED dltl_TESTGE proved by lmwhite3 on Thu, 06 Apr 2023 18:55:39 GMT
dltl_TESTGE: LEMMA
    DLOR(DLAND(P,Q),DLAND(DLNOT(P),R)) = ALLRUNS_tr(TEST(P),normDLGE(Q,R))

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Assignment
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%  [:=]⊓
% P ∧ [x:=l](Q ∧ P)
% -----------------------
% [x:=l](Q ⊓ □P)
% @QED dltl_ASSIGNcap proved by lmwhite3 on Thu, 06 Apr 2023 21:06:34 GMT
dltl_ASSIGNcap: LEMMA
    DLAND(P,ALLRUNS(ASSIGN(l),Q AND P)) = ALLRUNS_tr(ASSIGN(l),normDLGLOBALLY(Q,P))

%  [:=]⊔
% P ∨ [x:=l](Q ∨ P)
% -----------------------
% [x:=l](Q ⊔ ◇P)
% @QED dltl_ASSIGNcup proved by lmwhite3 on Thu, 06 Apr 2023 21:26:12 GMT
dltl_ASSIGNcup: LEMMA
    DLOR(P,ALLRUNS(ASSIGN(l),Q OR P)) = ALLRUNS_tr(ASSIGN(l),normDLEVENTUALLY(Q,P))

%  [:=]◁
% [x:=l]P
% -----------------------
% [x:=l](P ◁ T)
% where T = □◇Q or ◇□Q
% @QED dltl_ASSIGNEG proved by lmwhite3 on Fri, 07 Apr 2023 13:51:45 GMT
dltl_ASSIGNEG: LEMMA
    ALLRUNS(ASSIGN(l),P) = ALLRUNS_tr(ASSIGN(l),normDLEG(P,Q))

% @QED dltl_ASSIGNGE proved by lmwhite3 on Fri, 07 Apr 2023 13:55:38 GMT
dltl_ASSIGNGE: LEMMA
    ALLRUNS(ASSIGN(l),P) = ALLRUNS_tr(ASSIGN(l),normDLGE(P,Q))

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Ordinary Differential Equation
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%  [']⊓
% P ∧ [x':=f&Q](R ∧ P)
% -----------------------
% [x:=f&Q](R ⊓ □P)
dltl_DIFFcap: LEMMA
    DLAND(P,ALLRUNS(DIFF(f,Q),R AND P)) = ALLRUNS_tr(DIFF(f,Q),normDLGLOBALLY(R,P))

%  [']⊔
% (P∨Q) ∧ [x:=f&(P∧¬Q)]R ∧〈x:=f〉(¬P∨Q)
% -----------------------
% [x:=f&P](R ⊔ ◇Q)
dltl_DIFFcup: LEMMA
    DLAND(DLAND(DLOR(P,Q),ALLRUNS(DIFF(f,P AND NOT Q),R)),SOMERUNS(DIFF(f,DLTRUE), NOT P OR Q)) =
    ALLRUNS_tr(DIFF(f,P),normDLEVENTUALLY(R,Q))

%  [']◁ ◇
% (P∨Q) ∧ [x:=f&P]R ∧ (〈x:=f〉(¬P) ∨〈x:=f〉[x:=f]Q)
% -----------------------
% [x:=f&P](R ◁ ◇□Q)
dltl_DIFFEG: LEMMA
    DLAND(DLAND(DLOR(P,Q),ALLRUNS(DIFF(f,P),R)),DLOR(SOMERUNS(DIFF(f,DLTRUE), NOT P),SOMERUNS(DIFF(f,DLTRUE), ALLRUNS(DIFF(f,DLTRUE),Q)))) =
    ALLRUNS_tr(DIFF(f,P),normDLEG(R,Q))

%  [']◁ □
% (P∨Q) ∧ [x:=f&P]R ∧ (〈x:=f〉(¬P) ∨〈x:=f〉[x:=f]Q)
% -----------------------
% [x:=f&P](R ◁ □◇Q)
dltl_DIFFGE: LEMMA
    DLAND(DLAND(DLOR(P,Q),ALLRUNS(DIFF(f,P),R)),DLOR(SOMERUNS(DIFF(f,DLTRUE), NOT P),SOMERUNS(DIFF(f,DLTRUE), ALLRUNS(DIFF(f,DLTRUE),Q)))) =
    ALLRUNS_tr(DIFF(f,P),normDLGE(R,Q))

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Repetition
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%  [*]⊓
% P ∧ [A*][A](P ⊓ □Q)
% -----------------------
% [A*](P ⊓ □Q)
dltl_STARcap: LEMMA
    DLAND(P,ALLRUNS(STAR(A),ALLRUNS_tr(A,normDLGLOBALLY(P,Q)))) =
    ALLRUNS_tr(STAR(A),normDLGLOBALLY(P,Q))

%  [*n]⊔
% P ∨ (Q ∧ [A;A*](Q ⊔ ◇P))
% -----------------------
% [A*](Q ⊔ ◇P)
dltl_STARcup: LEMMA
    DLOR(P,DLAND(Q,ALLRUNS_tr(SEQ(STAR(A),A),normDLEVENTUALLY(Q,P)))) =
    ALLRUNS_tr(STAR(A),normDLEVENTUALLY(Q,P))

%  ind⊔
% ∀a (P → [a](P ⊔ ◇Q)))
% -----------------------
% P → [A*](P ⊔ ◇Q)
% @QED dltl_STARindcup proved by lmwhite3 on Fri, 31 Mar 2023 18:21:55 GMT
% dltl_STARindcup: LEMMA
% FORALL(env:Environment):
%     (FORALL(A1: HP): DLIMPLIES(P,ALLRUNS_tr(A1,normDLEVENTUALLY(P,Q)))(env)) IMPLIES
%     DLIMPLIES(P,ALLRUNS_tr(STAR(A),normDLEVENTUALLY(P,Q)))(env)

dltl_STARindcup_noforall: LEMMA
FORALL(env:Environment):
    DLIMPLIES(P,ALLRUNS_tr(A,normDLEVENTUALLY(P,Q)))(env) IMPLIES
    DLIMPLIES(P,ALLRUNS_tr(STAR(A),normDLEVENTUALLY(P,Q)))(env)

%  [*]◁
% P ∧ [A*][A](P ◁ T)
% -----------------------
% [A*](P ◁ T)
% where T = □◇Q or ◇□Q
dltl_STAREG: LEMMA
    DLAND(P,ALLRUNS(STAR(A),ALLRUNS_tr(A,normDLEG(P,Q)))) =
    ALLRUNS_tr(STAR(A),normDLEG(P,Q))

dltl_STARGE: LEMMA
    DLAND(P,ALLRUNS(STAR(A),ALLRUNS_tr(A,normDLGE(P,Q)))) =
    ALLRUNS_tr(STAR(A),normDLGE(P,Q))

% I am not a hundred percent on what is happening here, the part where r<=0 confuses me because shouldn't r be a nat? its the index of a trace? or is it part of the domain of A?

%  con⊓
% ∀a ∀r>0 (t(r) → 〈a〉(t(r-1) ⊓ □Q)
% -----------------------
% (∃r t(r)) ∧ Q → 〈A〉(∃r≤0 t(r) ⊓ □Q)
dltl_STARconcap: LEMMA
    FORALL(env:Environment):
    LET
    L(i:below(length(t))) = LAMBDA(env:Environment): FORALL(n:nat): env(n) = (state(nth(t,i)))(n)
    IN
    (FORALL(a:HP, k:below(length(t)) | k/= 0): DLIMPLIES(L(k),SOMERUNS_tr(a,normDLGLOBALLY(L(k-1),Q)))(env)) IMPLIES
    (DLIMPLIES(LAMBDA(env:Environment): EXISTS(k:below(length(t))): L(k)(env) AND Q(env),SOMERUNS_tr(STAR(A),normDLGLOBALLY(L(0),Q)))(env))



  END temporal_logic

(temporal_logic
 (norm_DLGLOBALLY 0
  (norm_DLGLOBALLY-1 nil 3888914764
   ("" (skeep)
    (("" (expand "normDLGLOBALLY")
      (("" (expand "DLBOOL") (("" (decompose-equality) nil nil)) nil))
      nil))
    nil)
   ((normDLGLOBALLY const-decl "bool" ltl_expr nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (list type-decl nil list_adt nil)
    (TraceState type-decl nil TraceState_adt nil)
    (State_Trace const-decl "bool" ltl_expr nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (Environment type-eq-decl nil hp_def nil)
    (DLGLOBALLY const-decl "bool" ltl_expr nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (DLBOOL const-decl "bool" bool_expr nil))
   shostak))
 (norm_DLEVENTUALLY 0
  (norm_DLEVENTUALLY-1 nil 3888914799
   ("" (skeep)
    (("" (expand "DLBOOL")
      (("" (expand "normDLEVENTUALLY")
        (("" (decompose-equality) nil nil)) nil))
      nil))
    nil)
   ((DLBOOL const-decl "bool" bool_expr nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (list type-decl nil list_adt nil)
    (TraceState type-decl nil TraceState_adt nil)
    (State_Trace const-decl "bool" ltl_expr nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (Environment type-eq-decl nil hp_def nil)
    (DLEVENTUALLY const-decl "bool" ltl_expr nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (normDLEVENTUALLY const-decl "bool" ltl_expr nil))
   shostak))
 (norm_DLGE 0
  (norm_DLGE-1 nil 3888914821
   ("" (skeep)
    (("" (decompose-equality)
      (("" (expand "normDLGE")
        (("" (lift-if)
          (("" (split)
            (("1" (flatten)
              (("1" (expand "DLEVENTUALLY")
                (("1" (expand "DLGLOBALLY")
                  (("1" (assert)
                    (("1" (split)
                      (("1" (flatten)
                        (("1" (iff)
                          (("1" (split)
                            (("1" (flatten)
                              (("1"
                                (inst -1 "(: last(x!1) :)")
                                (("1"
                                  (split)
                                  (("1"
                                    (skeep)
                                    (("1"
                                      (typepred "suffix")
                                      (("1"
                                        (expand "State_Trace")
                                        (("1"
                                          (lemma
                                           "suffix_length[TraceState]")
                                          (("1"
                                            (inst
                                             -1
                                             "suffix"
                                             "(: last(x!1) :)")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (expand "wf_trace?")
                                                (("1"
                                                  (flatten)
                                                  (("1"
                                                    (lemma
                                                     "suffix_same_length[TraceState]")
                                                    (("1"
                                                      (inst
                                                       -1
                                                       "(: last(x!1) :)"
                                                       "suffix")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (split)
                                                          (("1"
                                                            (replace
                                                             -1)
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (replace
                                                                 -1
                                                                 -6
                                                                 rl)
                                                                (("1"
                                                                  (expand
                                                                   "finite_trace?")
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (assert)
                                                            (("2"
                                                              (grind)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2" (assert) nil nil))
                                  nil)
                                 ("2"
                                  (split)
                                  (("1"
                                    (expand "wf_trace?")
                                    (("1"
                                      (skeep)
                                      (("1"
                                        (typepred "i")
                                        (("1" (grind) nil nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (lemma "suffix_last[TraceState]")
                                    (("2"
                                      (inst
                                       -1
                                       "x!1"
                                       "rdc(x!1)"
                                       "(: last(x!1) :)")
                                      (("2"
                                        (lemma "rdc_rac[TraceState]")
                                        (("2"
                                          (inst -1 "x!1")
                                          (("2"
                                            (expand "rac")
                                            (("2"
                                              (expand "last")
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (lemma
                                                   "suffix_reflexive[TraceState]")
                                                  (("2"
                                                    (replace -2)
                                                    (("2"
                                                      (inst -1 "x!1")
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (flatten)
                              (("2"
                                (skeep)
                                (("2"
                                  (inst 1 "(: last(x!1) :)")
                                  (("1"
                                    (expand "State_Trace")
                                    (("1"
                                      (expand "finite_trace?")
                                      (("1" (assert) nil nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (split)
                                    (("1"
                                      (expand "wf_trace?")
                                      (("1"
                                        (skeep)
                                        (("1"
                                          (typepred "i")
                                          (("1" (grind) nil nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (typepred "suffix_1")
                                      (("2"
                                        (lemma
                                         "suffix_last[TraceState]")
                                        (("2"
                                          (inst
                                           -1
                                           "suffix_1"
                                           "rdc(suffix_1)"
                                           "(: rac(suffix_1) :)")
                                          (("1"
                                            (lemma
                                             "rdc_rac[TraceState]")
                                            (("1"
                                              (inst -1 "suffix_1")
                                              (("1"
                                                (replace -1)
                                                (("1"
                                                  (lemma
                                                   "suffix_reflexive[TraceState]")
                                                  (("1"
                                                    (inst
                                                     -1
                                                     "suffix_1")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (expand "rac")
                                                        (("1"
                                                          (hide -2 -1)
                                                          (("1"
                                                            (lemma
                                                             "suffix_nth[TraceState]")
                                                            (("1"
                                                              (inst
                                                               -1
                                                               "x!1"
                                                               "suffix_1")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (inst
                                                                   -1
                                                                   "length(suffix_1) - 1")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (expand
                                                                       "last")
                                                                      (("1"
                                                                        (replace
                                                                         -1)
                                                                        (("1"
                                                                          (propax)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (expand
                                                                     "wf_trace?")
                                                                    (("2"
                                                                      (flatten)
                                                                      (("2"
                                                                        (expand
                                                                         "length")
                                                                        (("2"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (expand "wf_trace?")
                                                (("2"
                                                  (flatten)
                                                  (("2"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (expand "wf_trace?")
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("3"
                                      (typepred "suffix_1")
                                      (("3"
                                        (expand "finite_trace?")
                                        (("3"
                                          (lemma
                                           "suffix_nth[TraceState]")
                                          (("3"
                                            (inst?)
                                            (("3" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (flatten)
                        (("2" (iff)
                          (("2" (split)
                            (("1" (flatten)
                              (("1"
                                (inst -1 "(: last(x!1) :)")
                                (("1"
                                  (split)
                                  (("1"
                                    (skeep)
                                    (("1"
                                      (typepred "suffix")
                                      (("1"
                                        (expand "State_Trace")
                                        (("1"
                                          (lemma
                                           "suffix_length[TraceState]")
                                          (("1"
                                            (inst
                                             -1
                                             "suffix"
                                             "(: last(x!1) :)")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (expand "wf_trace?")
                                                (("1"
                                                  (flatten)
                                                  (("1"
                                                    (lemma
                                                     "suffix_same_length[TraceState]")
                                                    (("1"
                                                      (inst
                                                       -1
                                                       "(: last(x!1) :)"
                                                       "suffix")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (split)
                                                          (("1"
                                                            (replace
                                                             -1)
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (replace
                                                                 -1
                                                                 -6
                                                                 rl)
                                                                (("1"
                                                                  (expand
                                                                   "finite_trace?")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (skeep)
                                                                      (("1"
                                                                        (typepred
                                                                         "T")
                                                                        (("1"
                                                                          (inst
                                                                           -7
                                                                           "max(D(last(x!1)))")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (typepred
                                                                               "D(last(x!1))")
                                                                              (("1"
                                                                                (skeep)
                                                                                (("1"
                                                                                  (replace
                                                                                   -2)
                                                                                  (("1"
                                                                                    (lemma
                                                                                     "suffix_nth[TraceState]")
                                                                                    (("1"
                                                                                      (inst
                                                                                       -1
                                                                                       "x!1"
                                                                                       "suffix")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (split)
                                                                                          (("1"
                                                                                            (inst
                                                                                             -1
                                                                                             "0")
                                                                                            (("1"
                                                                                              (replace
                                                                                               -5
                                                                                               -1
                                                                                               rl)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "length"
                                                                                                 -1
                                                                                                 2)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "length"
                                                                                                   -1
                                                                                                   2)
                                                                                                  (("1"
                                                                                                    (replace
                                                                                                     -5)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "nth"
                                                                                                       -1
                                                                                                       1)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "last")
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             -3)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (replace
                                                                                                                 -5
                                                                                                                 -1
                                                                                                                 rl)
                                                                                                                (("1"
                                                                                                                  (lemma
                                                                                                                   "max_lem")
                                                                                                                  (("1"
                                                                                                                    (inst
                                                                                                                     -1
                                                                                                                     "closed_interval(0, b)"
                                                                                                                     "max[real, <=](closed_interval(0, b))")
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (inst
                                                                                                                         -1
                                                                                                                         "T")
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (grind)
                                                                                              nil
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (lemma
                                                                                             "suffix_supl[TraceState]")
                                                                                            (("2"
                                                                                              (inst?)
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (replace
                                                                                                   -4
                                                                                                   1
                                                                                                   rl)
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     1
                                                                                                     "rdc(x!1)")
                                                                                                    (("2"
                                                                                                      (lemma
                                                                                                       "rdc_rac[TraceState]")
                                                                                                      (("2"
                                                                                                        (inst?)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "rac")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "last")
                                                                                                            (("2"
                                                                                                              (propax)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (grind)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (assert)
                                    (("2"
                                      (expand "finite_trace?")
                                      (("2" (propax) nil nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (split)
                                  (("1"
                                    (expand "wf_trace?")
                                    (("1"
                                      (skeep)
                                      (("1"
                                        (typepred "i")
                                        (("1" (grind) nil nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (lemma "suffix_last[TraceState]")
                                    (("2"
                                      (inst
                                       -1
                                       "x!1"
                                       "rdc(x!1)"
                                       "(: last(x!1) :)")
                                      (("2"
                                        (lemma "rdc_rac[TraceState]")
                                        (("2"
                                          (inst -1 "x!1")
                                          (("2"
                                            (expand "rac")
                                            (("2"
                                              (expand "last")
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (lemma
                                                   "suffix_reflexive[TraceState]")
                                                  (("2"
                                                    (replace -2)
                                                    (("2"
                                                      (inst -1 "x!1")
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (flatten)
                              (("2"
                                (skeep)
                                (("2"
                                  (inst 1 "(: last(x!1) :)")
                                  (("1"
                                    (expand "State_Trace")
                                    (("1"
                                      (expand "finite_trace?")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (assert)
                                          (("1"
                                            (inst
                                             1
                                             "max(D(last(x!1)))")
                                            (("1"
                                              (skeep)
                                              (("1"
                                                (typepred "t")
                                                (("1"
                                                  (typepred
                                                   "D(last(x!1))")
                                                  (("1"
                                                    (skeep)
                                                    (("1"
                                                      (replace -2)
                                                      (("1"
                                                        (lemma
                                                         "max_lem")
                                                        (("1"
                                                          (inst
                                                           -1
                                                           "closed_interval(0, b)"
                                                           "max[real, <=](closed_interval(0, b))")
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (inst
                                                               -1
                                                               "t")
                                                              (("1"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (split)
                                    (("1"
                                      (expand "wf_trace?")
                                      (("1"
                                        (skeep)
                                        (("1"
                                          (typepred "i")
                                          (("1" (grind) nil nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (typepred "suffix_1")
                                      (("2"
                                        (lemma
                                         "suffix_last[TraceState]")
                                        (("2"
                                          (inst
                                           -1
                                           "suffix_1"
                                           "rdc(suffix_1)"
                                           "(: rac(suffix_1) :)")
                                          (("1"
                                            (lemma
                                             "rdc_rac[TraceState]")
                                            (("1"
                                              (inst -1 "suffix_1")
                                              (("1"
                                                (replace -1)
                                                (("1"
                                                  (lemma
                                                   "suffix_reflexive[TraceState]")
                                                  (("1"
                                                    (inst
                                                     -1
                                                     "suffix_1")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (expand "rac")
                                                        (("1"
                                                          (hide -2 -1)
                                                          (("1"
                                                            (lemma
                                                             "suffix_nth[TraceState]")
                                                            (("1"
                                                              (inst
                                                               -1
                                                               "x!1"
                                                               "suffix_1")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (inst
                                                                   -1
                                                                   "length(suffix_1) - 1")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (expand
                                                                       "last")
                                                                      (("1"
                                                                        (replace
                                                                         -1)
                                                                        (("1"
                                                                          (propax)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (expand
                                                                     "wf_trace?")
                                                                    (("2"
                                                                      (flatten)
                                                                      (("2"
                                                                        (expand
                                                                         "length")
                                                                        (("2"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (expand "wf_trace?")
                                                (("2"
                                                  (flatten)
                                                  (("2"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (expand "wf_trace?")
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("3"
                                      (typepred "suffix_1")
                                      (("3"
                                        (expand "finite_trace?")
                                        (("3"
                                          (lemma
                                           "suffix_nth[TraceState]")
                                          (("3"
                                            (inst?)
                                            (("3" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (propax) nil nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (DLGLOBALLY const-decl "bool" ltl_expr nil)
    (DLEVENTUALLY const-decl "bool" ltl_expr nil)
    (Environment type-eq-decl nil hp_def nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (State_Trace const-decl "bool" ltl_expr nil)
    (normDLGE const-decl "bool" ltl_expr nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (list type-decl nil list_adt nil)
    (TraceState type-decl nil TraceState_adt nil)
    (suffix_nth formula-decl nil more_list_props structures)
    (rdc const-decl "list[T]" more_list_props structures)
    (suffix_reflexive formula-decl nil more_list_props structures)
    (rac const-decl "T" more_list_props structures)
    (rdc_rac formula-decl nil more_list_props structures)
    (suffix_last formula-decl nil more_list_props structures)
    (error? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (car adt-accessor-decl "[(cons?) -> T]" list_adt nil)
    (suffix_length formula-decl nil more_list_props structures)
    (length_singleton formula-decl nil more_list_props structures)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (suffix_same_length formula-decl nil more_list_props structures)
    (suffix? def-decl "bool" more_list_props structures)
    (last const-decl "T" more_list_props structures)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (max const-decl
         "{a: T | SS(a) AND (FORALL (x: T): SS(x) IMPLIES x <= a)}"
         finite_sets_minmax finite_sets)
    (empty? const-decl "bool" sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (non_empty_finite_set type-eq-decl nil finite_sets nil)
    (max_lem formula-decl nil finite_sets_minmax finite_sets)
    (suffix_supl formula-decl nil more_list_props structures)
    (D adt-accessor-decl "[(state_diff?) ->
   {D: (dd?) | EXISTS (b: posreal): D = closed_interval(0, b)}]"
     TraceState_adt nil)
    (closed_interval const-decl "(closed_interval?(a, b))" interval_def
     ODEs)
    (dd? const-decl "bool" hp_expr nil)
    (state_diff? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil))
   shostak))
 (norm_DLEG 0
  (norm_DLEG-1 nil 3888918402
   ("" (skeep)
    (("" (decompose-equality)
      (("" (expand "normDLEG")
        (("" (lift-if)
          (("" (split)
            (("1" (flatten)
              (("1" (expand "DLEVENTUALLY")
                (("1" (expand "DLGLOBALLY")
                  (("1" (split)
                    (("1" (flatten)
                      (("1" (iff)
                        (("1" (split)
                          (("1" (flatten)
                            (("1" (skeep)
                              (("1"
                                (inst -1 "(: last(x!1) :)")
                                (("1"
                                  (expand "finite_trace?")
                                  (("1"
                                    (assert)
                                    (("1"
                                      (expand "State_Trace")
                                      (("1" (propax) nil nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (split)
                                  (("1" (grind) nil nil)
                                   ("2"
                                    (typepred "suffix")
                                    (("2"
                                      (lemma "suffix_supl[TraceState]")
                                      (("2"
                                        (inst-cp
                                         -1
                                         "(: last[TraceState](x!1) :)"
                                         "suffix")
                                        (("2"
                                          (assert)
                                          (("2"
                                            (inst?)
                                            (("2"
                                              (assert)
                                              (("2"
                                                (skeep)
                                                (("2"
                                                  (inst
                                                   1
                                                   "rdc(suffix)")
                                                  (("1"
                                                    (lemma
                                                     "rdc_rac[TraceState]")
                                                    (("1"
                                                      (expand "last")
                                                      (("1"
                                                        (expand "rac")
                                                        (("1"
                                                          (inst?)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (lemma
                                                               "suffix_nth[TraceState]")
                                                              (("1"
                                                                (inst?)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (inst
                                                                     -1
                                                                     "length(suffix) - 1")
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil)
                                                                     ("2"
                                                                      (expand
                                                                       "wf_trace?")
                                                                      (("2"
                                                                        (flatten)
                                                                        (("2"
                                                                          (expand
                                                                           "length")
                                                                          (("2"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (expand
                                                     "wf_trace?")
                                                    (("2"
                                                      (flatten)
                                                      (("2"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (flatten)
                            (("2" (inst 1 "(: last(x!1) :)")
                              (("1"
                                (skeep)
                                (("1"
                                  (typepred "suffix_1")
                                  (("1"
                                    (expand "wf_trace?")
                                    (("1"
                                      (flatten)
                                      (("1"
                                        (lemma
                                         "suffix_same_length[TraceState]")
                                        (("1"
                                          (inst
                                           -1
                                           "(: last(x!1) :)"
                                           "suffix_1")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (split)
                                              (("1"
                                                (replace -1 1 rl)
                                                (("1"
                                                  (expand
                                                   "State_Trace")
                                                  (("1"
                                                    (propax)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (expand "State_Trace")
                                                (("2"
                                                  (lemma
                                                   "suffix_length[TraceState]")
                                                  (("2"
                                                    (inst
                                                     -1
                                                     "suffix_1"
                                                     "(: last(x!1) :)")
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (grind)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (split)
                                (("1"
                                  (expand "wf_trace?")
                                  (("1"
                                    (skeep)
                                    (("1"
                                      (typepred "i")
                                      (("1" (grind) nil nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (lemma "suffix_last[TraceState]")
                                  (("2"
                                    (inst
                                     -1
                                     "x!1"
                                     "rdc(x!1)"
                                     "(: last(x!1) :)")
                                    (("2"
                                      (expand "last")
                                      (("2"
                                        (lemma "rdc_rac[TraceState]")
                                        (("2"
                                          (inst -1 "x!1")
                                          (("1"
                                            (expand "rac")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (replace -1)
                                                (("1"
                                                  (lemma
                                                   "suffix_reflexive[TraceState]")
                                                  (("1"
                                                    (inst -1 "x!1")
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (typepred "x!1")
                                            (("2"
                                              (expand "wf_trace?")
                                              (("2" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("3"
                                  (expand "finite_trace?")
                                  (("3" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (flatten)
                      (("2" (iff)
                        (("2" (split)
                          (("1" (flatten)
                            (("1" (skeep)
                              (("1"
                                (inst -1 "(: last(x!1) :)")
                                (("1"
                                  (expand "finite_trace?")
                                  (("1"
                                    (assert)
                                    (("1"
                                      (expand "State_Trace")
                                      (("1"
                                        (skeep)
                                        (("1"
                                          (inst -1 "max(D(last(x!1)))")
                                          (("1"
                                            (typepred "T")
                                            (("1"
                                              (typepred "D(last(x!1))")
                                              (("1"
                                                (skeep)
                                                (("1"
                                                  (replace -2)
                                                  (("1"
                                                    (lemma "max_lem")
                                                    (("1"
                                                      (inst
                                                       -1
                                                       "closed_interval(0, b)"
                                                       "max[real, <=](closed_interval(0, b))")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (inst -1 "T")
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (split)
                                  (("1" (grind) nil nil)
                                   ("2"
                                    (typepred "suffix")
                                    (("2"
                                      (lemma "suffix_supl[TraceState]")
                                      (("2"
                                        (inst-cp
                                         -1
                                         "(: last[TraceState](x!1) :)"
                                         "suffix")
                                        (("2"
                                          (assert)
                                          (("2"
                                            (inst?)
                                            (("2"
                                              (assert)
                                              (("2"
                                                (skeep)
                                                (("2"
                                                  (inst
                                                   1
                                                   "rdc(suffix)")
                                                  (("1"
                                                    (lemma
                                                     "rdc_rac[TraceState]")
                                                    (("1"
                                                      (expand "last")
                                                      (("1"
                                                        (expand "rac")
                                                        (("1"
                                                          (inst?)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (lemma
                                                               "suffix_nth[TraceState]")
                                                              (("1"
                                                                (inst?)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (inst
                                                                     -1
                                                                     "length(suffix) - 1")
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil)
                                                                     ("2"
                                                                      (expand
                                                                       "wf_trace?")
                                                                      (("2"
                                                                        (flatten)
                                                                        (("2"
                                                                          (expand
                                                                           "length")
                                                                          (("2"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (expand
                                                     "wf_trace?")
                                                    (("2"
                                                      (flatten)
                                                      (("2"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (flatten)
                            (("2" (inst 1 "(: last(x!1) :)")
                              (("1"
                                (skeep)
                                (("1"
                                  (typepred "suffix_1")
                                  (("1"
                                    (expand "wf_trace?")
                                    (("1"
                                      (flatten)
                                      (("1"
                                        (lemma
                                         "suffix_same_length[TraceState]")
                                        (("1"
                                          (lemma
                                           "suffix_length[TraceState]")
                                          (("1"
                                            (inst?)
                                            (("1"
                                              (assert)
                                              (("1"
                                                (inst?)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (split)
                                                    (("1"
                                                      (replace -1)
                                                      (("1"
                                                        (replace
                                                         -1
                                                         1
                                                         rl)
                                                        (("1"
                                                          (expand
                                                           "State_Trace")
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (expand
                                                               "finite_trace?")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (inst
                                                                   1
                                                                   "max(D(last(x!1)))")
                                                                  (("1"
                                                                    (skeep)
                                                                    (("1"
                                                                      (typepred
                                                                       "t")
                                                                      (("1"
                                                                        (typepred
                                                                         "D(last(x!1))")
                                                                        (("1"
                                                                          (skeep)
                                                                          (("1"
                                                                            (typepred
                                                                             "max(D(last(x!1)))")
                                                                            (("1"
                                                                              (inst
                                                                               -2
                                                                               "t")
                                                                              (("1"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (grind)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (split)
                                (("1" (grind) nil nil)
                                 ("2"
                                  (lemma "suffix_supl[TraceState]")
                                  (("2"
                                    (inst?)
                                    (("2"
                                      (assert)
                                      (("2"
                                        (inst 1 "rdc(x!1)")
                                        (("2"
                                          (lemma "rdc_rac[TraceState]")
                                          (("2"
                                            (inst?)
                                            (("2"
                                              (expand "rac")
                                              (("2"
                                                (expand "last")
                                                (("2"
                                                  (propax)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("3"
                                  (assert)
                                  (("3" (grind) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (propax) nil nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (DLEVENTUALLY const-decl "bool" ltl_expr nil)
    (DLGLOBALLY const-decl "bool" ltl_expr nil)
    (Environment type-eq-decl nil hp_def nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (State_Trace const-decl "bool" ltl_expr nil)
    (normDLEG const-decl "bool" ltl_expr nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (list type-decl nil list_adt nil)
    (TraceState type-decl nil TraceState_adt nil)
    (max const-decl
         "{a: T | SS(a) AND (FORALL (x: T): SS(x) IMPLIES x <= a)}"
         finite_sets_minmax finite_sets)
    (empty? const-decl "bool" sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (non_empty_finite_set type-eq-decl nil finite_sets nil)
    (D adt-accessor-decl "[(state_diff?) ->
   {D: (dd?) | EXISTS (b: posreal): D = closed_interval(0, b)}]"
     TraceState_adt nil)
    (closed_interval const-decl "(closed_interval?(a, b))" interval_def
     ODEs)
    (dd? const-decl "bool" hp_expr nil)
    (state_diff? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (max_lem formula-decl nil finite_sets_minmax finite_sets)
    (suffix_supl formula-decl nil more_list_props structures)
    (rdc const-decl "list[T]" more_list_props structures)
    (suffix_nth formula-decl nil more_list_props structures)
    (rac const-decl "T" more_list_props structures)
    (rdc_rac formula-decl nil more_list_props structures)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (car adt-accessor-decl "[(cons?) -> T]" list_adt nil)
    (error? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (suffix? def-decl "bool" more_list_props structures)
    (last const-decl "T" more_list_props structures)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (suffix_length formula-decl nil more_list_props structures)
    (length_singleton formula-decl nil more_list_props structures)
    (suffix_same_length formula-decl nil more_list_props structures)
    (suffix_last formula-decl nil more_list_props structures)
    (suffix_reflexive formula-decl nil more_list_props structures))
   shostak))
 (dltl_SEQcap 0
  (dltl_SEQcap-1 nil 3888506957
   ("" (skeep)
    (("" (decompose-equality)
      (("" (iff)
        (("" (split)
          (("1" (flatten)
            (("1" (expand "ALLRUNS_tr" 1)
              (("1" (skeep)
                (("1" (expand "trace_semantic_rel")
                  (("1" (split)
                    (("1" (skeep)
                      (("1" (expand "ALLRUNS_tr" -7 1)
                        (("1" (inst -7 "trace1")
                          (("1" (assert)
                            (("1" (lemma "car_append[TraceState]")
                              (("1"
                                (typepred "trace1")
                                (("1"
                                  (typepred "trace2")
                                  (("1"
                                    (expand "wf_trace?")
                                    (("1"
                                      (flatten)
                                      (("1"
                                        (inst
                                         -5
                                         "cdr(trace2)"
                                         "trace1")
                                        (("1"
                                          (assert)
                                          (("1"
                                            (expand "nth")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (hide -2 -4)
                                                (("1"
                                                  (expand
                                                   "normDLGLOBALLY")
                                                  (("1"
                                                    (replace -4)
                                                    (("1"
                                                      (expand
                                                       "finite_trace?")
                                                      (("1"
                                                        (case
                                                         "cdr(trace2)=null")
                                                        (("1"
                                                          (replace -1)
                                                          (("1"
                                                            (lemma
                                                             "append_null[TraceState]")
                                                            (("1"
                                                              (inst?)
                                                              (("1"
                                                                (replace
                                                                 -1)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (flatten)
                                                                    (("1"
                                                                      (expand
                                                                       "ALLRUNS_tr")
                                                                      (("1"
                                                                        (inst
                                                                         -11
                                                                         "trace2")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (expand
                                                                             "nth")
                                                                            (("1"
                                                                              (lemma
                                                                               "TraceState_STATE_extensionality")
                                                                              (("1"
                                                                                (inst?)
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "last")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "length"
                                                                                       -12)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "length"
                                                                                         -12)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "nth"
                                                                                             -12)
                                                                                            (("1"
                                                                                              (propax)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (assert)
                                                          (("2"
                                                            (lemma
                                                             "last_append[TraceState]")
                                                            (("2"
                                                              (inst?)
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (replace
                                                                   -1)
                                                                  (("2"
                                                                    (lemma
                                                                     "last_cdr[TraceState]")
                                                                    (("2"
                                                                      (inst?)
                                                                      (("2"
                                                                        (replace
                                                                         -1)
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (expand
                                                                             "ALLRUNS_tr")
                                                                            (("2"
                                                                              (flatten)
                                                                              (("2"
                                                                                (inst
                                                                                 -12
                                                                                 "trace2")
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (lemma
                                                                                     "TraceState_STATE_extensionality")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "nth")
                                                                                      (("2"
                                                                                        (inst
                                                                                         -1
                                                                                         "last(trace1)"
                                                                                         "car(trace2)")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (replace
                                                                                             -1)
                                                                                            (("2"
                                                                                              (lemma
                                                                                               "TraceState_STATE_eta")
                                                                                              (("2"
                                                                                                (inst?)
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (split)
                                                                                                    (("1"
                                                                                                      (flatten)
                                                                                                      (("1"
                                                                                                        (split)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (flatten)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "DLGLOBALLY")
                                                                                                                (("1"
                                                                                                                  (postpone)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (flatten)
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (postpone)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (flatten)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (postpone)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (skeep)
                      (("2" (expand "ALLRUNS_tr")
                        (("2" (replace -1)
                          (("2" (inst -8 "trace1")
                            (("2" (assert)
                              (("2"
                                (lemma "nth_append[TraceState]")
                                (("2"
                                  (inst?)
                                  (("2"
                                    (assert)
                                    (("2"
                                      (typepred "trace1")
                                      (("2"
                                        (typepred "trace2")
                                        (("2"
                                          (expand "wf_trace?")
                                          (("2"
                                            (flatten)
                                            (("2"
                                              (expand "length" -5 2)
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (split -5)
                                                  (("1"
                                                    (lift-if)
                                                    (("1"
                                                      (expand
                                                       "length"
                                                       -1
                                                       1)
                                                      (("1"
                                                        (replace -1)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (expand
                                                             "normDLGLOBALLY")
                                                            (("1"
                                                              (expand
                                                               "finite_trace?")
                                                              (("1"
                                                                (flatten)
                                                                (("1"
                                                                  (inst
                                                                   -13
                                                                   "trace2")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (expand
                                                                       "nth"
                                                                       -13)
                                                                      (("1"
                                                                        (replace
                                                                         -12)
                                                                        (("1"
                                                                          (lemma
                                                                           "TraceState_STATE_eta")
                                                                          (("1"
                                                                            (inst?)
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (case
                                                                                 "cdr(trace2)=null")
                                                                                (("1"
                                                                                  (replace
                                                                                   -1)
                                                                                  (("1"
                                                                                    (lemma
                                                                                     "append_null[TraceState]")
                                                                                    (("1"
                                                                                      (inst?)
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "last")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "length"
                                                                                             -16)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "length"
                                                                                               -16)
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "nth"
                                                                                                   -16)
                                                                                                  (("1"
                                                                                                    (propax)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (lemma
                                                                                   "last_append[TraceState]")
                                                                                  (("2"
                                                                                    (inst?)
                                                                                    (("1"
                                                                                      (replace
                                                                                       -1)
                                                                                      (("1"
                                                                                        (lemma
                                                                                         "last_cdr[TraceState]")
                                                                                        (("1"
                                                                                          (inst?)
                                                                                          (("1"
                                                                                            (replace
                                                                                             -1)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (split)
                                                                                                (("1"
                                                                                                  (flatten)
                                                                                                  (("1"
                                                                                                    (split)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (flatten)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (postpone)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (flatten)
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (postpone)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (flatten)
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (postpone)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("3" (flatten)
                      (("3" (expand "ALLRUNS_tr")
                        (("3" (inst -3 "trace")
                          (("3" (assert)
                            (("3" (expand "normDLGLOBALLY")
                              (("3"
                                (expand "finite_trace?")
                                (("3"
                                  (split)
                                  (("1" (assert) nil nil)
                                   ("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (flatten)
            (("2" (expand "ALLRUNS_tr")
              (("2" (skeep)
                (("2" (expand "normDLGLOBALLY" 1 1)
                  (("2" (split)
                    (("1" (flatten)
                      (("1" (split)
                        (("1" (flatten)
                          (("1" (lemma "exists_trace_env")
                            (("1" (inst -1 "B" "state(last(trace_1))")
                              (("1"
                                (skeep)
                                (("1"
                                  (assert)
                                  (("1"
                                    (expand "trace_semantic_rel" -5)
                                    (("1"
                                      (assert)
                                      (("1"
                                        (case "state?(car(trace))")
                                        (("1"
                                          (assert)
                                          (("1"
                                            (typepred "trace")
                                            (("1"
                                              (typepred "trace_1")
                                              (("1"
                                                (expand "wf_trace?")
                                                (("1"
                                                  (flatten)
                                                  (("1"
                                                    (inst
                                                     -10
                                                     "append(trace_1,cdr(trace))")
                                                    (("1"
                                                      (postpone)
                                                      nil
                                                      nil)
                                                     ("2"
                                                      (postpone)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2" (postpone) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (flatten)
                          (("2" (expand "finite_trace?")
                            (("2" (assert) (("2" (postpone) nil nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (flatten)
                      (("2" (inst -1 "trace_1")
                        (("2" (assert)
                          (("2" (expand "trace_semantic_rel" -1 1)
                            (("2" (expand "finite_trace?")
                              (("2"
                                (flatten)
                                (("2"
                                  (assert)
                                  (("2"
                                    (split)
                                    (("1"
                                      (expand "normDLGLOBALLY")
                                      (("1" (propax) nil nil))
                                      nil)
                                     ("2"
                                      (flatten)
                                      (("2" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((HP type-decl nil HP_adt nil)
    (TraceState type-decl nil TraceState_adt nil)
    (list type-decl nil list_adt nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (Environment type-eq-decl nil hp_def nil)
    (ALLRUNS_tr const-decl "bool" ltl_expr nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (normDLGLOBALLY const-decl "bool" ltl_expr nil)
    (seq? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (SEQ adt-constructor-decl "[[HP, HP] -> (seq?)]" HP_adt nil)
    (state adt-accessor-decl "[(state?) -> Environment]" TraceState_adt
     nil)
    (exists_trace_env formula-decl nil trace_semantics nil)
    (rdc const-decl "list[T]" more_list_props structures)
    (length_rdc formula-decl nil more_list_props structures)
    (nth_rdc formula-decl nil more_list_props structures)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (cdr adt-accessor-decl "[(cons?) -> list]" list_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (TraceState_STATE_eta formula-decl nil TraceState_adt nil)
    (null adt-constructor-decl "(null?)" list_adt nil)
    (last const-decl "T" more_list_props structures)
    (last_cdr formula-decl nil more_list_props structures)
    (DLGLOBALLY const-decl "bool" ltl_expr nil)
    (suffix? def-decl "bool" more_list_props structures)
    (State_Trace const-decl "bool" ltl_expr nil)
    (suffix_app formula-decl nil more_list_props structures)
    (caret_nth formula-decl nil more_list_props structures)
    (caret_length formula-decl nil more_list_props structures)
    (list_extensionality formula-decl nil more_list_props structures)
    (nth_append formula-decl nil more_list_props structures)
    (TraceState_STATE_extensionality formula-decl nil TraceState_adt
     nil)
    (suffix_nth formula-decl nil more_list_props structures)
    (append_null_left formula-decl nil more_list_props structures)
    (suffix_supl formula-decl nil more_list_props structures)
    (suffix_length formula-decl nil more_list_props structures)
    (last_append formula-decl nil more_list_props structures)
    (state? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (car adt-accessor-decl "[(cons?) -> T]" list_adt nil)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (car_append formula-decl nil more_list_props structures)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil))
   shostak))
 (dltl_SEQcup 0
  (dltl_SEQcup-1 nil 3889013508
   ("" (skeep)
    (("" (decompose-equality)
      (("" (iff)
        (("" (split)
          (("1" (flatten)
            (("1" (expand "ALLRUNS_tr")
              (("1" (skeep)
                (("1" (expand "trace_semantic_rel" -3)
                  (("1" (split)
                    (("1" (skeep)
                      (("1" (inst -7 "trace1")
                        (("1" (assert)
                          (("1" (expand "nth")
                            (("1" (lemma "car_append[TraceState]")
                              (("1"
                                (inst -1 "cdr(trace2)" "trace1")
                                (("1"
                                  (replace -2 -1 rl)
                                  (("1"
                                    (assert)
                                    (("1"
                                      (expand "normDLEVENTUALLY")
                                      (("1"
                                        (case "finite_trace?(trace1)")
                                        (("1"
                                          (assert)
                                          (("1"
                                            (split 1)
                                            (("1"
                                              (flatten)
                                              (("1"
                                                (split)
                                                (("1"
                                                  (inst -1 "trace2")
                                                  (("1"
                                                    (lemma
                                                     "TraceState_STATE_eta")
                                                    (("1"
                                                      (inst?)
                                                      (("1"
                                                        (replace -1)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (split)
                                                            (("1"
                                                              (flatten)
                                                              (("1"
                                                                (split)
                                                                (("1"
                                                                  (lemma
                                                                   "rac_append[TraceState]")
                                                                  (("1"
                                                                    (case
                                                                     "cdr(trace2)=null")
                                                                    (("1"
                                                                      (replace
                                                                       -1)
                                                                      (("1"
                                                                        (lemma
                                                                         "append_null[TraceState]")
                                                                        (("1"
                                                                          (inst?)
                                                                          (("1"
                                                                            (replace
                                                                             -1)
                                                                            (("1"
                                                                              (replace
                                                                               -10)
                                                                              (("1"
                                                                                (replace
                                                                                 -14)
                                                                                (("1"
                                                                                  (expand
                                                                                   "last")
                                                                                  (("1"
                                                                                    (typepred
                                                                                     "trace2")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "wf_trace?")
                                                                                      (("1"
                                                                                        (flatten)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "length"
                                                                                           -6)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "length"
                                                                                                 -6)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "nth")
                                                                                                  (("1"
                                                                                                    (propax)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (inst
                                                                       -1
                                                                       "trace1"
                                                                       "cdr(trace2)")
                                                                      (("1"
                                                                        (expand
                                                                         "rac")
                                                                        (("1"
                                                                          (replace
                                                                           -8)
                                                                          (("1"
                                                                            (lemma
                                                                             "last_cdr[TraceState]")
                                                                            (("1"
                                                                              (inst
                                                                               -1
                                                                               "trace2")
                                                                              (("1"
                                                                                (expand
                                                                                 "last")
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (typepred
                                                                                   "trace2")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "wf_trace?")
                                                                                    (("2"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (expand
                                                                   "DLEVENTUALLY")
                                                                  (("2"
                                                                    (skeep)
                                                                    (("2"
                                                                      (typepred
                                                                       "suffix")
                                                                      (("2"
                                                                        (inst
                                                                         3
                                                                         "suffix")
                                                                        (("2"
                                                                          (replace
                                                                           -9)
                                                                          (("2"
                                                                            (lemma
                                                                             "suffix_supl[TraceState]")
                                                                            (("2"
                                                                              (inst-cp
                                                                               -1
                                                                               "suffix"
                                                                               "trace2")
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (inst
                                                                                   -1
                                                                                   "suffix"
                                                                                   "append(trace1, cdr(trace2))")
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (skeep)
                                                                                      (("2"
                                                                                        (inst
                                                                                         1
                                                                                         "append(rdc(trace1),L)")
                                                                                        (("2"
                                                                                          (case
                                                                                           "append(append(rdc(trace1), L), suffix) = append(rdc(trace1),append(L, suffix))")
                                                                                          (("1"
                                                                                            (replace
                                                                                             -1)
                                                                                            (("1"
                                                                                              (lemma
                                                                                               "list_extensionality[TraceState]")
                                                                                              (("1"
                                                                                                (replace
                                                                                                 -3)
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -1
                                                                                                   "append(rdc(trace1), trace2)"
                                                                                                   "append(trace1, cdr(trace2))")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (lemma
                                                                                                       "length_append[TraceState]")
                                                                                                      (("1"
                                                                                                        (inst-cp
                                                                                                         -1
                                                                                                         "rdc(trace1)"
                                                                                                         "trace2")
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           -2)
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             -1
                                                                                                             "trace1"
                                                                                                             "cdr(trace2)")
                                                                                                            (("1"
                                                                                                              (replace
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (typepred
                                                                                                                   "trace2")
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "wf_trace?")
                                                                                                                    (("1"
                                                                                                                      (flatten)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "length"
                                                                                                                         1
                                                                                                                         2)
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (lemma
                                                                                                                             "length_rdc[TraceState]")
                                                                                                                            (("1"
                                                                                                                              (typepred
                                                                                                                               "trace1")
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "wf_trace?")
                                                                                                                                (("1"
                                                                                                                                  (flatten)
                                                                                                                                  (("1"
                                                                                                                                    (inst
                                                                                                                                     -3
                                                                                                                                     "trace1")
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      (("1"
                                                                                                                                        (skeep)
                                                                                                                                        (("1"
                                                                                                                                          (lemma
                                                                                                                                           "nth_append[TraceState]")
                                                                                                                                          (("1"
                                                                                                                                            (inst-cp
                                                                                                                                             -1
                                                                                                                                             "rdc(trace1)"
                                                                                                                                             "trace2"
                                                                                                                                             "n")
                                                                                                                                            (("1"
                                                                                                                                              (typepred
                                                                                                                                               "n")
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                (("1"
                                                                                                                                                  (inst
                                                                                                                                                   -2
                                                                                                                                                   "trace1"
                                                                                                                                                   "cdr(trace2)"
                                                                                                                                                   "n")
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    (("1"
                                                                                                                                                      (replace
                                                                                                                                                       -10)
                                                                                                                                                      (("1"
                                                                                                                                                        (replace
                                                                                                                                                         -6)
                                                                                                                                                        (("1"
                                                                                                                                                          (expand
                                                                                                                                                           "length"
                                                                                                                                                           -1
                                                                                                                                                           2)
                                                                                                                                                          (("1"
                                                                                                                                                            (assert)
                                                                                                                                                            (("1"
                                                                                                                                                              (lemma
                                                                                                                                                               "nth_rdc[TraceState]")
                                                                                                                                                              (("1"
                                                                                                                                                                (lift-if)
                                                                                                                                                                (("1"
                                                                                                                                                                  (split
                                                                                                                                                                   -4)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (flatten)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (replace
                                                                                                                                                                         -2)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (replace
                                                                                                                                                                           -5)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (inst
                                                                                                                                                                             -3
                                                                                                                                                                             "trace1"
                                                                                                                                                                             "n")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (assert)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (flatten)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (replace
                                                                                                                                                                       -1)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (split
                                                                                                                                                                         -4)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (flatten)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (case
                                                                                                                                                                             "n=length(trace1)-1")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (replace
                                                                                                                                                                               -3)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (replace
                                                                                                                                                                                 -1)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "nth"
                                                                                                                                                                                     2
                                                                                                                                                                                     1)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (reveal
                                                                                                                                                                                       -)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (grind)
                                                                                                                                                                                          nil
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil)
                                                                                                                                                                             ("2"
                                                                                                                                                                              (assert)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil)
                                                                                                                                                                         ("2"
                                                                                                                                                                          (flatten)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (replace
                                                                                                                                                                             -1)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (expand
                                                                                                                                                                               "nth"
                                                                                                                                                                               3
                                                                                                                                                                               1)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (assert)
                                                                                                                                                                                nil
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (hide-all-but
                                                                                             1)
                                                                                            (("2"
                                                                                              (lemma
                                                                                               "associative_append[TraceState]")
                                                                                              (("2"
                                                                                                (inst?)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (flatten)
                                                              (("2"
                                                                (expand
                                                                 "finite_trace?")
                                                                (("2"
                                                                  (lemma
                                                                   "rac_append[TraceState]")
                                                                  (("2"
                                                                    (case
                                                                     "cdr(trace2)=null")
                                                                    (("1"
                                                                      (expand
                                                                       "last")
                                                                      (("1"
                                                                        (expand
                                                                         "length"
                                                                         1)
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (typepred
                                                                             "trace2")
                                                                            (("1"
                                                                              (expand
                                                                               "wf_trace?")
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "length"
                                                                                     1)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "nth")
                                                                                      (("1"
                                                                                        (propax)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (inst
                                                                       -1
                                                                       "trace1"
                                                                       "cdr(trace2)")
                                                                      (("1"
                                                                        (expand
                                                                         "rac")
                                                                        (("1"
                                                                          (lemma
                                                                           "last_cdr[TraceState]")
                                                                          (("1"
                                                                            (inst
                                                                             -1
                                                                             "trace2")
                                                                            (("1"
                                                                              (expand
                                                                               "last")
                                                                              (("1"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (typepred
                                                                                 "trace2")
                                                                                (("2"
                                                                                  (expand
                                                                                   "wf_trace?")
                                                                                  (("2"
                                                                                    (propax)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("3"
                                                              (decompose-equality)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (replace -5)
                                                  (("2"
                                                    (hide-all-but
                                                     (-1 -10 1 2))
                                                    (("2"
                                                      (expand
                                                       "DLEVENTUALLY")
                                                      (("2"
                                                        (skeep)
                                                        (("2"
                                                          (typepred
                                                           "suffix")
                                                          (("2"
                                                            (inst
                                                             3
                                                             "append(suffix,cdr(trace2))")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (expand
                                                                 "State_Trace")
                                                                (("1"
                                                                  (expand
                                                                   "wf_trace?")
                                                                  (("1"
                                                                    (flatten)
                                                                    (("1"
                                                                      (inst
                                                                       -2
                                                                       "0")
                                                                      (("1"
                                                                        (expand
                                                                         "nth")
                                                                        (("1"
                                                                          (lemma
                                                                           "car_append[TraceState]")
                                                                          (("1"
                                                                            (inst?)
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil)
                                                                             ("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (grind)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (split)
                                                              (("1"
                                                                (typepred
                                                                 "trace2")
                                                                (("1"
                                                                  (expand
                                                                   "wf_trace?")
                                                                  (("1"
                                                                    (lemma
                                                                     "length_append[TraceState]")
                                                                    (("1"
                                                                      (inst?)
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (expand
                                                                           "length"
                                                                           -1
                                                                           3)
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (expand
                                                                                 "length"
                                                                                 -1
                                                                                 1)
                                                                                (("1"
                                                                                  (lift-if)
                                                                                  (("1"
                                                                                    (split)
                                                                                    (("1"
                                                                                      (flatten)
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (flatten)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (skeep)
                                                                                          (("2"
                                                                                            (lemma
                                                                                             "nth_append[TraceState]")
                                                                                            (("2"
                                                                                              (inst?)
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (lift-if)
                                                                                                  (("2"
                                                                                                    (split)
                                                                                                    (("1"
                                                                                                      (flatten)
                                                                                                      (("1"
                                                                                                        (replace
                                                                                                         -2)
                                                                                                        (("1"
                                                                                                          (case
                                                                                                           "i=length(suffix)-1")
                                                                                                          (("1"
                                                                                                            (lemma
                                                                                                             "suffix_nth[TraceState]")
                                                                                                            (("1"
                                                                                                              (inst?)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (inst
                                                                                                                   -1
                                                                                                                   "length(suffix)-1")
                                                                                                                  (("1"
                                                                                                                    (replace
                                                                                                                     -2)
                                                                                                                    (("1"
                                                                                                                      (replace
                                                                                                                       -1)
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (reveal
                                                                                                                           -)
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "last")
                                                                                                                            (("1"
                                                                                                                              (propax)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (inst
                                                                                                             -7
                                                                                                             "i")
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (flatten)
                                                                                                      (("2"
                                                                                                        (replace
                                                                                                         -1)
                                                                                                        (("2"
                                                                                                          (typepred
                                                                                                           "i")
                                                                                                          (("2"
                                                                                                            (inst
                                                                                                             -5
                                                                                                             " i - length(suffix)+1")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "nth"
                                                                                                               -5)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "length"
                                                                                                                 1)
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (lemma
                                                                 "suffix_app[TraceState]")
                                                                (("2"
                                                                  (inst?)
                                                                  (("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("3"
                                                                (lemma
                                                                 "car_append[TraceState]")
                                                                (("3"
                                                                  (inst?)
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil)
                                                                   ("2"
                                                                    (expand
                                                                     "wf_trace?")
                                                                    (("2"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (flatten)
                                              (("2"
                                                (split)
                                                (("1"
                                                  (inst -1 "trace2")
                                                  (("1"
                                                    (lemma
                                                     "TraceState_STATE_eta")
                                                    (("1"
                                                      (inst?)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (split)
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (expand
                                                               "finite_trace?")
                                                              (("1"
                                                                (case
                                                                 "cdr(trace2)=null")
                                                                (("1"
                                                                  (lemma
                                                                   "append_null[TraceState]")
                                                                  (("1"
                                                                    (replace
                                                                     -2)
                                                                    (("1"
                                                                      (inst
                                                                       -1
                                                                       "trace1")
                                                                      (("1"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (lemma
                                                                   "rac_append[TraceState]")
                                                                  (("2"
                                                                    (inst
                                                                     -1
                                                                     "trace1"
                                                                     "cdr(trace2)")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (expand
                                                                         "last")
                                                                        (("1"
                                                                          (expand
                                                                           "rac")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (lemma
                                                                               "last_cdr[TraceState]")
                                                                              (("1"
                                                                                (inst
                                                                                 -1
                                                                                 "trace2")
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "last")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (typepred
                                                                                   "trace2")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "wf_trace?")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (flatten)
                                                            (("2"
                                                              (expand
                                                               "DLEVENTUALLY")
                                                              (("2"
                                                                (skeep)
                                                                (("2"
                                                                  (typepred
                                                                   "suffix")
                                                                  (("2"
                                                                    (inst
                                                                     4
                                                                     "suffix")
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (replace
                                                                         -7)
                                                                        (("2"
                                                                          (hide-all-but
                                                                           (-2
                                                                            -4
                                                                            -12
                                                                            1))
                                                                          (("2"
                                                                            (lemma
                                                                             "suffix_supl[TraceState]")
                                                                            (("2"
                                                                              (inst-cp
                                                                               -1
                                                                               "suffix"
                                                                               "trace2")
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (inst
                                                                                   -1
                                                                                   "suffix"
                                                                                   "append(trace1, cdr(trace2))")
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (hide
                                                                                       2)
                                                                                      (("2"
                                                                                        (skeep)
                                                                                        (("2"
                                                                                          (inst
                                                                                           1
                                                                                           "append(rdc(trace1),L)")
                                                                                          (("2"
                                                                                            (case
                                                                                             "append(append(rdc(trace1), L), suffix) = append(rdc(trace1),append(L, suffix))")
                                                                                            (("1"
                                                                                              (replace
                                                                                               -1)
                                                                                              (("1"
                                                                                                (lemma
                                                                                                 "list_extensionality[TraceState]")
                                                                                                (("1"
                                                                                                  (replace
                                                                                                   -3)
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     -1
                                                                                                     "append(rdc(trace1), trace2)"
                                                                                                     "append(trace1, cdr(trace2))")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (lemma
                                                                                                         "length_append[TraceState]")
                                                                                                        (("1"
                                                                                                          (inst-cp
                                                                                                           -1
                                                                                                           "rdc(trace1)"
                                                                                                           "trace2")
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             -2)
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               -1
                                                                                                               "trace1"
                                                                                                               "cdr(trace2)")
                                                                                                              (("1"
                                                                                                                (replace
                                                                                                                 -1)
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (typepred
                                                                                                                     "trace2")
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "wf_trace?")
                                                                                                                      (("1"
                                                                                                                        (flatten)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "length"
                                                                                                                           1
                                                                                                                           2)
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (lemma
                                                                                                                               "length_rdc[TraceState]")
                                                                                                                              (("1"
                                                                                                                                (typepred
                                                                                                                                 "trace1")
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "wf_trace?")
                                                                                                                                  (("1"
                                                                                                                                    (flatten)
                                                                                                                                    (("1"
                                                                                                                                      (inst
                                                                                                                                       -3
                                                                                                                                       "trace1")
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        (("1"
                                                                                                                                          (skeep)
                                                                                                                                          (("1"
                                                                                                                                            (lemma
                                                                                                                                             "nth_append[TraceState]")
                                                                                                                                            (("1"
                                                                                                                                              (inst-cp
                                                                                                                                               -1
                                                                                                                                               "rdc(trace1)"
                                                                                                                                               "trace2"
                                                                                                                                               "n")
                                                                                                                                              (("1"
                                                                                                                                                (typepred
                                                                                                                                                 "n")
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  (("1"
                                                                                                                                                    (inst
                                                                                                                                                     -2
                                                                                                                                                     "trace1"
                                                                                                                                                     "cdr(trace2)"
                                                                                                                                                     "n")
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      (("1"
                                                                                                                                                        (replace
                                                                                                                                                         -10)
                                                                                                                                                        (("1"
                                                                                                                                                          (replace
                                                                                                                                                           -6)
                                                                                                                                                          (("1"
                                                                                                                                                            (expand
                                                                                                                                                             "length"
                                                                                                                                                             -1
                                                                                                                                                             2)
                                                                                                                                                            (("1"
                                                                                                                                                              (assert)
                                                                                                                                                              (("1"
                                                                                                                                                                (lemma
                                                                                                                                                                 "nth_rdc[TraceState]")
                                                                                                                                                                (("1"
                                                                                                                                                                  (lift-if)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (split
                                                                                                                                                                     -4)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (flatten)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (replace
                                                                                                                                                                           -2)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (replace
                                                                                                                                                                             -5)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (inst
                                                                                                                                                                               -3
                                                                                                                                                                               "trace1"
                                                                                                                                                                               "n")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (assert)
                                                                                                                                                                                nil
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil)
                                                                                                                                                                     ("2"
                                                                                                                                                                      (flatten)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (replace
                                                                                                                                                                         -1)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (split
                                                                                                                                                                           -4)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (flatten)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (case
                                                                                                                                                                               "n=length(trace1)-1")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (replace
                                                                                                                                                                                 -3)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (replace
                                                                                                                                                                                   -1)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "nth"
                                                                                                                                                                                       2
                                                                                                                                                                                       1)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (expand
                                                                                                                                                                                         "last")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (lemma
                                                                                                                                                                                             "TraceState_STATE_extensionality")
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (inst
                                                                                                                                                                                               -1
                                                                                                                                                                                               "car(trace2)"
                                                                                                                                                                                               "nth(trace1, length(trace1) - 1)")
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                nil
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil)
                                                                                                                                                                               ("2"
                                                                                                                                                                                (assert)
                                                                                                                                                                                nil
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil)
                                                                                                                                                                           ("2"
                                                                                                                                                                            (flatten)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (replace
                                                                                                                                                                               -1)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "nth"
                                                                                                                                                                                 3
                                                                                                                                                                                 1)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (hide-all-but
                                                                                               1)
                                                                                              (("2"
                                                                                                (lemma
                                                                                                 "associative_append[TraceState]")
                                                                                                (("2"
                                                                                                  (inst?)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("3"
                                                            (replace
                                                             -1)
                                                            (("3"
                                                              (assert)
                                                              (("3"
                                                                (decompose-equality)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (replace -4)
                                                  (("2"
                                                    (hide-all-but
                                                     (-1 -9 2))
                                                    (("2"
                                                      (expand
                                                       "DLEVENTUALLY")
                                                      (("2"
                                                        (skeep)
                                                        (("2"
                                                          (typepred
                                                           "suffix")
                                                          (("2"
                                                            (inst
                                                             2
                                                             "append(suffix,cdr(trace2))")
                                                            (("1"
                                                              (expand
                                                               "State_Trace")
                                                              (("1"
                                                                (lemma
                                                                 "car_append[TraceState]")
                                                                (("1"
                                                                  (inst?)
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (replace
                                                                       -1)
                                                                      (("1"
                                                                        (propax)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (expand
                                                                     "wf_trace?")
                                                                    (("2"
                                                                      (flatten)
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (lemma
                                                               "suffix_app[TraceState]")
                                                              (("2"
                                                                (inst?)
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (hide
                                                                     -1)
                                                                    (("2"
                                                                      (typepred
                                                                       "trace2")
                                                                      (("2"
                                                                        (expand
                                                                         "wf_trace?")
                                                                        (("2"
                                                                          (flatten)
                                                                          (("2"
                                                                            (split)
                                                                            (("1"
                                                                              (grind)
                                                                              nil
                                                                              nil)
                                                                             ("2"
                                                                              (skeep)
                                                                              (("2"
                                                                                (lemma
                                                                                 "nth_append[TraceState]")
                                                                                (("2"
                                                                                  (inst?)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (typepred
                                                                                       "i")
                                                                                      (("2"
                                                                                        (lemma
                                                                                         "length_append[TraceState]")
                                                                                        (("2"
                                                                                          (inst?)
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (lift-if)
                                                                                              (("2"
                                                                                                (split)
                                                                                                (("1"
                                                                                                  (flatten)
                                                                                                  (("1"
                                                                                                    (case
                                                                                                     "i=length(suffix)-1")
                                                                                                    (("1"
                                                                                                      (lemma
                                                                                                       "suffix_nth[TraceState]")
                                                                                                      (("1"
                                                                                                        (inst?)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             -1
                                                                                                             "length(suffix)-1")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (reveal
                                                                                                                 -)
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "last")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (inst
                                                                                                       -8
                                                                                                       "i")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (flatten)
                                                                                                  (("2"
                                                                                                    (replace
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       -5
                                                                                                       "i - length(suffix)+1")
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "nth"
                                                                                                         -5)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (grind)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("3"
                                                                              (lemma
                                                                               "car_append[TraceState]")
                                                                              (("3"
                                                                                (inst?)
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil)
                                                                                 ("2"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (assert)
                                          (("2"
                                            (expand "finite_trace?")
                                            (("2" (propax) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (flatten)
                      (("2" (inst -3 "trace")
                        (("2" (assert)
                          (("2" (expand "normDLEVENTUALLY")
                            (("2" (split -3)
                              (("1"
                                (flatten)
                                (("1"
                                  (assert)
                                  (("1"
                                    (split)
                                    (("1"
                                      (assert)
                                      (("1"
                                        (expand "finite_trace?")
                                        (("1" (assert) nil nil))
                                        nil))
                                      nil)
                                     ("2" (assert) nil nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (flatten)
                                (("2" (assert) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (flatten)
            (("2" (expand "ALLRUNS_tr")
              (("2" (skeep)
                (("2" (expand "normDLEVENTUALLY")
                  (("2" (split)
                    (("1" (flatten)
                      (("1" (skeep)
                        (("1" (inst -4 "append(trace_1,cdr(trace))")
                          (("1" (lemma "car_append[TraceState]")
                            (("1" (inst?)
                              (("1"
                                (expand "nth")
                                (("1"
                                  (assert)
                                  (("1"
                                    (split -5)
                                    (("1"
                                      (flatten)
                                      (("1"
                                        (expand "finite_trace?")
                                        (("1"
                                          (lemma
                                           "last_append[TraceState]")
                                          (("1"
                                            (case "cdr(trace)=null")
                                            (("1"
                                              (expand "last")
                                              (("1"
                                                (expand "length" 1)
                                                (("1"
                                                  (typepred "trace")
                                                  (("1"
                                                    (expand
                                                     "wf_trace?")
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (expand
                                                           "length"
                                                           1)
                                                          (("1"
                                                            (expand
                                                             "nth"
                                                             1)
                                                            (("1"
                                                              (replace
                                                               -3)
                                                              (("1"
                                                                (lemma
                                                                 "append_null[TraceState]")
                                                                (("1"
                                                                  (inst?)
                                                                  (("1"
                                                                    (replace
                                                                     -1)
                                                                    (("1"
                                                                      (replace
                                                                       -9)
                                                                      (("1"
                                                                        (flatten)
                                                                        (("1"
                                                                          (lemma
                                                                           "TraceState_STATE_eta")
                                                                          (("1"
                                                                            (inst?)
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil)
                                                                             ("2"
                                                                              (typepred
                                                                               "trace_1")
                                                                              (("2"
                                                                                (expand
                                                                                 "wf_trace?")
                                                                                (("2"
                                                                                  (flatten)
                                                                                  (("2"
                                                                                    (grind)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (inst? -1)
                                              (("1"
                                                (lemma
                                                 "last_cdr[TraceState]")
                                                (("1"
                                                  (inst?)
                                                  (("1"
                                                    (replace -1)
                                                    (("1"
                                                      (replace -2)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (flatten)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (expand
                                                               "DLEVENTUALLY")
                                                              (("1"
                                                                (skeep)
                                                                (("1"
                                                                  (typepred
                                                                   "suffix")
                                                                  (("1"
                                                                    (expand
                                                                     "State_Trace")
                                                                    (("1"
                                                                      (lemma
                                                                       "suffix_nth[TraceState]")
                                                                      (("1"
                                                                        (inst?)
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (inst
                                                                             -1
                                                                             "0")
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (expand
                                                                                 "nth"
                                                                                 -1
                                                                                 1)
                                                                                (("1"
                                                                                  (lemma
                                                                                   "nth_append[TraceState]")
                                                                                  (("1"
                                                                                    (inst?)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (lemma
                                                                                         "length_append[TraceState]")
                                                                                        (("1"
                                                                                          (inst?)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (replace
                                                                                               -1)
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (lemma
                                                                                                   "suffix_length[TraceState]")
                                                                                                  (("1"
                                                                                                    (inst?)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           -2)
                                                                                                          (("1"
                                                                                                            (split
                                                                                                             -3)
                                                                                                            (("1"
                                                                                                              (lift-if)
                                                                                                              (("1"
                                                                                                                (replace
                                                                                                                 -4)
                                                                                                                (("1"
                                                                                                                  (split)
                                                                                                                  (("1"
                                                                                                                    (flatten)
                                                                                                                    (("1"
                                                                                                                      (replace
                                                                                                                       -2)
                                                                                                                      (("1"
                                                                                                                        (name
                                                                                                                         "N"
                                                                                                                         "length[TraceState](cdr(trace)) + length[TraceState](trace_1) - length(suffix)")
                                                                                                                        (("1"
                                                                                                                          (replace
                                                                                                                           -1)
                                                                                                                          (("1"
                                                                                                                            (hide
                                                                                                                             -1)
                                                                                                                            (("1"
                                                                                                                              (case
                                                                                                                               "N=length(trace_1)-1")
                                                                                                                              (("1"
                                                                                                                                (replace
                                                                                                                                 -1)
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "last")
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    (("1"
                                                                                                                                      (inst
                                                                                                                                       5
                                                                                                                                       "(: last(trace_1) :)")
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "last")
                                                                                                                                        (("1"
                                                                                                                                          (propax)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (split)
                                                                                                                                        (("1"
                                                                                                                                          (expand
                                                                                                                                           "wf_trace?")
                                                                                                                                          (("1"
                                                                                                                                            (skeep)
                                                                                                                                            (("1"
                                                                                                                                              (typepred
                                                                                                                                               "i")
                                                                                                                                              (("1"
                                                                                                                                                (grind)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (lemma
                                                                                                                                           "suffix_supl[TraceState]")
                                                                                                                                          (("2"
                                                                                                                                            (inst?)
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              (("2"
                                                                                                                                                (inst
                                                                                                                                                 1
                                                                                                                                                 "rdc(trace_1)")
                                                                                                                                                (("2"
                                                                                                                                                  (lemma
                                                                                                                                                   "rdc_rac[TraceState]")
                                                                                                                                                  (("2"
                                                                                                                                                    (inst?)
                                                                                                                                                    (("2"
                                                                                                                                                      (expand
                                                                                                                                                       "rac")
                                                                                                                                                      (("2"
                                                                                                                                                        (expand
                                                                                                                                                         "last")
                                                                                                                                                        (("2"
                                                                                                                                                          (propax)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("3"
                                                                                                                                        (typepred
                                                                                                                                         "trace_1")
                                                                                                                                        (("3"
                                                                                                                                          (expand
                                                                                                                                           "wf_trace?")
                                                                                                                                          (("3"
                                                                                                                                            (flatten)
                                                                                                                                            (("3"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (lemma
                                                                                                                                 "caret_nth[TraceState]")
                                                                                                                                (("2"
                                                                                                                                  (inst
                                                                                                                                   -1
                                                                                                                                   "trace_1"
                                                                                                                                   "_"
                                                                                                                                   "(N,length(trace_1)-1)")
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    (("1"
                                                                                                                                      (inst-cp
                                                                                                                                       -1
                                                                                                                                       "N")
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        (("1"
                                                                                                                                          (replace
                                                                                                                                           -2)
                                                                                                                                          (("1"
                                                                                                                                            (lemma
                                                                                                                                             "caret_length[TraceState]")
                                                                                                                                            (("1"
                                                                                                                                              (inst?)
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                (("1"
                                                                                                                                                  (inst
                                                                                                                                                   6
                                                                                                                                                   "trace_1 ^ (N, length(trace_1) - 1)")
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    (("1"
                                                                                                                                                      (expand
                                                                                                                                                       "nth"
                                                                                                                                                       -3
                                                                                                                                                       2)
                                                                                                                                                      (("1"
                                                                                                                                                        (assert)
                                                                                                                                                        (("1"
                                                                                                                                                          (expand
                                                                                                                                                           "nth"
                                                                                                                                                           -14)
                                                                                                                                                          (("1"
                                                                                                                                                            (propax)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (assert)
                                                                                                                                                    (("2"
                                                                                                                                                      (split)
                                                                                                                                                      (("1"
                                                                                                                                                        (expand
                                                                                                                                                         "wf_trace?")
                                                                                                                                                        (("1"
                                                                                                                                                          (split)
                                                                                                                                                          (("1"
                                                                                                                                                            (expand
                                                                                                                                                             "length"
                                                                                                                                                             -1
                                                                                                                                                             1)
                                                                                                                                                            (("1"
                                                                                                                                                              (assert)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (skeep)
                                                                                                                                                            (("2"
                                                                                                                                                              (lemma
                                                                                                                                                               "caret_nth[TraceState]")
                                                                                                                                                              (("2"
                                                                                                                                                                (inst
                                                                                                                                                                 -1
                                                                                                                                                                 "trace_1"
                                                                                                                                                                 "i+N"
                                                                                                                                                                 "(N,length(trace_1)-1)")
                                                                                                                                                                (("1"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (case
                                                                                                                                                                     "N+i=length(trace_1)-1")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (expand
                                                                                                                                                                       "last")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (assert)
                                                                                                                                                                        nil
                                                                                                                                                                        nil))
                                                                                                                                                                      nil)
                                                                                                                                                                     ("2"
                                                                                                                                                                      (typepred
                                                                                                                                                                       "trace_1")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (expand
                                                                                                                                                                         "wf_trace?")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (flatten)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (inst
                                                                                                                                                                             -2
                                                                                                                                                                             "N+i")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (assert)
                                                                                                                                                                              nil
                                                                                                                                                                              nil)
                                                                                                                                                                             ("2"
                                                                                                                                                                              (assert)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "N"
                                                                                                                                                                                 1)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("2"
                                                                                                                                                                  (typepred
                                                                                                                                                                   "trace_1")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (expand
                                                                                                                                                                     "wf_trace?")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (flatten)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (grind)
                                                                                                                                                                        nil
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("3"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("3"
                                                                                                                                                                    (expand
                                                                                                                                                                     "N")
                                                                                                                                                                    (("3"
                                                                                                                                                                      (expand
                                                                                                                                                                       "length"
                                                                                                                                                                       1
                                                                                                                                                                       3)
                                                                                                                                                                      (("3"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("3"
                                                                                                                                                                          (grind)
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("4"
                                                                                                                                                                  (grind)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("2"
                                                                                                                                                        (lemma
                                                                                                                                                         "suffix_supl[TraceState]")
                                                                                                                                                        (("2"
                                                                                                                                                          (inst?)
                                                                                                                                                          (("1"
                                                                                                                                                            (assert)
                                                                                                                                                            (("1"
                                                                                                                                                              (case
                                                                                                                                                               "N=0")
                                                                                                                                                              (("1"
                                                                                                                                                                (replace
                                                                                                                                                                 -1)
                                                                                                                                                                (("1"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (case
                                                                                                                                                                     "(trace_1 ^ (0, length(trace_1) - 1)) = trace_1")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (replace
                                                                                                                                                                       -1)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (lemma
                                                                                                                                                                         "suffix_reflexive[TraceState]")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (inst?)
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil)
                                                                                                                                                                     ("2"
                                                                                                                                                                      (lemma
                                                                                                                                                                       "list_extensionality[TraceState]")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (inst?)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (skeep)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (lemma
                                                                                                                                                                               "caret_nth[TraceState]")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (inst
                                                                                                                                                                                 -1
                                                                                                                                                                                 "trace_1"
                                                                                                                                                                                 "n"
                                                                                                                                                                                 "(0, length(trace_1) - 1)")
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("2"
                                                                                                                                                                (inst
                                                                                                                                                                 2
                                                                                                                                                                 "trace_1^(0,N-1)")
                                                                                                                                                                (("1"
                                                                                                                                                                  (lemma
                                                                                                                                                                   "list_extensionality[TraceState]")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (inst?)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (lemma
                                                                                                                                                                         "length_append[TraceState]")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (inst
                                                                                                                                                                           -1
                                                                                                                                                                           "trace_1 ^ (0, N - 1)"
                                                                                                                                                                           "^[TraceState] (trace_1, (N, length[TraceState](trace_1) - 1))")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (replace
                                                                                                                                                                             -1)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (lemma
                                                                                                                                                                               "caret_length[TraceState]")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (inst-cp
                                                                                                                                                                                 -1
                                                                                                                                                                                 "trace_1"
                                                                                                                                                                                 "(0,N-1)")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (replace
                                                                                                                                                                                     -4)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (split)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (replace
                                                                                                                                                                                         -1)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (skeep)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (lemma
                                                                                                                                                                                               "nth_append[TraceState]")
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (inst?)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (lift-if)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (replace
                                                                                                                                                                                                       -2)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (split)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (flatten)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (replace
                                                                                                                                                                                                             -2)
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (lemma
                                                                                                                                                                                                               "caret_nth[TraceState]")
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (inst
                                                                                                                                                                                                                 -1
                                                                                                                                                                                                                 "trace_1"
                                                                                                                                                                                                                 "n"
                                                                                                                                                                                                                 "(0, N - 1)")
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                  nil
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil)
                                                                                                                                                                                                         ("2"
                                                                                                                                                                                                          (flatten)
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (replace
                                                                                                                                                                                                             -1)
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (lemma
                                                                                                                                                                                                               "caret_nth[TraceState]")
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (inst
                                                                                                                                                                                                                 -1
                                                                                                                                                                                                                 "trace_1"
                                                                                                                                                                                                                 "n"
                                                                                                                                                                                                                 "(N, length[TraceState](trace_1) - 1)")
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                  nil
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil)
                                                                                                                                                                                       ("2"
                                                                                                                                                                                        (expand
                                                                                                                                                                                         "N")
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          nil
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil)
                                                                                                                                                                                 ("2"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "N")
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    nil
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil)
                                                                                                                                                                           ("2"
                                                                                                                                                                            (typepred
                                                                                                                                                                             "trace_1")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (expand
                                                                                                                                                                               "wf_trace?")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (flatten)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (grind)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil)
                                                                                                                                                                           ("3"
                                                                                                                                                                            (expand
                                                                                                                                                                             "N")
                                                                                                                                                                            (("3"
                                                                                                                                                                              (assert)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil)
                                                                                                                                                                           ("4"
                                                                                                                                                                            (expand
                                                                                                                                                                             "N")
                                                                                                                                                                            (("4"
                                                                                                                                                                              (assert)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil)
                                                                                                                                                                     ("2"
                                                                                                                                                                      (typepred
                                                                                                                                                                       "trace_1")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (expand
                                                                                                                                                                         "wf_trace?")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (flatten)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (grind)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil)
                                                                                                                                                                     ("3"
                                                                                                                                                                      (expand
                                                                                                                                                                       "N")
                                                                                                                                                                      (("3"
                                                                                                                                                                        (assert)
                                                                                                                                                                        nil
                                                                                                                                                                        nil))
                                                                                                                                                                      nil)
                                                                                                                                                                     ("4"
                                                                                                                                                                      (expand
                                                                                                                                                                       "N")
                                                                                                                                                                      (("4"
                                                                                                                                                                        (assert)
                                                                                                                                                                        nil
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("2"
                                                                                                                                                                  (expand
                                                                                                                                                                   "N")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (assert)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (typepred
                                                                                                                                                             "trace_1")
                                                                                                                                                            (("2"
                                                                                                                                                              (expand
                                                                                                                                                               "wf_trace?")
                                                                                                                                                              (("2"
                                                                                                                                                                (flatten)
                                                                                                                                                                (("2"
                                                                                                                                                                  (grind)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("3"
                                                                                                                                                            (expand
                                                                                                                                                             "N")
                                                                                                                                                            (("3"
                                                                                                                                                              (assert)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("3"
                                                                                                                                                        (expand
                                                                                                                                                         "nth"
                                                                                                                                                         -4
                                                                                                                                                         2)
                                                                                                                                                        (("3"
                                                                                                                                                          (replace
                                                                                                                                                           -4
                                                                                                                                                           -1
                                                                                                                                                           rl)
                                                                                                                                                          (("3"
                                                                                                                                                            (typepred
                                                                                                                                                             "trace_1")
                                                                                                                                                            (("3"
                                                                                                                                                              (expand
                                                                                                                                                               "wf_trace?")
                                                                                                                                                              (("3"
                                                                                                                                                                (flatten)
                                                                                                                                                                (("3"
                                                                                                                                                                  (inst
                                                                                                                                                                   -2
                                                                                                                                                                   "N")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (assert)
                                                                                                                                                                    nil
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (expand
                                                                                                                                                                     "N")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (assert)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("3"
                                                                                                                                                    (typepred
                                                                                                                                                     "trace_1")
                                                                                                                                                    (("3"
                                                                                                                                                      (expand
                                                                                                                                                       "wf_trace?")
                                                                                                                                                      (("3"
                                                                                                                                                        (flatten)
                                                                                                                                                        (("3"
                                                                                                                                                          (grind)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("4"
                                                                                                                                                    (assert)
                                                                                                                                                    (("4"
                                                                                                                                                      (grind)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (typepred
                                                                                                                                                 "trace_1")
                                                                                                                                                (("2"
                                                                                                                                                  (expand
                                                                                                                                                   "wf_trace?")
                                                                                                                                                  (("2"
                                                                                                                                                    (flatten)
                                                                                                                                                    (("2"
                                                                                                                                                      (grind)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil)
                                                                                                                                               ("3"
                                                                                                                                                (assert)
                                                                                                                                                (("3"
                                                                                                                                                  (expand
                                                                                                                                                   "N")
                                                                                                                                                  (("3"
                                                                                                                                                    (assert)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (assert)
                                                                                                                                        (("2"
                                                                                                                                          (expand
                                                                                                                                           "N")
                                                                                                                                          (("2"
                                                                                                                                            (hide-all-but
                                                                                                                                             (-3
                                                                                                                                              1))
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (typepred
                                                                                                                                     "trace_1")
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "wf_trace?")
                                                                                                                                      (("2"
                                                                                                                                        (flatten)
                                                                                                                                        (("2"
                                                                                                                                          (grind)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("3"
                                                                                                                                    (expand
                                                                                                                                     "N")
                                                                                                                                    (("3"
                                                                                                                                      (hide-all-but
                                                                                                                                       (-3
                                                                                                                                        1))
                                                                                                                                      (("3"
                                                                                                                                        (assert)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (flatten)
                                                                                                                    (("2"
                                                                                                                      (replace
                                                                                                                       -1)
                                                                                                                      (("2"
                                                                                                                        (lemma
                                                                                                                         "caret_nth[TraceState]")
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -1
                                                                                                                           "trace"
                                                                                                                           "length(trace)-length(suffix)"
                                                                                                                           "(length(trace)-length(suffix),length(trace)-1)")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "wf_trace?")
                                                                                                                              (("1"
                                                                                                                                (flatten)
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  (("1"
                                                                                                                                    (split)
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "length"
                                                                                                                                       -1
                                                                                                                                       1)
                                                                                                                                      (("1"
                                                                                                                                        (typepred
                                                                                                                                         "trace")
                                                                                                                                        (("1"
                                                                                                                                          (expand
                                                                                                                                           "wf_trace?")
                                                                                                                                          (("1"
                                                                                                                                            (flatten)
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              (("1"
                                                                                                                                                (expand
                                                                                                                                                 "nth"
                                                                                                                                                 -3
                                                                                                                                                 1)
                                                                                                                                                (("1"
                                                                                                                                                  (replace
                                                                                                                                                   -3)
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "nth"
                                                                                                                                                     -7)
                                                                                                                                                    (("1"
                                                                                                                                                      (hide
                                                                                                                                                       6)
                                                                                                                                                      (("1"
                                                                                                                                                        (inst
                                                                                                                                                         5
                                                                                                                                                         "trace ^ (length(trace) - length(suffix), length(trace) - 1)")
                                                                                                                                                        (("1"
                                                                                                                                                          (assert)
                                                                                                                                                          (("1"
                                                                                                                                                            (case
                                                                                                                                                             "state?(nth(trace ^
                     (length(trace) - length(suffix), length(trace) - 1),
                    0))")
                                                                                                                                                            (("1"
                                                                                                                                                              (assert)
                                                                                                                                                              nil
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (case
                                                                                                                                                               "length(suffix)=1")
                                                                                                                                                              (("1"
                                                                                                                                                                (replace
                                                                                                                                                                 -1)
                                                                                                                                                                (("1"
                                                                                                                                                                  (expand
                                                                                                                                                                   "last")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (assert)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("2"
                                                                                                                                                                (inst
                                                                                                                                                                 -2
                                                                                                                                                                 "length(trace)-length(suffix)")
                                                                                                                                                                (("1"
                                                                                                                                                                  (expand
                                                                                                                                                                   "length"
                                                                                                                                                                   -2
                                                                                                                                                                   1)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (expand
                                                                                                                                                                     "nth"
                                                                                                                                                                     -2)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("2"
                                                                                                                                                                  (assert)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("3"
                                                                                                                                                              (assert)
                                                                                                                                                              (("3"
                                                                                                                                                                (grind)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("4"
                                                                                                                                                              (assert)
                                                                                                                                                              (("4"
                                                                                                                                                                (expand
                                                                                                                                                                 "length"
                                                                                                                                                                 1
                                                                                                                                                                 1)
                                                                                                                                                                (("4"
                                                                                                                                                                  (assert)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil)
                                                                                                                                                         ("2"
                                                                                                                                                          (split)
                                                                                                                                                          (("1"
                                                                                                                                                            (expand
                                                                                                                                                             "wf_trace?")
                                                                                                                                                            (("1"
                                                                                                                                                              (lemma
                                                                                                                                                               "caret_length[TraceState]")
                                                                                                                                                              (("1"
                                                                                                                                                                (inst?)
                                                                                                                                                                (("1"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (expand
                                                                                                                                                                     "length"
                                                                                                                                                                     -1
                                                                                                                                                                     3)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (expand
                                                                                                                                                                           "length"
                                                                                                                                                                           -1
                                                                                                                                                                           (1
                                                                                                                                                                            5))
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (lift-if)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (split)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil)
                                                                                                                                                                                 ("2"
                                                                                                                                                                                  (flatten)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (skeep)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (lemma
                                                                                                                                                                                         "caret_nth[TraceState]")
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (inst
                                                                                                                                                                                           -1
                                                                                                                                                                                           "trace"
                                                                                                                                                                                           "i+length(trace)-length(suffix)"
                                                                                                                                                                                           "(length(trace)-length(suffix),length(trace)-1)")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (case
                                                                                                                                                                                               "length(trace) - length(suffix) + i = length(trace) - 1")
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (expand
                                                                                                                                                                                                 "last")
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  nil
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil)
                                                                                                                                                                                               ("2"
                                                                                                                                                                                                (inst
                                                                                                                                                                                                 -4
                                                                                                                                                                                                 "length(trace) - length(suffix) + i")
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  nil
                                                                                                                                                                                                  nil)
                                                                                                                                                                                                 ("2"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (typepred
                                                                                                                                                                                                     "i")
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (expand
                                                                                                                                                                                                         "length"
                                                                                                                                                                                                         1
                                                                                                                                                                                                         1)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          nil
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil)
                                                                                                                                                                                           ("2"
                                                                                                                                                                                            (grind)
                                                                                                                                                                                            nil
                                                                                                                                                                                            nil)
                                                                                                                                                                                           ("3"
                                                                                                                                                                                            (expand
                                                                                                                                                                                             "length"
                                                                                                                                                                                             1
                                                                                                                                                                                             1)
                                                                                                                                                                                            (("3"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              nil
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil)
                                                                                                                                                                                           ("4"
                                                                                                                                                                                            (expand
                                                                                                                                                                                             "length"
                                                                                                                                                                                             1
                                                                                                                                                                                             1)
                                                                                                                                                                                            (("4"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              nil
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("2"
                                                                                                                                                                  (grind)
                                                                                                                                                                  nil
                                                                                                                                                                  nil)
                                                                                                                                                                 ("3"
                                                                                                                                                                  (expand
                                                                                                                                                                   "length"
                                                                                                                                                                   1
                                                                                                                                                                   1)
                                                                                                                                                                  (("3"
                                                                                                                                                                    (assert)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (lemma
                                                                                                                                                             "suffix_supl[TraceState]")
                                                                                                                                                            (("2"
                                                                                                                                                              (inst?)
                                                                                                                                                              (("1"
                                                                                                                                                                (assert)
                                                                                                                                                                (("1"
                                                                                                                                                                  (case
                                                                                                                                                                   "length(suffix)=length(trace)")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (replace
                                                                                                                                                                     -1)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (case
                                                                                                                                                                         "^[TraceState](trace, (0, length[TraceState](trace) - 1)) = trace")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (replace
                                                                                                                                                                           -1)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (lemma
                                                                                                                                                                             "suffix_reflexive[TraceState]")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (inst?)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil)
                                                                                                                                                                         ("2"
                                                                                                                                                                          (lemma
                                                                                                                                                                           "list_extensionality[TraceState]")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (inst?)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (assert)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (lemma
                                                                                                                                                                                 "caret_length[TraceState]")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (inst?)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "length"
                                                                                                                                                                                       -1
                                                                                                                                                                                       1)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (skeep)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (lemma
                                                                                                                                                                                             "caret_nth[TraceState]")
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (inst
                                                                                                                                                                                               -1
                                                                                                                                                                                               "trace"
                                                                                                                                                                                               "n"
                                                                                                                                                                                               "(0, length[TraceState](trace) - 1)")
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                nil
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil)
                                                                                                                                                                                   ("2"
                                                                                                                                                                                    (grind)
                                                                                                                                                                                    nil
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil)
                                                                                                                                                                             ("2"
                                                                                                                                                                              (grind)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil)
                                                                                                                                                                         ("3"
                                                                                                                                                                          (grind)
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (inst
                                                                                                                                                                     2
                                                                                                                                                                     "trace^(0,length[TraceState](trace) - length[TraceState](suffix)-1)")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (lemma
                                                                                                                                                                       "list_extensionality[TraceState]")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (inst?)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (hide
                                                                                                                                                                             3
                                                                                                                                                                             4
                                                                                                                                                                             5
                                                                                                                                                                             6
                                                                                                                                                                             7
                                                                                                                                                                             8)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (lemma
                                                                                                                                                                               "length_append[TraceState]")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (inst
                                                                                                                                                                                 -1
                                                                                                                                                                                 "trace ^
                     (0,
                      length[TraceState](trace) - 1 -
                       length[TraceState
](suffix))"
                                                                                                                                                                                 "^[TraceState]
                        (trace,
                         (length[TraceState](trace) -
                          
 length[TraceState](suffix),
                          length[TraceState](trace) - 1))")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (replace
                                                                                                                                                                                     -1)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (lemma
                                                                                                                                                                                       "caret_length[TraceState]")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (inst-cp
                                                                                                                                                                                         -1
                                                                                                                                                                                         "trace"
                                                                                                                                                                                         "(0,
             length[TraceState](trace) - 1 - length[TraceState](suffix))")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (expand
                                                                                                                                                                                             "length"
                                                                                                                                                                                             -2
                                                                                                                                                                                             1)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (replace
                                                                                                                                                                                                 -2)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (inst
                                                                                                                                                                                                   -1
                                                                                                                                                                                                   "trace"
                                                                                                                                                                                                   "(length[TraceState](trace) - length[TraceState](suffix),
                  length[TraceState](trace) - 1)")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (expand
                                                                                                                                                                                                       "length"
                                                                                                                                                                                                       -1
                                                                                                                                                                                                       3)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (split)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (replace
                                                                                                                                                                                                             -1)
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (skeep)
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (lemma
                                                                                                                                                                                                                   "nth_append[TraceState]")
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (inst
                                                                                                                                                                                                                     -1
                                                                                                                                                                                                                     "trace ^ (0, length[TraceState](trace) - 1 - length[TraceState](suffix) )"
                                                                                                                                                                                                                     "^[TraceState] (trace, (length[TraceState
](trace) - length[TraceState](suffix), length[TraceState](trace) - 1))"
                                                                                                                                                                                                                     "n")
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (lift-if)
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (lemma
                                                                                                                                                                                                                           "caret_nth[TraceState]")
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (split)
                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                              (flatten)
                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                (replace
                                                                                                                                                                                                                                 -2)
                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                  (inst
                                                                                                                                                                                                                                   -3
                                                                                                                                                                                                                                   "trace"
                                                                                                                                                                                                                                   "n"
                                                                                                                                                                                                                                   "(0, length[TraceState](trace) - 1 - length[TraceState](suffix))")
                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                                                    nil
                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil)
                                                                                                                                                                                                                             ("2"
                                                                                                                                                                                                                              (flatten)
                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                (replace
                                                                                                                                                                                                                                 -1)
                                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                                  (inst
                                                                                                                                                                                                                                   -2
                                                                                                                                                                                                                                   "trace"
                                                                                                                                                                                                                                   "n"
                                                                                                                                                                                                                                   "(length[TraceState](trace) - length[TraceState](suffix),
                length[TraceState](trace) - 1)")
                                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                                                    nil
                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil)
                                                                                                                                                                                                           ("2"
                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                            nil
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil)
                                                                                                                                                                                         ("2"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "length"
                                                                                                                                                                                           1
                                                                                                                                                                                           1)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            nil
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil)
                                                                                                                                                                                 ("2"
                                                                                                                                                                                  (grind)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil)
                                                                                                                                                                                 ("3"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "length"
                                                                                                                                                                                   1
                                                                                                                                                                                   1)
                                                                                                                                                                                  (("3"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    nil
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil)
                                                                                                                                                                                 ("4"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "length"
                                                                                                                                                                                   1
                                                                                                                                                                                   1)
                                                                                                                                                                                  (("4"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    nil
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil)
                                                                                                                                                                         ("2"
                                                                                                                                                                          (grind)
                                                                                                                                                                          nil
                                                                                                                                                                          nil)
                                                                                                                                                                         ("3"
                                                                                                                                                                          (expand
                                                                                                                                                                           "length"
                                                                                                                                                                           1
                                                                                                                                                                           1)
                                                                                                                                                                          (("3"
                                                                                                                                                                            (assert)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil)
                                                                                                                                                                         ("4"
                                                                                                                                                                          (expand
                                                                                                                                                                           "length"
                                                                                                                                                                           1
                                                                                                                                                                           1)
                                                                                                                                                                          (("4"
                                                                                                                                                                            (assert)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil)
                                                                                                                                                                     ("2"
                                                                                                                                                                      (expand
                                                                                                                                                                       "length"
                                                                                                                                                                       1
                                                                                                                                                                       1)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (assert)
                                                                                                                                                                        nil
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("2"
                                                                                                                                                                (grind)
                                                                                                                                                                nil
                                                                                                                                                                nil)
                                                                                                                                                               ("3"
                                                                                                                                                                (expand
                                                                                                                                                                 "length"
                                                                                                                                                                 1
                                                                                                                                                                 1)
                                                                                                                                                                (("3"
                                                                                                                                                                  (assert)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("3"
                                                                                                                                                            (assert)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil)
                                                                                                                                                         ("3"
                                                                                                                                                          (assert)
                                                                                                                                                          (("3"
                                                                                                                                                            (grind)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil)
                                                                                                                                                         ("4"
                                                                                                                                                          (expand
                                                                                                                                                           "length"
                                                                                                                                                           1
                                                                                                                                                           1)
                                                                                                                                                          (("4"
                                                                                                                                                            (assert)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (assert)
                                                                                                                                      (("2"
                                                                                                                                        (grind)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("3"
                                                                                                                                      (grind)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (typepred
                                                                                                                             "trace")
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "wf_trace?")
                                                                                                                              (("2"
                                                                                                                                (flatten)
                                                                                                                                (("2"
                                                                                                                                  (grind)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("3"
                                                                                                                            (expand
                                                                                                                             "length"
                                                                                                                             1
                                                                                                                             1)
                                                                                                                            (("3"
                                                                                                                              (typepred
                                                                                                                               "trace")
                                                                                                                              (("3"
                                                                                                                                (expand
                                                                                                                                 "wf_trace?")
                                                                                                                                (("3"
                                                                                                                                  (flatten)
                                                                                                                                  (("3"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "wf_trace?")
                                                                                                                (("2"
                                                                                                                  (flatten)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "length"
                                                                                                                     1
                                                                                                                     3)
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (lemma
                                                                                       "suffix_length[TraceState]")
                                                                                      (("2"
                                                                                        (inst?)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (expand
                                                                               "wf_trace?")
                                                                              (("2"
                                                                                (flatten)
                                                                                (("2"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (typepred "trace")
                                                    (("2"
                                                      (expand
                                                       "wf_trace?")
                                                      (("2"
                                                        (flatten)
                                                        (("2"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (flatten)
                                      (("2"
                                        (expand "finite_trace?")
                                        (("2"
                                          (lemma
                                           "last_append[TraceState]")
                                          (("2"
                                            (case "cdr(trace)=null")
                                            (("1"
                                              (expand "last")
                                              (("1"
                                                (expand "length" 2)
                                                (("1"
                                                  (typepred "trace")
                                                  (("1"
                                                    (expand
                                                     "wf_trace?")
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (expand
                                                           "length"
                                                           2)
                                                          (("1"
                                                            (expand
                                                             "nth"
                                                             2)
                                                            (("1"
                                                              (replace
                                                               -3)
                                                              (("1"
                                                                (lemma
                                                                 "append_null[TraceState]")
                                                                (("1"
                                                                  (inst?)
                                                                  (("1"
                                                                    (replace
                                                                     -1)
                                                                    (("1"
                                                                      (propax)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (inst? -1)
                                              (("1"
                                                (lemma
                                                 "last_cdr[TraceState]")
                                                (("1"
                                                  (inst?)
                                                  (("1"
                                                    (replace -1)
                                                    (("1"
                                                      (replace -2)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (expand
                                                           "DLEVENTUALLY")
                                                          (("1"
                                                            (skeep)
                                                            (("1"
                                                              (typepred
                                                               "suffix")
                                                              (("1"
                                                                (expand
                                                                 "State_Trace")
                                                                (("1"
                                                                  (lemma
                                                                   "suffix_nth[TraceState]")
                                                                  (("1"
                                                                    (inst?)
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (inst
                                                                         -1
                                                                         "0")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (expand
                                                                             "nth"
                                                                             -1
                                                                             1)
                                                                            (("1"
                                                                              (lemma
                                                                               "nth_append[TraceState]")
                                                                              (("1"
                                                                                (inst?)
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (lemma
                                                                                     "length_append[TraceState]")
                                                                                    (("1"
                                                                                      (inst?)
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (replace
                                                                                           -1)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (lemma
                                                                                               "suffix_length[TraceState]")
                                                                                              (("1"
                                                                                                (inst?)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -2)
                                                                                                      (("1"
                                                                                                        (split
                                                                                                         -3)
                                                                                                        (("1"
                                                                                                          (lift-if)
                                                                                                          (("1"
                                                                                                            (split)
                                                                                                            (("1"
                                                                                                              (flatten)
                                                                                                              (("1"
                                                                                                                (replace
                                                                                                                 -2)
                                                                                                                (("1"
                                                                                                                  (name
                                                                                                                   "N"
                                                                                                                   "length[TraceState](cdr(trace)) + length[TraceState](trace_1) - length(suffix)")
                                                                                                                  (("1"
                                                                                                                    (replace
                                                                                                                     -1)
                                                                                                                    (("1"
                                                                                                                      (hide
                                                                                                                       -1)
                                                                                                                      (("1"
                                                                                                                        (case
                                                                                                                         "N=length(trace_1)-1")
                                                                                                                        (("1"
                                                                                                                          (replace
                                                                                                                           -1)
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "last")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (inst
                                                                                                                                 5
                                                                                                                                 "(: last(trace_1) :)")
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "last")
                                                                                                                                  (("1"
                                                                                                                                    (propax)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (split)
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "wf_trace?")
                                                                                                                                    (("1"
                                                                                                                                      (skeep)
                                                                                                                                      (("1"
                                                                                                                                        (typepred
                                                                                                                                         "i")
                                                                                                                                        (("1"
                                                                                                                                          (grind)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (lemma
                                                                                                                                     "suffix_supl[TraceState]")
                                                                                                                                    (("2"
                                                                                                                                      (inst?)
                                                                                                                                      (("2"
                                                                                                                                        (assert)
                                                                                                                                        (("2"
                                                                                                                                          (inst
                                                                                                                                           1
                                                                                                                                           "rdc(trace_1)")
                                                                                                                                          (("2"
                                                                                                                                            (lemma
                                                                                                                                             "rdc_rac[TraceState]")
                                                                                                                                            (("2"
                                                                                                                                              (inst?)
                                                                                                                                              (("2"
                                                                                                                                                (expand
                                                                                                                                                 "rac")
                                                                                                                                                (("2"
                                                                                                                                                  (expand
                                                                                                                                                   "last")
                                                                                                                                                  (("2"
                                                                                                                                                    (propax)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("3"
                                                                                                                                  (typepred
                                                                                                                                   "trace_1")
                                                                                                                                  (("3"
                                                                                                                                    (expand
                                                                                                                                     "wf_trace?")
                                                                                                                                    (("3"
                                                                                                                                      (flatten)
                                                                                                                                      (("3"
                                                                                                                                        (assert)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (lemma
                                                                                                                           "caret_nth[TraceState]")
                                                                                                                          (("2"
                                                                                                                            (inst
                                                                                                                             -1
                                                                                                                             "trace_1"
                                                                                                                             "_"
                                                                                                                             "(N,length(trace_1)-1)")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (inst-cp
                                                                                                                                 -1
                                                                                                                                 "N")
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  (("1"
                                                                                                                                    (replace
                                                                                                                                     -2)
                                                                                                                                    (("1"
                                                                                                                                      (lemma
                                                                                                                                       "caret_length[TraceState]")
                                                                                                                                      (("1"
                                                                                                                                        (inst?)
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          (("1"
                                                                                                                                            (inst
                                                                                                                                             6
                                                                                                                                             "trace_1 ^ (N, length(trace_1) - 1)")
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              (("1"
                                                                                                                                                (expand
                                                                                                                                                 "nth"
                                                                                                                                                 -3
                                                                                                                                                 2)
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "nth"
                                                                                                                                                     -8)
                                                                                                                                                    (("1"
                                                                                                                                                      (replace
                                                                                                                                                       -8)
                                                                                                                                                      (("1"
                                                                                                                                                        (propax)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (assert)
                                                                                                                                              (("2"
                                                                                                                                                (split)
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "wf_trace?")
                                                                                                                                                  (("1"
                                                                                                                                                    (split)
                                                                                                                                                    (("1"
                                                                                                                                                      (expand
                                                                                                                                                       "length"
                                                                                                                                                       -1
                                                                                                                                                       1)
                                                                                                                                                      (("1"
                                                                                                                                                        (assert)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (skeep)
                                                                                                                                                      (("2"
                                                                                                                                                        (lemma
                                                                                                                                                         "caret_nth[TraceState]")
                                                                                                                                                        (("2"
                                                                                                                                                          (inst
                                                                                                                                                           -1
                                                                                                                                                           "trace_1"
                                                                                                                                                           "i+N"
                                                                                                                                                           "(N,length(trace_1)-1)")
                                                                                                                                                          (("1"
                                                                                                                                                            (assert)
                                                                                                                                                            (("1"
                                                                                                                                                              (case
                                                                                                                                                               "N+i=length(trace_1)-1")
                                                                                                                                                              (("1"
                                                                                                                                                                (expand
                                                                                                                                                                 "last")
                                                                                                                                                                (("1"
                                                                                                                                                                  (assert)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("2"
                                                                                                                                                                (typepred
                                                                                                                                                                 "trace_1")
                                                                                                                                                                (("2"
                                                                                                                                                                  (expand
                                                                                                                                                                   "wf_trace?")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (flatten)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (inst
                                                                                                                                                                       -2
                                                                                                                                                                       "N+i")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (assert)
                                                                                                                                                                        nil
                                                                                                                                                                        nil)
                                                                                                                                                                       ("2"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (expand
                                                                                                                                                                           "N"
                                                                                                                                                                           1)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (assert)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (typepred
                                                                                                                                                             "trace_1")
                                                                                                                                                            (("2"
                                                                                                                                                              (grind)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("3"
                                                                                                                                                            (assert)
                                                                                                                                                            (("3"
                                                                                                                                                              (expand
                                                                                                                                                               "N")
                                                                                                                                                              (("3"
                                                                                                                                                                (expand
                                                                                                                                                                 "length"
                                                                                                                                                                 1
                                                                                                                                                                 3)
                                                                                                                                                                (("3"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("3"
                                                                                                                                                                    (grind)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("4"
                                                                                                                                                            (grind)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (lemma
                                                                                                                                                   "suffix_supl[TraceState]")
                                                                                                                                                  (("2"
                                                                                                                                                    (inst?)
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      (("1"
                                                                                                                                                        (case
                                                                                                                                                         "N=0")
                                                                                                                                                        (("1"
                                                                                                                                                          (replace
                                                                                                                                                           -1)
                                                                                                                                                          (("1"
                                                                                                                                                            (assert)
                                                                                                                                                            (("1"
                                                                                                                                                              (case
                                                                                                                                                               "(trace_1 ^ (0, length(trace_1) - 1)) = trace_1")
                                                                                                                                                              (("1"
                                                                                                                                                                (replace
                                                                                                                                                                 -1)
                                                                                                                                                                (("1"
                                                                                                                                                                  (lemma
                                                                                                                                                                   "suffix_reflexive[TraceState]")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (inst?)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("2"
                                                                                                                                                                (lemma
                                                                                                                                                                 "list_extensionality[TraceState]")
                                                                                                                                                                (("2"
                                                                                                                                                                  (inst?)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (skeep)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (lemma
                                                                                                                                                                         "caret_nth[TraceState]")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (inst
                                                                                                                                                                           -1
                                                                                                                                                                           "trace_1"
                                                                                                                                                                           "n"
                                                                                                                                                                           "(0, length(trace_1) - 1)")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (assert)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil)
                                                                                                                                                         ("2"
                                                                                                                                                          (inst
                                                                                                                                                           2
                                                                                                                                                           "trace_1^(0,N-1)")
                                                                                                                                                          (("1"
                                                                                                                                                            (lemma
                                                                                                                                                             "list_extensionality[TraceState]")
                                                                                                                                                            (("1"
                                                                                                                                                              (inst?)
                                                                                                                                                              (("1"
                                                                                                                                                                (assert)
                                                                                                                                                                (("1"
                                                                                                                                                                  (lemma
                                                                                                                                                                   "length_append[TraceState]")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (inst
                                                                                                                                                                     -1
                                                                                                                                                                     "trace_1 ^ (0, N - 1)"
                                                                                                                                                                     "^[TraceState] (trace_1, (N, length[TraceState](trace_1) - 1))")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (replace
                                                                                                                                                                       -1)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (lemma
                                                                                                                                                                         "caret_length[TraceState]")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (inst-cp
                                                                                                                                                                           -1
                                                                                                                                                                           "trace_1"
                                                                                                                                                                           "(0,N-1)")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (replace
                                                                                                                                                                               -4)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (split)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (replace
                                                                                                                                                                                   -1)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (skeep)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (lemma
                                                                                                                                                                                         "nth_append[TraceState]")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (inst?)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (lift-if)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (replace
                                                                                                                                                                                                 -2)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (split)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (flatten)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (replace
                                                                                                                                                                                                       -2)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (lemma
                                                                                                                                                                                                         "caret_nth[TraceState]")
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (inst
                                                                                                                                                                                                           -1
                                                                                                                                                                                                           "trace_1"
                                                                                                                                                                                                           "n"
                                                                                                                                                                                                           "(0, N - 1)")
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                            nil
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil)
                                                                                                                                                                                                   ("2"
                                                                                                                                                                                                    (flatten)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (replace
                                                                                                                                                                                                       -1)
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (lemma
                                                                                                                                                                                                         "caret_nth[TraceState]")
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (inst
                                                                                                                                                                                                           -1
                                                                                                                                                                                                           "trace_1"
                                                                                                                                                                                                           "n"
                                                                                                                                                                                                           "(N, length[TraceState](trace_1) - 1)")
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                            nil
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil)
                                                                                                                                                                                 ("2"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "N")
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    nil
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil)
                                                                                                                                                                           ("2"
                                                                                                                                                                            (expand
                                                                                                                                                                             "N")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (assert)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil)
                                                                                                                                                                     ("2"
                                                                                                                                                                      (typepred
                                                                                                                                                                       "trace_1")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (expand
                                                                                                                                                                         "wf_trace?")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (flatten)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (grind)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil)
                                                                                                                                                                     ("3"
                                                                                                                                                                      (expand
                                                                                                                                                                       "N")
                                                                                                                                                                      (("3"
                                                                                                                                                                        (assert)
                                                                                                                                                                        nil
                                                                                                                                                                        nil))
                                                                                                                                                                      nil)
                                                                                                                                                                     ("4"
                                                                                                                                                                      (expand
                                                                                                                                                                       "N")
                                                                                                                                                                      (("4"
                                                                                                                                                                        (assert)
                                                                                                                                                                        nil
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("2"
                                                                                                                                                                (typepred
                                                                                                                                                                 "trace_1")
                                                                                                                                                                (("2"
                                                                                                                                                                  (expand
                                                                                                                                                                   "wf_trace?")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (flatten)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (grind)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("3"
                                                                                                                                                                (expand
                                                                                                                                                                 "N")
                                                                                                                                                                (("3"
                                                                                                                                                                  (assert)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("4"
                                                                                                                                                                (expand
                                                                                                                                                                 "N")
                                                                                                                                                                (("4"
                                                                                                                                                                  (assert)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (expand
                                                                                                                                                             "N")
                                                                                                                                                            (("2"
                                                                                                                                                              (assert)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (typepred
                                                                                                                                                       "trace_1")
                                                                                                                                                      (("2"
                                                                                                                                                        (expand
                                                                                                                                                         "wf_trace?")
                                                                                                                                                        (("2"
                                                                                                                                                          (flatten)
                                                                                                                                                          (("2"
                                                                                                                                                            (grind)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("3"
                                                                                                                                                      (expand
                                                                                                                                                       "N")
                                                                                                                                                      (("3"
                                                                                                                                                        (assert)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("3"
                                                                                                                                                  (expand
                                                                                                                                                   "nth"
                                                                                                                                                   -4
                                                                                                                                                   2)
                                                                                                                                                  (("3"
                                                                                                                                                    (replace
                                                                                                                                                     -4
                                                                                                                                                     -1
                                                                                                                                                     rl)
                                                                                                                                                    (("3"
                                                                                                                                                      (typepred
                                                                                                                                                       "trace_1")
                                                                                                                                                      (("3"
                                                                                                                                                        (expand
                                                                                                                                                         "wf_trace?")
                                                                                                                                                        (("3"
                                                                                                                                                          (flatten)
                                                                                                                                                          (("3"
                                                                                                                                                            (inst
                                                                                                                                                             -2
                                                                                                                                                             "N")
                                                                                                                                                            (("1"
                                                                                                                                                              (assert)
                                                                                                                                                              nil
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (expand
                                                                                                                                                               "N")
                                                                                                                                                              (("2"
                                                                                                                                                                (assert)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("3"
                                                                                                                                              (typepred
                                                                                                                                               "trace_1")
                                                                                                                                              (("3"
                                                                                                                                                (expand
                                                                                                                                                 "wf_trace?")
                                                                                                                                                (("3"
                                                                                                                                                  (flatten)
                                                                                                                                                  (("3"
                                                                                                                                                    (grind)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("4"
                                                                                                                                              (assert)
                                                                                                                                              (("4"
                                                                                                                                                (grind)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (typepred
                                                                                                                                           "trace_1")
                                                                                                                                          (("2"
                                                                                                                                            (expand
                                                                                                                                             "wf_trace?")
                                                                                                                                            (("2"
                                                                                                                                              (flatten)
                                                                                                                                              (("2"
                                                                                                                                                (grind)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("3"
                                                                                                                                          (assert)
                                                                                                                                          (("3"
                                                                                                                                            (expand
                                                                                                                                             "N")
                                                                                                                                            (("3"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (assert)
                                                                                                                                  (("2"
                                                                                                                                    (expand
                                                                                                                                     "N")
                                                                                                                                    (("2"
                                                                                                                                      (hide-all-but
                                                                                                                                       (-3
                                                                                                                                        1))
                                                                                                                                      (("2"
                                                                                                                                        (assert)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (typepred
                                                                                                                               "trace_1")
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "wf_trace?")
                                                                                                                                (("2"
                                                                                                                                  (flatten)
                                                                                                                                  (("2"
                                                                                                                                    (grind)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("3"
                                                                                                                              (expand
                                                                                                                               "N")
                                                                                                                              (("3"
                                                                                                                                (hide-all-but
                                                                                                                                 (-3
                                                                                                                                  1))
                                                                                                                                (("3"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (flatten)
                                                                                                              (("2"
                                                                                                                (replace
                                                                                                                 -1)
                                                                                                                (("2"
                                                                                                                  (lemma
                                                                                                                   "caret_nth[TraceState]")
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     -1
                                                                                                                     "trace"
                                                                                                                     "length(trace)-length(suffix)"
                                                                                                                     "(length(trace)-length(suffix),length(trace)-1)")
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "wf_trace?")
                                                                                                                        (("1"
                                                                                                                          (flatten)
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (split)
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "length"
                                                                                                                                 -1
                                                                                                                                 1)
                                                                                                                                (("1"
                                                                                                                                  (typepred
                                                                                                                                   "trace")
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "wf_trace?")
                                                                                                                                    (("1"
                                                                                                                                      (flatten)
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        (("1"
                                                                                                                                          (expand
                                                                                                                                           "nth"
                                                                                                                                           -3
                                                                                                                                           1)
                                                                                                                                          (("1"
                                                                                                                                            (replace
                                                                                                                                             -3)
                                                                                                                                            (("1"
                                                                                                                                              (expand
                                                                                                                                               "nth"
                                                                                                                                               -7)
                                                                                                                                              (("1"
                                                                                                                                                (hide
                                                                                                                                                 6)
                                                                                                                                                (("1"
                                                                                                                                                  (inst
                                                                                                                                                   5
                                                                                                                                                   "trace ^ (length(trace) - length(suffix), length(trace) - 1)")
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    (("1"
                                                                                                                                                      (case
                                                                                                                                                       "state?(nth(trace ^ (length(trace) - length(suffix), length(trace) - 1), 0))")
                                                                                                                                                      (("1"
                                                                                                                                                        (assert)
                                                                                                                                                        nil
                                                                                                                                                        nil)
                                                                                                                                                       ("2"
                                                                                                                                                        (case
                                                                                                                                                         "length(suffix)=1")
                                                                                                                                                        (("1"
                                                                                                                                                          (replace
                                                                                                                                                           -1)
                                                                                                                                                          (("1"
                                                                                                                                                            (expand
                                                                                                                                                             "last")
                                                                                                                                                            (("1"
                                                                                                                                                              (assert)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil)
                                                                                                                                                         ("2"
                                                                                                                                                          (inst
                                                                                                                                                           -2
                                                                                                                                                           "length(trace)-length(suffix)")
                                                                                                                                                          (("1"
                                                                                                                                                            (expand
                                                                                                                                                             "length"
                                                                                                                                                             -2
                                                                                                                                                             1)
                                                                                                                                                            (("1"
                                                                                                                                                              (expand
                                                                                                                                                               "nth"
                                                                                                                                                               -2)
                                                                                                                                                              (("1"
                                                                                                                                                                (assert)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (assert)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("3"
                                                                                                                                                        (assert)
                                                                                                                                                        (("3"
                                                                                                                                                          (grind)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("4"
                                                                                                                                                        (assert)
                                                                                                                                                        (("4"
                                                                                                                                                          (expand
                                                                                                                                                           "length"
                                                                                                                                                           1
                                                                                                                                                           1)
                                                                                                                                                          (("4"
                                                                                                                                                            (assert)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (split)
                                                                                                                                                    (("1"
                                                                                                                                                      (expand
                                                                                                                                                       "wf_trace?")
                                                                                                                                                      (("1"
                                                                                                                                                        (lemma
                                                                                                                                                         "caret_length[TraceState]")
                                                                                                                                                        (("1"
                                                                                                                                                          (inst?)
                                                                                                                                                          (("1"
                                                                                                                                                            (assert)
                                                                                                                                                            (("1"
                                                                                                                                                              (expand
                                                                                                                                                               "length"
                                                                                                                                                               -1
                                                                                                                                                               3)
                                                                                                                                                              (("1"
                                                                                                                                                                (assert)
                                                                                                                                                                (("1"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (expand
                                                                                                                                                                     "length"
                                                                                                                                                                     -1
                                                                                                                                                                     (1
                                                                                                                                                                      5))
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (lift-if)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (split)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            nil
                                                                                                                                                                            nil)
                                                                                                                                                                           ("2"
                                                                                                                                                                            (flatten)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (assert)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (skeep)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (lemma
                                                                                                                                                                                   "caret_nth[TraceState]")
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (inst
                                                                                                                                                                                     -1
                                                                                                                                                                                     "trace"
                                                                                                                                                                                     "i+length(trace)-length(suffix)"
                                                                                                                                                                                     "(length(trace)-length(suffix),length(trace)-1)")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (case
                                                                                                                                                                                         "length(trace) - length(suffix) + i = length(trace) - 1")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "last")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            nil
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil)
                                                                                                                                                                                         ("2"
                                                                                                                                                                                          (inst
                                                                                                                                                                                           -4
                                                                                                                                                                                           "length(trace) - length(suffix) + i")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            nil
                                                                                                                                                                                            nil)
                                                                                                                                                                                           ("2"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (typepred
                                                                                                                                                                                               "i")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (expand
                                                                                                                                                                                                   "length"
                                                                                                                                                                                                   1
                                                                                                                                                                                                   1)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    nil
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil)
                                                                                                                                                                                     ("2"
                                                                                                                                                                                      (grind)
                                                                                                                                                                                      nil
                                                                                                                                                                                      nil)
                                                                                                                                                                                     ("3"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "length"
                                                                                                                                                                                       1
                                                                                                                                                                                       1)
                                                                                                                                                                                      (("3"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        nil
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil)
                                                                                                                                                                                     ("4"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "length"
                                                                                                                                                                                       1
                                                                                                                                                                                       1)
                                                                                                                                                                                      (("4"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        nil
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (grind)
                                                                                                                                                            nil
                                                                                                                                                            nil)
                                                                                                                                                           ("3"
                                                                                                                                                            (expand
                                                                                                                                                             "length"
                                                                                                                                                             1
                                                                                                                                                             1)
                                                                                                                                                            (("3"
                                                                                                                                                              (assert)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (lemma
                                                                                                                                                       "suffix_supl[TraceState]")
                                                                                                                                                      (("2"
                                                                                                                                                        (inst?)
                                                                                                                                                        (("1"
                                                                                                                                                          (assert)
                                                                                                                                                          (("1"
                                                                                                                                                            (case
                                                                                                                                                             "length(suffix)=length(trace)")
                                                                                                                                                            (("1"
                                                                                                                                                              (replace
                                                                                                                                                               -1)
                                                                                                                                                              (("1"
                                                                                                                                                                (assert)
                                                                                                                                                                (("1"
                                                                                                                                                                  (case
                                                                                                                                                                   "^[TraceState](trace, (0, length[TraceState](trace) - 1)) = trace")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (replace
                                                                                                                                                                     -1)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (lemma
                                                                                                                                                                       "suffix_reflexive[TraceState]")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (inst?)
                                                                                                                                                                        nil
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (lemma
                                                                                                                                                                     "list_extensionality[TraceState]")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (inst?)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (lemma
                                                                                                                                                                           "caret_length[TraceState]")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (inst?)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (assert)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "length"
                                                                                                                                                                                 -1
                                                                                                                                                                                 1)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (skeep)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (lemma
                                                                                                                                                                                       "caret_nth[TraceState]")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (inst
                                                                                                                                                                                         -1
                                                                                                                                                                                         "trace"
                                                                                                                                                                                         "n"
                                                                                                                                                                                         "(0, length[TraceState](trace) - 1)")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          nil
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil)
                                                                                                                                                                             ("2"
                                                                                                                                                                              (grind)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil)
                                                                                                                                                                       ("2"
                                                                                                                                                                        (grind)
                                                                                                                                                                        nil
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("3"
                                                                                                                                                                    (grind)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (inst
                                                                                                                                                               2
                                                                                                                                                               "trace^(0,length[TraceState](trace) - length[TraceState](suffix)-1)")
                                                                                                                                                              (("1"
                                                                                                                                                                (lemma
                                                                                                                                                                 "list_extensionality[TraceState]")
                                                                                                                                                                (("1"
                                                                                                                                                                  (inst?)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (hide
                                                                                                                                                                       3
                                                                                                                                                                       4
                                                                                                                                                                       5
                                                                                                                                                                       6
                                                                                                                                                                       7
                                                                                                                                                                       8)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (lemma
                                                                                                                                                                         "length_append[TraceState]")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (inst
                                                                                                                                                                           -1
                                                                                                                                                                           "trace ^ (0, length[TraceState](trace) - 1 - length[TraceState ](suffix))"
                                                                                                                                                                           "^[TraceState] (trace, (length[TraceState](trace) - length[TraceState](suffix), length[TraceState](trace) - 1))")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (replace
                                                                                                                                                                               -1)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (lemma
                                                                                                                                                                                 "caret_length[TraceState]")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (inst-cp
                                                                                                                                                                                   -1
                                                                                                                                                                                   "trace"
                                                                                                                                                                                   "(0, length[TraceState](trace) - 1 - length[TraceState](suffix))")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "length"
                                                                                                                                                                                       -2
                                                                                                                                                                                       1)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (replace
                                                                                                                                                                                           -2)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (inst
                                                                                                                                                                                             -1
                                                                                                                                                                                             "trace"
                                                                                                                                                                                             "(length[TraceState](trace) - length[TraceState](suffix), length[TraceState](trace) - 1)")
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (expand
                                                                                                                                                                                                 "length"
                                                                                                                                                                                                 -1
                                                                                                                                                                                                 3)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (split)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (replace
                                                                                                                                                                                                       -1)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (skeep)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (lemma
                                                                                                                                                                                                             "nth_append[TraceState]")
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (inst
                                                                                                                                                                                                               -1
                                                                                                                                                                                                               "trace ^ (0, length[TraceState](trace) - 1 - length[TraceState](suffix) )"
                                                                                                                                                                                                               "^[TraceState] (trace, (length[TraceState ](trace) - length[TraceState](suffix), length[TraceState](trace) - 1))"
                                                                                                                                                                                                               "n")
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (lift-if)
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (lemma
                                                                                                                                                                                                                     "caret_nth[TraceState]")
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (split)
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (flatten)
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (replace
                                                                                                                                                                                                                           -2)
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (inst
                                                                                                                                                                                                                             -3
                                                                                                                                                                                                                             "trace"
                                                                                                                                                                                                                             "n"
                                                                                                                                                                                                                             "(0, length[TraceState](trace) - 1 - length[TraceState](suffix))")
                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                                              nil
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil)
                                                                                                                                                                                                                       ("2"
                                                                                                                                                                                                                        (flatten)
                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                          (replace
                                                                                                                                                                                                                           -1)
                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                            (inst
                                                                                                                                                                                                                             -2
                                                                                                                                                                                                                             "trace"
                                                                                                                                                                                                                             "n"
                                                                                                                                                                                                                             "(length[TraceState](trace) - length[TraceState](suffix), length[TraceState](trace) - 1)")
                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                                              nil
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      nil
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil)
                                                                                                                                                                                   ("2"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "length"
                                                                                                                                                                                     1
                                                                                                                                                                                     1)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      nil
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil)
                                                                                                                                                                           ("2"
                                                                                                                                                                            (grind)
                                                                                                                                                                            nil
                                                                                                                                                                            nil)
                                                                                                                                                                           ("3"
                                                                                                                                                                            (expand
                                                                                                                                                                             "length"
                                                                                                                                                                             1
                                                                                                                                                                             1)
                                                                                                                                                                            (("3"
                                                                                                                                                                              (assert)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil)
                                                                                                                                                                           ("4"
                                                                                                                                                                            (expand
                                                                                                                                                                             "length"
                                                                                                                                                                             1
                                                                                                                                                                             1)
                                                                                                                                                                            (("4"
                                                                                                                                                                              (assert)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (grind)
                                                                                                                                                                    nil
                                                                                                                                                                    nil)
                                                                                                                                                                   ("3"
                                                                                                                                                                    (expand
                                                                                                                                                                     "length"
                                                                                                                                                                     1
                                                                                                                                                                     1)
                                                                                                                                                                    (("3"
                                                                                                                                                                      (assert)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("4"
                                                                                                                                                                    (expand
                                                                                                                                                                     "length"
                                                                                                                                                                     1
                                                                                                                                                                     1)
                                                                                                                                                                    (("4"
                                                                                                                                                                      (assert)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("2"
                                                                                                                                                                (expand
                                                                                                                                                                 "length"
                                                                                                                                                                 1
                                                                                                                                                                 1)
                                                                                                                                                                (("2"
                                                                                                                                                                  (assert)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil)
                                                                                                                                                         ("2"
                                                                                                                                                          (grind)
                                                                                                                                                          nil
                                                                                                                                                          nil)
                                                                                                                                                         ("3"
                                                                                                                                                          (expand
                                                                                                                                                           "length"
                                                                                                                                                           1
                                                                                                                                                           1)
                                                                                                                                                          (("3"
                                                                                                                                                            (assert)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("3"
                                                                                                                                                      (assert)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("3"
                                                                                                                                                    (assert)
                                                                                                                                                    (("3"
                                                                                                                                                      (grind)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("4"
                                                                                                                                                    (expand
                                                                                                                                                     "length"
                                                                                                                                                     1
                                                                                                                                                     1)
                                                                                                                                                    (("4"
                                                                                                                                                      (assert)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (assert)
                                                                                                                                (("2"
                                                                                                                                  (grind)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("3"
                                                                                                                                (grind)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (typepred
                                                                                                                       "trace")
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "wf_trace?")
                                                                                                                        (("2"
                                                                                                                          (grind)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("3"
                                                                                                                      (expand
                                                                                                                       "length"
                                                                                                                       1
                                                                                                                       1)
                                                                                                                      (("3"
                                                                                                                        (typepred
                                                                                                                         "trace")
                                                                                                                        (("3"
                                                                                                                          (expand
                                                                                                                           "wf_trace?")
                                                                                                                          (("3"
                                                                                                                            (assert)
                                                                                                                            (("3"
                                                                                                                              (flatten)
                                                                                                                              (("3"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (expand
                                                                                                           "wf_trace?")
                                                                                                          (("2"
                                                                                                            (flatten)
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "length"
                                                                                                               1
                                                                                                               3)
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (lemma
                                                                                   "suffix_length[TraceState]")
                                                                                  (("2"
                                                                                    (inst?)
                                                                                    (("2"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (expand
                                                                           "wf_trace?")
                                                                          (("2"
                                                                            (flatten)
                                                                            (("2"
                                                                              (grind)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (typepred "trace")
                                                    (("2"
                                                      (expand
                                                       "wf_trace?")
                                                      (("2"
                                                        (flatten)
                                                        (("2"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("3"
                                      (hide 2 3)
                                      (("3"
                                        (expand "trace_semantic_rel" 1)
                                        (("3"
                                          (flatten)
                                          (("3"
                                            (expand "finite_trace?")
                                            (("3"
                                              (typepred "trace")
                                              (("3"
                                                (inst
                                                 1
                                                 "trace_1"
                                                 "trace")
                                                (("3"
                                                  (assert)
                                                  (("3"
                                                    (replace -4)
                                                    (("3"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (expand "wf_trace?")
                            (("2" (split)
                              (("1"
                                (typepred "trace_1")
                                (("1"
                                  (expand "wf_trace?")
                                  (("1" (grind) nil nil))
                                  nil))
                                nil)
                               ("2"
                                (skeep)
                                (("2"
                                  (typepred "i")
                                  (("2"
                                    (typepred "trace_1")
                                    (("2"
                                      (typepred "trace")
                                      (("2"
                                        (expand "wf_trace?")
                                        (("2"
                                          (flatten)
                                          (("2"
                                            (lemma
                                             "nth_append[TraceState]")
                                            (("2"
                                              (inst?)
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (lemma
                                                   "length_append[TraceState]")
                                                  (("2"
                                                    (inst?)
                                                    (("2"
                                                      (replace -1)
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (lift-if)
                                                          (("2"
                                                            (split)
                                                            (("1"
                                                              (flatten)
                                                              (("1"
                                                                (replace
                                                                 -2)
                                                                (("1"
                                                                  (case
                                                                   "i=length(trace_1)-1")
                                                                  (("1"
                                                                    (replace
                                                                     -1)
                                                                    (("1"
                                                                      (expand
                                                                       "last")
                                                                      (("1"
                                                                        (expand
                                                                         "finite_trace?")
                                                                        (("1"
                                                                          (expand
                                                                           "last")
                                                                          (("1"
                                                                            (propax)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (inst
                                                                     -7
                                                                     "i")
                                                                    (("2"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (flatten)
                                                              (("2"
                                                                (replace
                                                                 -1)
                                                                (("2"
                                                                  (inst
                                                                   -4
                                                                   "i-length(trace_1)+1")
                                                                  (("1"
                                                                    (expand
                                                                     "nth"
                                                                     -4)
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (grind)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (flatten)
                      (("2" (inst -1 "trace_1")
                        (("2" (assert)
                          (("2" (expand "trace_semantic_rel" 3)
                            (("2" (flatten)
                              (("2"
                                (expand "finite_trace?")
                                (("2" (assert) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((HP type-decl nil HP_adt nil)
    (TraceState type-decl nil TraceState_adt nil)
    (list type-decl nil list_adt nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (Environment type-eq-decl nil hp_def nil)
    (ALLRUNS_tr const-decl "bool" ltl_expr nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (normDLEVENTUALLY const-decl "bool" ltl_expr nil)
    (seq? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (SEQ adt-constructor-decl "[[HP, HP] -> (seq?)]" HP_adt nil)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil)
    (car_append formula-decl nil more_list_props structures)
    (suffix_nth formula-decl nil more_list_props structures)
    (suffix_app formula-decl nil more_list_props structures)
    (last const-decl "T" more_list_props structures)
    (state? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (TraceState_STATE_extensionality formula-decl nil TraceState_adt
     nil)
    (DLEVENTUALLY const-decl "bool" ltl_expr nil)
    (suffix? def-decl "bool" more_list_props structures)
    (error? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (car adt-accessor-decl "[(cons?) -> T]" list_adt nil)
    (list_extensionality formula-decl nil more_list_props structures)
    (nth_append formula-decl nil more_list_props structures)
    (nth_rdc formula-decl nil more_list_props structures)
    (State_Trace const-decl "bool" ltl_expr nil)
    (STATE adt-constructor-decl "[Environment -> (state?)]"
     TraceState_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (length_rdc formula-decl nil more_list_props structures)
    (associative_append formula-decl nil even_more_list_props nil)
    (rdc const-decl "list[T]" more_list_props structures)
    (suffix_supl formula-decl nil more_list_props structures)
    (rac_append formula-decl nil more_list_props structures)
    (last_cdr formula-decl nil more_list_props structures)
    (rac const-decl "T" more_list_props structures)
    (null adt-constructor-decl "(null?)" list_adt nil)
    (TraceState_STATE_eta formula-decl nil TraceState_adt nil)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (cdr adt-accessor-decl "[(cons?) -> list]" list_adt nil)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (last_append formula-decl nil more_list_props structures)
    (suffix_length formula-decl nil more_list_props structures)
    (rdc_rac formula-decl nil more_list_props structures)
    (suffix_reflexive formula-decl nil more_list_props structures)
    (caret_length formula-decl nil more_list_props structures)
    (caret_nth formula-decl nil more_list_props structures))
   shostak))
 (dltl_SEQtriangleEG 0
  (dltl_SEQtriangleEG-1 nil 3889025577
   ("" (skeep)
    (("" (decompose-equality)
      (("" (iff)
        (("" (split)
          (("1" (flatten)
            (("1" (expand "ALLRUNS_tr")
              (("1" (skeep)
                (("1" (expand "trace_semantic_rel" -3)
                  (("1" (split)
                    (("1" (skeep)
                      (("1" (inst -7 "trace1")
                        (("1" (assert)
                          (("1" (expand "nth")
                            (("1" (lemma "car_append[TraceState]")
                              (("1"
                                (inst?)
                                (("1"
                                  (assert)
                                  (("1"
                                    (expand "normDLEG" -8)
                                    (("1"
                                      (expand "finite_trace?")
                                      (("1"
                                        (inst -8 "trace2")
                                        (("1"
                                          (assert)
                                          (("1"
                                            (replace -7)
                                            (("1"
                                              (lemma
                                               "TraceState_STATE_eta")
                                              (("1"
                                                (inst?)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (expand "normDLEG")
                                                    (("1"
                                                      (case
                                                       "last(trace2) = last(trace)")
                                                      (("1"
                                                        (split)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (expand
                                                               "finite_trace?")
                                                              (("1"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (flatten)
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (expand
                                                               "finite_trace?")
                                                              (("2"
                                                                (expand
                                                                 "DLEVENTUALLY")
                                                                (("2"
                                                                  (skeep)
                                                                  (("2"
                                                                    (typepred
                                                                     "suffix")
                                                                    (("2"
                                                                      (inst
                                                                       3
                                                                       "suffix")
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (lemma
                                                                           "suffix_supl[TraceState]")
                                                                          (("2"
                                                                            (inst-cp
                                                                             -1
                                                                             "suffix"
                                                                             "trace2")
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (inst
                                                                                 -1
                                                                                 "suffix"
                                                                                 "trace")
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (skeep)
                                                                                    (("2"
                                                                                      (inst
                                                                                       1
                                                                                       "append(rdc(trace1),L)")
                                                                                      (("2"
                                                                                        (replace
                                                                                         -8)
                                                                                        (("2"
                                                                                          (hide-all-but
                                                                                           (-13
                                                                                            -11
                                                                                            -12
                                                                                            -1
                                                                                            1))
                                                                                          (("2"
                                                                                            (lemma
                                                                                             "list_extensionality[TraceState]")
                                                                                            (("2"
                                                                                              (inst?)
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (hide
                                                                                                   2)
                                                                                                  (("2"
                                                                                                    (lemma
                                                                                                     "length_append[TraceState]")
                                                                                                    (("2"
                                                                                                      (inst-cp
                                                                                                       -1
                                                                                                       "append(rdc(trace1), L)"
                                                                                                       "suffix")
                                                                                                      (("2"
                                                                                                        (inst-cp
                                                                                                         -1
                                                                                                         "rdc(trace1)"
                                                                                                         "L")
                                                                                                        (("2"
                                                                                                          (inst-cp
                                                                                                           -1
                                                                                                           "trace1"
                                                                                                           "cdr(trace2)")
                                                                                                          (("2"
                                                                                                            (inst
                                                                                                             -1
                                                                                                             "L"
                                                                                                             "suffix")
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (replace
                                                                                                                 -5)
                                                                                                                (("2"
                                                                                                                  (replace
                                                                                                                   -4)
                                                                                                                  (("2"
                                                                                                                    (replace
                                                                                                                     -3)
                                                                                                                    (("2"
                                                                                                                      (replace
                                                                                                                       -2)
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "length"
                                                                                                                         -1
                                                                                                                         1)
                                                                                                                        (("2"
                                                                                                                          (typepred
                                                                                                                           "trace2")
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "wf_trace?")
                                                                                                                            (("2"
                                                                                                                              (flatten)
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                (("2"
                                                                                                                                  (lemma
                                                                                                                                   "length_rdc[TraceState]")
                                                                                                                                  (("2"
                                                                                                                                    (inst?)
                                                                                                                                    (("2"
                                                                                                                                      (assert)
                                                                                                                                      (("2"
                                                                                                                                        (skeep)
                                                                                                                                        (("2"
                                                                                                                                          (lemma
                                                                                                                                           "nth_append[TraceState]")
                                                                                                                                          (("2"
                                                                                                                                            (inst-cp
                                                                                                                                             -1
                                                                                                                                             "append(rdc(trace1), L)"
                                                                                                                                             "suffix"
                                                                                                                                             "n")
                                                                                                                                            (("2"
                                                                                                                                              (inst-cp
                                                                                                                                               -1
                                                                                                                                               "trace1"
                                                                                                                                               "cdr(trace2)"
                                                                                                                                               "n")
                                                                                                                                              (("2"
                                                                                                                                                (replace
                                                                                                                                                 -9)
                                                                                                                                                (("2"
                                                                                                                                                  (typepred
                                                                                                                                                   "n")
                                                                                                                                                  (("2"
                                                                                                                                                    (assert)
                                                                                                                                                    (("2"
                                                                                                                                                      (lift-if)
                                                                                                                                                      (("2"
                                                                                                                                                        (split
                                                                                                                                                         -4)
                                                                                                                                                        (("1"
                                                                                                                                                          (flatten)
                                                                                                                                                          (("1"
                                                                                                                                                            (assert)
                                                                                                                                                            (("1"
                                                                                                                                                              (case
                                                                                                                                                               "n=length(trace1) - 1")
                                                                                                                                                              (("1"
                                                                                                                                                                (replace
                                                                                                                                                                 -1)
                                                                                                                                                                (("1"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (replace
                                                                                                                                                                     -3)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (replace
                                                                                                                                                                       -6)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (inst
                                                                                                                                                                         -5
                                                                                                                                                                         "rdc(trace1)"
                                                                                                                                                                         "L"
                                                                                                                                                                         "n")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (replace
                                                                                                                                                                             -1)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (replace
                                                                                                                                                                               -5)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (replace
                                                                                                                                                                                 -7)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (lemma
                                                                                                                                                                                     "nth_append[TraceState]")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (inst
                                                                                                                                                                                       -1
                                                                                                                                                                                       "L"
                                                                                                                                                                                       "suffix"
                                                                                                                                                                                       "0")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (replace
                                                                                                                                                                                           -15)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (expand
                                                                                                                                                                                             "nth"
                                                                                                                                                                                             -1)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (expand
                                                                                                                                                                                               "last")
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (expand
                                                                                                                                                                                                 "nth"
                                                                                                                                                                                                 1
                                                                                                                                                                                                 1)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (replace
                                                                                                                                                                                                   -1)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (hide-all-but
                                                                                                                                                                                                       (-18
                                                                                                                                                                                                        -17
                                                                                                                                                                                                        -16
                                                                                                                                                                                                        1))
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (grind)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (decompose-equality)
                                                                                                                                                                                                          nil
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("2"
                                                                                                                                                                (assert)
                                                                                                                                                                (("2"
                                                                                                                                                                  (case
                                                                                                                                                                   "n < length(trace1)-1")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (replace
                                                                                                                                                                       -3)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (replace
                                                                                                                                                                         -6)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (inst
                                                                                                                                                                           -5
                                                                                                                                                                           "rdc(trace1)"
                                                                                                                                                                           "L"
                                                                                                                                                                           "n")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (replace
                                                                                                                                                                               -5)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (lemma
                                                                                                                                                                                 "nth_rdc[TraceState]")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (inst?)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    nil
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (replace
                                                                                                                                                                       -2)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (replace
                                                                                                                                                                         -5)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (inst
                                                                                                                                                                           -4
                                                                                                                                                                           "rdc(trace1)"
                                                                                                                                                                           "L"
                                                                                                                                                                           "n")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (replace
                                                                                                                                                                               -4)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (lemma
                                                                                                                                                                                   "nth_append[TraceState]")
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (inst
                                                                                                                                                                                     -1
                                                                                                                                                                                     "L"
                                                                                                                                                                                     "suffix"
                                                                                                                                                                                     "n+1-length(trace1)")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (replace
                                                                                                                                                                                         -14)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "nth"
                                                                                                                                                                                           -1
                                                                                                                                                                                           1)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            nil
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil)
                                                                                                                                                         ("2"
                                                                                                                                                          (flatten)
                                                                                                                                                          (("2"
                                                                                                                                                            (assert)
                                                                                                                                                            (("2"
                                                                                                                                                              (replace
                                                                                                                                                               -1)
                                                                                                                                                              (("2"
                                                                                                                                                                (split
                                                                                                                                                                 -4)
                                                                                                                                                                (("1"
                                                                                                                                                                  (flatten)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (replace
                                                                                                                                                                     -2)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (replace
                                                                                                                                                                       -6)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (case
                                                                                                                                                                           "n=length(trace1) - 1")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (replace
                                                                                                                                                                             -1)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (assert)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "nth"
                                                                                                                                                                                 2
                                                                                                                                                                                 1)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (inst
                                                                                                                                                                                   -6
                                                                                                                                                                                   "L"
                                                                                                                                                                                   "suffix"
                                                                                                                                                                                   "length(L)")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (replace
                                                                                                                                                                                       -14)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (case
                                                                                                                                                                                         "length(L) =0")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (replace
                                                                                                                                                                                           -1)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (expand
                                                                                                                                                                                             "nth"
                                                                                                                                                                                             -7)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (replace
                                                                                                                                                                                               -7)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (expand
                                                                                                                                                                                                   "last")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (hide
                                                                                                                                                                                                     1)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (hide-all-but
                                                                                                                                                                                                       (1
                                                                                                                                                                                                        -18
                                                                                                                                                                                                        -17
                                                                                                                                                                                                        -16))
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (decompose-equality)
                                                                                                                                                                                                          nil
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil)
                                                                                                                                                                                         ("2"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          nil
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil)
                                                                                                                                                                           ("2"
                                                                                                                                                                            (assert)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("2"
                                                                                                                                                                  (flatten)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (replace
                                                                                                                                                                     -1)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (inst
                                                                                                                                                                       -4
                                                                                                                                                                       "L"
                                                                                                                                                                       "suffix"
                                                                                                                                                                       "-1 * length[TraceState](rdc(trace1)) + n")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (replace
                                                                                                                                                                           -12)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (expand
                                                                                                                                                                             "nth"
                                                                                                                                                                             -4
                                                                                                                                                                             1)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (assert)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (case
                                                         "cdr(trace2)=null")
                                                        (("1"
                                                          (replace -1)
                                                          (("1"
                                                            (lemma
                                                             "append_null[TraceState]")
                                                            (("1"
                                                              (inst?)
                                                              (("1"
                                                                (replace
                                                                 -1)
                                                                (("1"
                                                                  (replace
                                                                   -4)
                                                                  (("1"
                                                                    (expand
                                                                     "last"
                                                                     1
                                                                     1)
                                                                    (("1"
                                                                      (expand
                                                                       "length")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (typepred
                                                                           "trace2")
                                                                          (("1"
                                                                            (expand
                                                                             "wf_trace?")
                                                                            (("1"
                                                                              (flatten)
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (expand
                                                                                   "length")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "nth")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (grind)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (lemma
                                                           "last_append[TraceState]")
                                                          (("2"
                                                            (inst?)
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (lemma
                                                                 "last_cdr[TraceState]")
                                                                (("1"
                                                                  (inst?)
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil)
                                                                   ("2"
                                                                    (typepred
                                                                     "trace2")
                                                                    (("2"
                                                                      (expand
                                                                       "wf_trace?")
                                                                      (("2"
                                                                        (flatten)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("3"
                                                        (assert)
                                                        (("3"
                                                          (typepred
                                                           "trace")
                                                          (("3"
                                                            (expand
                                                             "wf_trace?")
                                                            (("3"
                                                              (propax)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("4"
                                                        (typepred
                                                         "trace2")
                                                        (("4"
                                                          (expand
                                                           "wf_trace?")
                                                          (("4"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (flatten)
                      (("2" (inst -3 "trace")
                        (("2" (assert)
                          (("2" (expand "normDLEG")
                            (("2" (expand "finite_trace?")
                              (("2"
                                (split -1)
                                (("1" (assert) nil nil)
                                 ("2" (assert) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (flatten)
            (("2" (expand "ALLRUNS_tr")
              (("2" (skeep)
                (("2" (expand "normDLEG")
                  (("2" (split)
                    (("1" (flatten)
                      (("1" (skeep)
                        (("1" (expand "trace_semantic_rel" -4)
                          (("1" (split)
                            (("1" (flatten)
                              (("1"
                                (inst -5 "append(trace_1, cdr(trace))")
                                (("1"
                                  (assert)
                                  (("1"
                                    (expand "nth" -5 1)
                                    (("1"
                                      (expand "nth" -6)
                                      (("1"
                                        (lemma
                                         "car_append[TraceState]")
                                        (("1"
                                          (inst?)
                                          (("1"
                                            (assert)
                                            (("1"
                                              (split)
                                              (("1"
                                                (flatten)
                                                (("1"
                                                  (case
                                                   "cdr(trace)=null")
                                                  (("1"
                                                    (expand
                                                     "finite_trace?")
                                                    (("1"
                                                      (lemma
                                                       "append_null[TraceState]")
                                                      (("1"
                                                        (replace -2)
                                                        (("1"
                                                          (inst?)
                                                          (("1"
                                                            (replace
                                                             -1)
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (expand
                                                                 "nth")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (expand
                                                                     "last"
                                                                     1
                                                                     1)
                                                                    (("1"
                                                                      (expand
                                                                       "length")
                                                                      (("1"
                                                                        (typepred
                                                                         "trace")
                                                                        (("1"
                                                                          (expand
                                                                           "wf_trace?")
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (expand
                                                                                 "length")
                                                                                (("1"
                                                                                  (expand
                                                                                   "nth")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (replace
                                                                                       -9)
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (lemma
                                                     "last_append[TraceState]")
                                                    (("2"
                                                      (inst?)
                                                      (("1"
                                                        (lemma
                                                         "last_cdr[TraceState]")
                                                        (("1"
                                                          (inst?)
                                                          (("1"
                                                            (replace
                                                             -1)
                                                            (("1"
                                                              (replace
                                                               -2)
                                                              (("1"
                                                                (propax)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (typepred
                                                             "trace")
                                                            (("2"
                                                              (expand
                                                               "wf_trace?")
                                                              (("2"
                                                                (flatten)
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (flatten)
                                                (("2"
                                                  (expand
                                                   "finite_trace?")
                                                  (("2"
                                                    (case
                                                     "cdr(trace)=null")
                                                    (("1"
                                                      (lemma
                                                       "append_null[TraceState]")
                                                      (("1"
                                                        (replace -2)
                                                        (("1"
                                                          (inst?)
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (lemma
                                                       "last_append[TraceState]")
                                                      (("2"
                                                        (inst?)
                                                        (("1"
                                                          (lemma
                                                           "last_cdr[TraceState]")
                                                          (("1"
                                                            (inst?)
                                                            (("1"
                                                              (replace
                                                               -1)
                                                              (("1"
                                                                (replace
                                                                 -2)
                                                                (("1"
                                                                  (propax)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (typepred
                                                               "trace")
                                                              (("2"
                                                                (expand
                                                                 "wf_trace?")
                                                                (("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("3"
                                                (flatten)
                                                (("3"
                                                  (inst
                                                   1
                                                   "trace_1"
                                                   "trace")
                                                  (("3"
                                                    (assert)
                                                    (("3"
                                                      (expand
                                                       "finite_trace?")
                                                      (("3"
                                                        (assert)
                                                        (("3"
                                                          (expand
                                                           "nth")
                                                          (("3"
                                                            (assert)
                                                            (("3"
                                                              (replace
                                                               -4)
                                                              (("3"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (expand "wf_trace?")
                                  (("2"
                                    (split)
                                    (("1"
                                      (typepred "trace_1")
                                      (("1"
                                        (typepred "trace")
                                        (("1"
                                          (expand "wf_trace?")
                                          (("1"
                                            (flatten)
                                            (("1" (grind) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (skeep)
                                      (("2"
                                        (lemma
                                         "nth_append[TraceState]")
                                        (("2"
                                          (inst?)
                                          (("2"
                                            (assert)
                                            (("2"
                                              (typepred "i")
                                              (("2"
                                                (lemma
                                                 "length_append[TraceState]")
                                                (("2"
                                                  (inst?)
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (lift-if)
                                                      (("2"
                                                        (split)
                                                        (("1"
                                                          (flatten)
                                                          (("1"
                                                            (replace
                                                             -2)
                                                            (("1"
                                                              (case
                                                               "i=length(trace_1)-1")
                                                              (("1"
                                                                (expand
                                                                 "finite_trace?")
                                                                (("1"
                                                                  (expand
                                                                   "last")
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (typepred
                                                                 "trace_1")
                                                                (("2"
                                                                  (expand
                                                                   "wf_trace?")
                                                                  (("2"
                                                                    (flatten)
                                                                    (("2"
                                                                      (inst
                                                                       -2
                                                                       "i")
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (flatten)
                                                          (("2"
                                                            (replace
                                                             -1)
                                                            (("2"
                                                              (typepred
                                                               "trace")
                                                              (("2"
                                                                (expand
                                                                 "wf_trace?")
                                                                (("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (inst
                                                                     -2
                                                                     "i-length(trace_1)+1")
                                                                    (("1"
                                                                      (expand
                                                                       "nth"
                                                                       -2)
                                                                      (("1"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (grind)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (flatten)
                              (("2"
                                (inst -4 "append(trace_1, cdr(trace))")
                                (("1"
                                  (assert)
                                  (("1"
                                    (expand "nth" -4 1)
                                    (("1"
                                      (expand "nth" -5)
                                      (("1"
                                        (lemma
                                         "car_append[TraceState]")
                                        (("1"
                                          (inst?)
                                          (("1"
                                            (assert)
                                            (("1"
                                              (split)
                                              (("1"
                                                (flatten)
                                                (("1"
                                                  (case
                                                   "cdr(trace)=null")
                                                  (("1"
                                                    (expand
                                                     "finite_trace?")
                                                    (("1"
                                                      (lemma
                                                       "append_null[TraceState]")
                                                      (("1"
                                                        (replace -2)
                                                        (("1"
                                                          (inst?)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (expand
                                                               "nth")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (expand
                                                                   "last"
                                                                   1
                                                                   1)
                                                                  (("1"
                                                                    (expand
                                                                     "length")
                                                                    (("1"
                                                                      (typepred
                                                                       "trace")
                                                                      (("1"
                                                                        (expand
                                                                         "wf_trace?")
                                                                        (("1"
                                                                          (flatten)
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (expand
                                                                               "length")
                                                                              (("1"
                                                                                (expand
                                                                                 "nth")
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (lemma
                                                     "last_append[TraceState]")
                                                    (("2"
                                                      (inst?)
                                                      (("1"
                                                        (lemma
                                                         "last_cdr[TraceState]")
                                                        (("1"
                                                          (inst?)
                                                          (("1"
                                                            (replace
                                                             -1)
                                                            (("1"
                                                              (replace
                                                               -2)
                                                              (("1"
                                                                (expand
                                                                 "finite_trace?")
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (typepred
                                                             "trace")
                                                            (("2"
                                                              (expand
                                                               "wf_trace?")
                                                              (("2"
                                                                (flatten)
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (flatten)
                                                (("2"
                                                  (expand
                                                   "DLEVENTUALLY")
                                                  (("2"
                                                    (expand
                                                     "DLGLOBALLY")
                                                    (("2"
                                                      (skeep)
                                                      (("2"
                                                        (typepred
                                                         "suffix")
                                                        (("2"
                                                          (case
                                                           "length(suffix) > length(trace)")
                                                          (("1"
                                                            (inst
                                                             4
                                                             "trace")
                                                            (("1"
                                                              (skeep)
                                                              (("1"
                                                                (typepred
                                                                 "suffix_1")
                                                                (("1"
                                                                  (inst
                                                                   -6
                                                                   "suffix_1")
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil)
                                                                   ("2"
                                                                    (lemma
                                                                     "suffix_supl[TraceState]")
                                                                    (("2"
                                                                      (inst
                                                                       -1
                                                                       "suffix_1"
                                                                       "suffix")
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (lemma
                                                                           "suffix_length[TraceState]")
                                                                          (("2"
                                                                            (inst
                                                                             -1
                                                                             "suffix_1"
                                                                             "trace")
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (inst
                                                                                 1
                                                                                 "suffix^(0,length(suffix)-length(suffix_1)-1)")
                                                                                (("2"
                                                                                  (lemma
                                                                                   "length_append[TraceState]")
                                                                                  (("2"
                                                                                    (inst?)
                                                                                    (("2"
                                                                                      (lemma
                                                                                       "caret_length[TraceState]")
                                                                                      (("2"
                                                                                        (inst?)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (replace
                                                                                             -1)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (lemma
                                                                                                 "list_extensionality[TraceState]")
                                                                                                (("2"
                                                                                                  (inst?)
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (skeep)
                                                                                                      (("2"
                                                                                                        (lemma
                                                                                                         "nth_append[TraceState]")
                                                                                                        (("2"
                                                                                                          (inst?)
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (lift-if)
                                                                                                              (("2"
                                                                                                                (split)
                                                                                                                (("1"
                                                                                                                  (flatten)
                                                                                                                  (("1"
                                                                                                                    (replace
                                                                                                                     -2)
                                                                                                                    (("1"
                                                                                                                      (lemma
                                                                                                                       "caret_nth[TraceState]")
                                                                                                                      (("1"
                                                                                                                        (inst
                                                                                                                         -1
                                                                                                                         "suffix"
                                                                                                                         "n"
                                                                                                                         "(0, length(suffix) - 1 - length(suffix_1))")
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (flatten)
                                                                                                                  (("2"
                                                                                                                    (replace
                                                                                                                     -1)
                                                                                                                    (("2"
                                                                                                                      (replace
                                                                                                                       -2)
                                                                                                                      (("2"
                                                                                                                        (lemma
                                                                                                                         "suffix_nth[TraceState]")
                                                                                                                        (("2"
                                                                                                                          (inst-cp
                                                                                                                           -1
                                                                                                                           "trace"
                                                                                                                           "suffix_1")
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (inst
                                                                                                                               -1
                                                                                                                               "append(trace_1, cdr(trace))"
                                                                                                                               "suffix")
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                (("2"
                                                                                                                                  (inst
                                                                                                                                   -1
                                                                                                                                   "n")
                                                                                                                                  (("2"
                                                                                                                                    (replace
                                                                                                                                     -1)
                                                                                                                                    (("2"
                                                                                                                                      (inst
                                                                                                                                       -2
                                                                                                                                       "length(suffix_1) - length(suffix) + n")
                                                                                                                                      (("2"
                                                                                                                                        (replace
                                                                                                                                         -2)
                                                                                                                                        (("2"
                                                                                                                                          (assert)
                                                                                                                                          (("2"
                                                                                                                                            (lemma
                                                                                                                                             "length_append[TraceState]")
                                                                                                                                            (("2"
                                                                                                                                              (inst?)
                                                                                                                                              (("2"
                                                                                                                                                (lemma
                                                                                                                                                 "nth_append[TraceState]")
                                                                                                                                                (("2"
                                                                                                                                                  (inst?)
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    (("1"
                                                                                                                                                      (lift-if)
                                                                                                                                                      (("1"
                                                                                                                                                        (replace
                                                                                                                                                         -2)
                                                                                                                                                        (("1"
                                                                                                                                                          (assert)
                                                                                                                                                          (("1"
                                                                                                                                                            (split)
                                                                                                                                                            (("1"
                                                                                                                                                              (flatten)
                                                                                                                                                              (("1"
                                                                                                                                                                (expand
                                                                                                                                                                 "length"
                                                                                                                                                                 -9
                                                                                                                                                                 2)
                                                                                                                                                                (("1"
                                                                                                                                                                  (typepred
                                                                                                                                                                   "trace")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (typepred
                                                                                                                                                                     "trace_1")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (expand
                                                                                                                                                                       "wf_trace?")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (flatten)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (replace
                                                                                                                                                                             -6)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (case
                                                                                                                                                                               "length(trace) - length(suffix) + n =0")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (replace
                                                                                                                                                                                 -1)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "last")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (replace
                                                                                                                                                                                     -24)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "length"
                                                                                                                                                                                       -1
                                                                                                                                                                                       1)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (lemma
                                                                                                                                                                                           "TraceState_STATE_eta")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (inst?)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (replace
                                                                                                                                                                                               -1)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                nil
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil)
                                                                                                                                                                                             ("2"
                                                                                                                                                                                              (grind)
                                                                                                                                                                                              nil
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil)
                                                                                                                                                                               ("2"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "length"
                                                                                                                                                                                 1
                                                                                                                                                                                 1)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (flatten)
                                                                                                                                                              (("2"
                                                                                                                                                                (replace
                                                                                                                                                                 -1)
                                                                                                                                                                (("2"
                                                                                                                                                                  (expand
                                                                                                                                                                   "length"
                                                                                                                                                                   3
                                                                                                                                                                   1)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (typepred
                                                                                                                                                                       "trace")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (expand
                                                                                                                                                                         "wf_trace?")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (flatten)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (expand
                                                                                                                                                                               "nth"
                                                                                                                                                                               3
                                                                                                                                                                               1)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (propax)
                                                                                                                                                                                nil
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (replace
                                                                                                                                                     -1)
                                                                                                                                                    (("2"
                                                                                                                                                      (typepred
                                                                                                                                                       "trace_1")
                                                                                                                                                      (("2"
                                                                                                                                                        (expand
                                                                                                                                                         "wf_trace?")
                                                                                                                                                        (("2"
                                                                                                                                                          (flatten)
                                                                                                                                                          (("2"
                                                                                                                                                            (typepred
                                                                                                                                                             "n")
                                                                                                                                                            (("2"
                                                                                                                                                              (replace
                                                                                                                                                               -9)
                                                                                                                                                              (("2"
                                                                                                                                                                (assert)
                                                                                                                                                                (("2"
                                                                                                                                                                  (lemma
                                                                                                                                                                   "suffix_length[TraceState]")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (inst
                                                                                                                                                                     -1
                                                                                                                                                                     "suffix"
                                                                                                                                                                     "append(trace_1, cdr(trace))")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (assert)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (assert)
                                                              (("2"
                                                                (expand
                                                                 "nth")
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (lemma
                                                                     "suffix_reflexive[TraceState]")
                                                                    (("2"
                                                                      (inst?)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (inst
                                                             5
                                                             "suffix")
                                                            (("2"
                                                              (lemma
                                                               "suffix_supl[TraceState]")
                                                              (("2"
                                                                (inst?)
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (case
                                                                     "length(trace)=length(suffix)")
                                                                    (("1"
                                                                      (inst
                                                                       1
                                                                       "null")
                                                                      (("1"
                                                                        (lemma
                                                                         "append_null_left[TraceState]")
                                                                        (("1"
                                                                          (inst?)
                                                                          (("1"
                                                                            (replace
                                                                             -1)
                                                                            (("1"
                                                                              (lemma
                                                                               "list_extensionality[TraceState]")
                                                                              (("1"
                                                                                (inst
                                                                                 -1
                                                                                 "suffix"
                                                                                 "trace")
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (skeep)
                                                                                    (("1"
                                                                                      (lemma
                                                                                       "suffix_nth[TraceState]")
                                                                                      (("1"
                                                                                        (inst
                                                                                         -1
                                                                                         "append(trace_1, cdr(trace))"
                                                                                         "suffix")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (inst
                                                                                             -1
                                                                                             "n")
                                                                                            (("1"
                                                                                              (replace
                                                                                               -1)
                                                                                              (("1"
                                                                                                (lemma
                                                                                                 "length_append[TraceState]")
                                                                                                (("1"
                                                                                                  (inst?)
                                                                                                  (("1"
                                                                                                    (replace
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (lemma
                                                                                                       "nth_append[TraceState]")
                                                                                                      (("1"
                                                                                                        (inst?)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (lift-if)
                                                                                                            (("1"
                                                                                                              (typepred
                                                                                                               "trace")
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "wf_trace?")
                                                                                                                (("1"
                                                                                                                  (flatten)
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "length"
                                                                                                                     -7
                                                                                                                     1)
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (replace
                                                                                                                         -7
                                                                                                                         -3
                                                                                                                         rl)
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (case
                                                                                                                             "n=0")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (replace
                                                                                                                                 -1)
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  (("1"
                                                                                                                                    (replace
                                                                                                                                     -8
                                                                                                                                     1
                                                                                                                                     rl)
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      (("1"
                                                                                                                                        (replace
                                                                                                                                         -4)
                                                                                                                                        (("1"
                                                                                                                                          (expand
                                                                                                                                           "last")
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            (("1"
                                                                                                                                              (replace
                                                                                                                                               -15)
                                                                                                                                              (("1"
                                                                                                                                                (lemma
                                                                                                                                                 "TraceState_STATE_eta")
                                                                                                                                                (("1"
                                                                                                                                                  (inst?)
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    nil
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (typepred
                                                                                                                                                     "trace_1")
                                                                                                                                                    (("2"
                                                                                                                                                      (expand
                                                                                                                                                       "wf_trace?")
                                                                                                                                                      (("2"
                                                                                                                                                        (flatten)
                                                                                                                                                        (("2"
                                                                                                                                                          (grind)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (assert)
                                                                                                                              (("2"
                                                                                                                                (replace
                                                                                                                                 -7
                                                                                                                                 2
                                                                                                                                 rl)
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  (("2"
                                                                                                                                    (replace
                                                                                                                                     -3)
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "nth"
                                                                                                                                       2
                                                                                                                                       2)
                                                                                                                                      (("2"
                                                                                                                                        (propax)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (lemma
                                                                                                             "suffix_length[TraceState]")
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               -1
                                                                                                               "suffix"
                                                                                                               "append(trace_1, cdr(trace))")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (inst
                                                                       2
                                                                       "trace^(0,length(trace)-length(suffix)-1)")
                                                                      (("1"
                                                                        (lemma
                                                                         "list_extensionality[TraceState]")
                                                                        (("1"
                                                                          (inst?)
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (lemma
                                                                               "length_append[TraceState]")
                                                                              (("1"
                                                                                (inst?)
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (lemma
                                                                                     "caret_length[TraceState]")
                                                                                    (("1"
                                                                                      (inst
                                                                                       -1
                                                                                       "trace"
                                                                                       "(0, length(trace) - 1 - length(suffix))")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (replace
                                                                                           -1)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (skeep)
                                                                                              (("1"
                                                                                                (lemma
                                                                                                 "nth_append[TraceState]")
                                                                                                (("1"
                                                                                                  (inst?)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (lift-if)
                                                                                                      (("1"
                                                                                                        (replace
                                                                                                         -2)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (split)
                                                                                                            (("1"
                                                                                                              (flatten)
                                                                                                              (("1"
                                                                                                                (replace
                                                                                                                 -2)
                                                                                                                (("1"
                                                                                                                  (lemma
                                                                                                                   "caret_nth[TraceState]")
                                                                                                                  (("1"
                                                                                                                    (inst
                                                                                                                     -1
                                                                                                                     "trace"
                                                                                                                     "n"
                                                                                                                     "(0, length(trace) - 1 - length(suffix))")
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (flatten)
                                                                                                              (("2"
                                                                                                                (replace
                                                                                                                 -1)
                                                                                                                (("2"
                                                                                                                  (lemma
                                                                                                                   "suffix_nth[TraceState]")
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     -1
                                                                                                                     "append(trace_1, cdr(trace))"
                                                                                                                     "suffix")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (inst
                                                                                                                         -1
                                                                                                                         "length(suffix) - length(trace) + n")
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          (("2"
                                                                                                                            (lemma
                                                                                                                             "length_append[TraceState]")
                                                                                                                            (("2"
                                                                                                                              (inst
                                                                                                                               -1
                                                                                                                               "trace_1"
                                                                                                                               "cdr(trace)")
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                (("2"
                                                                                                                                  (replace
                                                                                                                                   -1)
                                                                                                                                  (("2"
                                                                                                                                    (replace
                                                                                                                                     -2)
                                                                                                                                    (("2"
                                                                                                                                      (typepred
                                                                                                                                       "trace")
                                                                                                                                      (("2"
                                                                                                                                        (expand
                                                                                                                                         "wf_trace?")
                                                                                                                                        (("2"
                                                                                                                                          (flatten)
                                                                                                                                          (("2"
                                                                                                                                            (expand
                                                                                                                                             "length"
                                                                                                                                             2
                                                                                                                                             3)
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              (("2"
                                                                                                                                                (lemma
                                                                                                                                                 "nth_append[TraceState]")
                                                                                                                                                (("2"
                                                                                                                                                  (inst
                                                                                                                                                   -1
                                                                                                                                                   "trace_1"
                                                                                                                                                   "cdr(trace)"
                                                                                                                                                   "length[TraceState](trace_1) - 1 + n")
                                                                                                                                                  (("2"
                                                                                                                                                    (assert)
                                                                                                                                                    (("2"
                                                                                                                                                      (typepred
                                                                                                                                                       "n")
                                                                                                                                                      (("2"
                                                                                                                                                        (replace
                                                                                                                                                         -9)
                                                                                                                                                        (("2"
                                                                                                                                                          (expand
                                                                                                                                                           "length"
                                                                                                                                                           -1
                                                                                                                                                           1)
                                                                                                                                                          (("2"
                                                                                                                                                            (assert)
                                                                                                                                                            (("2"
                                                                                                                                                              (replace
                                                                                                                                                               -2)
                                                                                                                                                              (("2"
                                                                                                                                                                (expand
                                                                                                                                                                 "nth"
                                                                                                                                                                 2
                                                                                                                                                                 2)
                                                                                                                                                                (("2"
                                                                                                                                                                  (propax)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("3"
                                                (flatten)
                                                (("3"
                                                  (inst
                                                   1
                                                   "trace_1"
                                                   "trace")
                                                  (("3"
                                                    (assert)
                                                    (("3"
                                                      (expand
                                                       "finite_trace?")
                                                      (("3"
                                                        (assert)
                                                        (("3"
                                                          (expand
                                                           "nth")
                                                          (("3"
                                                            (assert)
                                                            (("3"
                                                              (assert)
                                                              (("3"
                                                                (replace
                                                                 -3)
                                                                (("3"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (expand "wf_trace?")
                                  (("2"
                                    (split)
                                    (("1"
                                      (typepred "trace_1")
                                      (("1"
                                        (typepred "trace")
                                        (("1"
                                          (expand "wf_trace?")
                                          (("1"
                                            (flatten)
                                            (("1" (grind) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (skeep)
                                      (("2"
                                        (lemma
                                         "nth_append[TraceState]")
                                        (("2"
                                          (inst?)
                                          (("2"
                                            (assert)
                                            (("2"
                                              (typepred "i")
                                              (("2"
                                                (lemma
                                                 "length_append[TraceState]")
                                                (("2"
                                                  (inst?)
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (lift-if)
                                                      (("2"
                                                        (split)
                                                        (("1"
                                                          (flatten)
                                                          (("1"
                                                            (replace
                                                             -2)
                                                            (("1"
                                                              (case
                                                               "i=length(trace_1)-1")
                                                              (("1"
                                                                (expand
                                                                 "finite_trace?")
                                                                (("1"
                                                                  (expand
                                                                   "last")
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (typepred
                                                                 "trace_1")
                                                                (("2"
                                                                  (expand
                                                                   "wf_trace?")
                                                                  (("2"
                                                                    (flatten)
                                                                    (("2"
                                                                      (inst
                                                                       -2
                                                                       "i")
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (flatten)
                                                          (("2"
                                                            (replace
                                                             -1)
                                                            (("2"
                                                              (typepred
                                                               "trace")
                                                              (("2"
                                                                (expand
                                                                 "wf_trace?")
                                                                (("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (inst
                                                                     -2
                                                                     "i-length(trace_1)+1")
                                                                    (("1"
                                                                      (expand
                                                                       "nth"
                                                                       -2)
                                                                      (("1"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (grind)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (flatten)
                      (("2" (expand "trace_semantic_rel" -1)
                        (("2" (inst -1 "trace_1")
                          (("2" (assert)
                            (("2" (flatten)
                              (("2"
                                (expand "finite_trace?")
                                (("2" (assert) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((HP type-decl nil HP_adt nil)
    (TraceState type-decl nil TraceState_adt nil)
    (list type-decl nil list_adt nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (Environment type-eq-decl nil hp_def nil)
    (ALLRUNS_tr const-decl "bool" ltl_expr nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (normDLEG const-decl "bool" ltl_expr nil)
    (seq? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (SEQ adt-constructor-decl "[[HP, HP] -> (seq?)]" HP_adt nil)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil)
    (car_append formula-decl nil more_list_props structures)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (TraceState_STATE_eta formula-decl nil TraceState_adt nil)
    (last const-decl "T" more_list_props structures)
    (suffix_supl formula-decl nil more_list_props structures)
    (rdc const-decl "list[T]" more_list_props structures)
    (length_rdc formula-decl nil more_list_props structures)
    (nth_append formula-decl nil more_list_props structures)
    (TraceState_STATE_extensionality formula-decl nil TraceState_adt
     nil)
    (nth_rdc formula-decl nil more_list_props structures)
    (list_extensionality formula-decl nil more_list_props structures)
    (error? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (suffix? def-decl "bool" more_list_props structures)
    (DLEVENTUALLY const-decl "bool" ltl_expr nil)
    (last_append formula-decl nil more_list_props structures)
    (last_cdr formula-decl nil more_list_props structures)
    (null adt-constructor-decl "(null?)" list_adt nil)
    (state? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (car adt-accessor-decl "[(cons?) -> T]" list_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (cdr adt-accessor-decl "[(cons?) -> list]" list_adt nil)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (State_Trace const-decl "bool" ltl_expr nil)
    (suffix_reflexive formula-decl nil more_list_props structures)
    (suffix_length formula-decl nil more_list_props structures)
    (caret_length formula-decl nil more_list_props structures)
    (suffix_nth formula-decl nil more_list_props structures)
    (caret_nth formula-decl nil more_list_props structures)
    (append_null_left formula-decl nil more_list_props structures)
    (DLGLOBALLY const-decl "bool" ltl_expr nil))
   shostak))
 (dltl_SEQtriangleGE 0
  (dltl_SEQtriangleGE-1 nil 3889087486
   ("" (skeep)
    (("" (decompose-equality)
      (("" (iff)
        (("" (split)
          (("1" (flatten)
            (("1" (expand "ALLRUNS_tr")
              (("1" (skeep)
                (("1" (expand "trace_semantic_rel" -3)
                  (("1" (split)
                    (("1" (skeep)
                      (("1" (inst -7 "trace1")
                        (("1" (assert)
                          (("1" (expand "nth")
                            (("1" (lemma "car_append[TraceState]")
                              (("1"
                                (inst?)
                                (("1"
                                  (assert)
                                  (("1"
                                    (expand "normDLGE" -8)
                                    (("1"
                                      (expand "finite_trace?")
                                      (("1"
                                        (inst -8 "trace2")
                                        (("1"
                                          (assert)
                                          (("1"
                                            (replace -7)
                                            (("1"
                                              (lemma
                                               "TraceState_STATE_eta")
                                              (("1"
                                                (inst?)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (expand "normDLGE")
                                                    (("1"
                                                      (expand
                                                       "finite_trace?")
                                                      (("1"
                                                        (case
                                                         "last(trace2) = last(trace)")
                                                        (("1"
                                                          (split)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (flatten)
                                                              (("1"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (flatten)
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (expand
                                                                 "DLGLOBALLY")
                                                                (("2"
                                                                  (skeep)
                                                                  (("2"
                                                                    (expand
                                                                     "DLEVENTUALLY")
                                                                    (("2"
                                                                      (typepred
                                                                       "suffix")
                                                                      (("2"
                                                                        (case
                                                                         "length(suffix)<=length(trace2)")
                                                                        (("1"
                                                                          (inst
                                                                           -4
                                                                           "suffix")
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil)
                                                                           ("2"
                                                                            (lemma
                                                                             "suffix_supl[TraceState]")
                                                                            (("2"
                                                                              (inst?)
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (case
                                                                                   "length(suffix)=length(trace2)")
                                                                                  (("1"
                                                                                    (inst
                                                                                     1
                                                                                     "null")
                                                                                    (("1"
                                                                                      (lemma
                                                                                       "append_null_left[TraceState]")
                                                                                      (("1"
                                                                                        (inst?)
                                                                                        (("1"
                                                                                          (replace
                                                                                           -1)
                                                                                          (("1"
                                                                                            (lemma
                                                                                             "list_extensionality[TraceState]")
                                                                                            (("1"
                                                                                              (inst
                                                                                               -1
                                                                                               "suffix"
                                                                                               "trace2")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (skeep)
                                                                                                  (("1"
                                                                                                    (lemma
                                                                                                     "suffix_nth[TraceState]")
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       -1
                                                                                                       "trace"
                                                                                                       "suffix")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           -1
                                                                                                           "n")
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             -10)
                                                                                                            (("1"
                                                                                                              (lemma
                                                                                                               "length_append[TraceState]")
                                                                                                              (("1"
                                                                                                                (inst?)
                                                                                                                (("1"
                                                                                                                  (replace
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (replace
                                                                                                                       -4)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "length"
                                                                                                                         -2
                                                                                                                         3)
                                                                                                                        (("1"
                                                                                                                          (typepred
                                                                                                                           "trace2")
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "wf_trace?")
                                                                                                                            (("1"
                                                                                                                              (flatten)
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (replace
                                                                                                                                   -4)
                                                                                                                                  (("1"
                                                                                                                                    (lemma
                                                                                                                                     "nth_append[TraceState]")
                                                                                                                                    (("1"
                                                                                                                                      (inst?)
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        (("1"
                                                                                                                                          (typepred
                                                                                                                                           "n")
                                                                                                                                          (("1"
                                                                                                                                            (replace
                                                                                                                                             -8)
                                                                                                                                            (("1"
                                                                                                                                              (expand
                                                                                                                                               "length"
                                                                                                                                               -1
                                                                                                                                               1)
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                (("1"
                                                                                                                                                  (lift-if)
                                                                                                                                                  (("1"
                                                                                                                                                    (case
                                                                                                                                                     "n=0")
                                                                                                                                                    (("1"
                                                                                                                                                      (replace
                                                                                                                                                       -1)
                                                                                                                                                      (("1"
                                                                                                                                                        (assert)
                                                                                                                                                        (("1"
                                                                                                                                                          (replace
                                                                                                                                                           -3)
                                                                                                                                                          (("1"
                                                                                                                                                            (expand
                                                                                                                                                             "last")
                                                                                                                                                            (("1"
                                                                                                                                                              (expand
                                                                                                                                                               "nth"
                                                                                                                                                               1
                                                                                                                                                               2)
                                                                                                                                                              (("1"
                                                                                                                                                                (lemma
                                                                                                                                                                 "TraceState_STATE_extensionality")
                                                                                                                                                                (("1"
                                                                                                                                                                  (inst
                                                                                                                                                                   -1
                                                                                                                                                                   "nth(trace1, length[TraceState](trace1) - 1)"
                                                                                                                                                                   "car(trace2)")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (assert)
                                                                                                                                                                    nil
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (typepred
                                                                                                                                                                     "trace1")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (expand
                                                                                                                                                                       "wf_trace?")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (flatten)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (grind)
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (assert)
                                                                                                                                                      (("2"
                                                                                                                                                        (replace
                                                                                                                                                         -2)
                                                                                                                                                        (("2"
                                                                                                                                                          (expand
                                                                                                                                                           "nth"
                                                                                                                                                           2
                                                                                                                                                           2)
                                                                                                                                                          (("2"
                                                                                                                                                            (propax)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (assert)
                                                                                                                                        (("2"
                                                                                                                                          (typepred
                                                                                                                                           "trace1")
                                                                                                                                          (("2"
                                                                                                                                            (expand
                                                                                                                                             "wf_trace?")
                                                                                                                                            (("2"
                                                                                                                                              (flatten)
                                                                                                                                              (("2"
                                                                                                                                                (assert)
                                                                                                                                                (("2"
                                                                                                                                                  (grind)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (inst
                                                                                     2
                                                                                     "trace2^(0,length(trace2)-length(suffix)-1)")
                                                                                    (("1"
                                                                                      (lemma
                                                                                       "list_extensionality[TraceState]")
                                                                                      (("1"
                                                                                        (inst?)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (lemma
                                                                                             "length_append[TraceState]")
                                                                                            (("1"
                                                                                              (inst?)
                                                                                              (("1"
                                                                                                (replace
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (lemma
                                                                                                   "caret_length[TraceState]")
                                                                                                  (("1"
                                                                                                    (inst?)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (replace
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (skeep)
                                                                                                          (("1"
                                                                                                            (lemma
                                                                                                             "nth_append[TraceState]")
                                                                                                            (("1"
                                                                                                              (inst?)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (lift-if)
                                                                                                                  (("1"
                                                                                                                    (split)
                                                                                                                    (("1"
                                                                                                                      (flatten)
                                                                                                                      (("1"
                                                                                                                        (replace
                                                                                                                         -2)
                                                                                                                        (("1"
                                                                                                                          (lemma
                                                                                                                           "caret_nth[TraceState]")
                                                                                                                          (("1"
                                                                                                                            (inst
                                                                                                                             -1
                                                                                                                             "trace2"
                                                                                                                             "n"
                                                                                                                             "(0, length(trace2) - 1 - length(suffix))")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (flatten)
                                                                                                                      (("2"
                                                                                                                        (replace
                                                                                                                         -1)
                                                                                                                        (("2"
                                                                                                                          (replace
                                                                                                                           -2)
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (lemma
                                                                                                                               "suffix_nth[TraceState]")
                                                                                                                              (("2"
                                                                                                                                (inst
                                                                                                                                 -1
                                                                                                                                 "append(trace1,cdr(trace2))"
                                                                                                                                 "suffix")
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  (("2"
                                                                                                                                    (inst
                                                                                                                                     -1
                                                                                                                                     "length(suffix) - length(trace2) + n")
                                                                                                                                    (("2"
                                                                                                                                      (lemma
                                                                                                                                       "length_append[TraceState]")
                                                                                                                                      (("2"
                                                                                                                                        (inst?)
                                                                                                                                        (("2"
                                                                                                                                          (replace
                                                                                                                                           -1)
                                                                                                                                          (("2"
                                                                                                                                            (lemma
                                                                                                                                             "nth_append[TraceState]")
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              (("2"
                                                                                                                                                (replace
                                                                                                                                                 -3)
                                                                                                                                                (("2"
                                                                                                                                                  (expand
                                                                                                                                                   "length"
                                                                                                                                                   2
                                                                                                                                                   3)
                                                                                                                                                  (("2"
                                                                                                                                                    (assert)
                                                                                                                                                    (("2"
                                                                                                                                                      (typepred
                                                                                                                                                       "trace2")
                                                                                                                                                      (("2"
                                                                                                                                                        (expand
                                                                                                                                                         "wf_trace?")
                                                                                                                                                        (("2"
                                                                                                                                                          (flatten)
                                                                                                                                                          (("2"
                                                                                                                                                            (assert)
                                                                                                                                                            (("2"
                                                                                                                                                              (inst
                                                                                                                                                               -3
                                                                                                                                                               "trace1"
                                                                                                                                                               "cdr(trace2)"
                                                                                                                                                               "length[TraceState](trace1) - 1 + n")
                                                                                                                                                              (("2"
                                                                                                                                                                (assert)
                                                                                                                                                                (("2"
                                                                                                                                                                  (typepred
                                                                                                                                                                   "n")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (replace
                                                                                                                                                                     -9)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (expand
                                                                                                                                                                       "length"
                                                                                                                                                                       -1
                                                                                                                                                                       1)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (replace
                                                                                                                                                                           -4)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (expand
                                                                                                                                                                             "nth"
                                                                                                                                                                             2
                                                                                                                                                                             2)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (propax)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (inst
                                                                           -3
                                                                           "trace2")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (skeep)
                                                                              (("1"
                                                                                (typepred
                                                                                 "suffix_1")
                                                                                (("1"
                                                                                  (inst
                                                                                   4
                                                                                   "suffix_1")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (replace
                                                                                       -9)
                                                                                      (("1"
                                                                                        (lemma
                                                                                         "suffix_supl[TraceState]")
                                                                                        (("1"
                                                                                          (inst-cp
                                                                                           -1
                                                                                           "suffix_1"
                                                                                           "suffix")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (lemma
                                                                                               "suffix_length[TraceState]")
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -1
                                                                                                 "suffix_1"
                                                                                                 "trace2")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (case
                                                                                                     "length(suffix_1)=length(suffix)")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (inst
                                                                                                       2
                                                                                                       "suffix^(0,length(suffix)-length(suffix_1)-1)")
                                                                                                      (("2"
                                                                                                        (lemma
                                                                                                         "list_extensionality[TraceState]")
                                                                                                        (("2"
                                                                                                          (inst?)
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (lemma
                                                                                                               "length_append[TraceState]")
                                                                                                              (("2"
                                                                                                                (inst?)
                                                                                                                (("2"
                                                                                                                  (replace
                                                                                                                   -1)
                                                                                                                  (("2"
                                                                                                                    (lemma
                                                                                                                     "caret_length[TraceState]")
                                                                                                                    (("2"
                                                                                                                      (inst?)
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        (("2"
                                                                                                                          (replace
                                                                                                                           -1)
                                                                                                                          (("2"
                                                                                                                            (skeep)
                                                                                                                            (("2"
                                                                                                                              (lemma
                                                                                                                               "nth_append[TraceState]")
                                                                                                                              (("2"
                                                                                                                                (inst?)
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  (("2"
                                                                                                                                    (lift-if)
                                                                                                                                    (("2"
                                                                                                                                      (replace
                                                                                                                                       -2)
                                                                                                                                      (("2"
                                                                                                                                        (split)
                                                                                                                                        (("1"
                                                                                                                                          (flatten)
                                                                                                                                          (("1"
                                                                                                                                            (replace
                                                                                                                                             -2)
                                                                                                                                            (("1"
                                                                                                                                              (lemma
                                                                                                                                               "caret_nth[TraceState]")
                                                                                                                                              (("1"
                                                                                                                                                (inst
                                                                                                                                                 -1
                                                                                                                                                 "suffix"
                                                                                                                                                 "n"
                                                                                                                                                 "(0, length(suffix) - 1 - length(suffix_1))")
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (flatten)
                                                                                                                                          (("2"
                                                                                                                                            (replace
                                                                                                                                             -1)
                                                                                                                                            (("2"
                                                                                                                                              (lemma
                                                                                                                                               "suffix_nth[TraceState]")
                                                                                                                                              (("2"
                                                                                                                                                (inst-cp
                                                                                                                                                 -1
                                                                                                                                                 "trace2"
                                                                                                                                                 "suffix_1")
                                                                                                                                                (("2"
                                                                                                                                                  (assert)
                                                                                                                                                  (("2"
                                                                                                                                                    (inst
                                                                                                                                                     -1
                                                                                                                                                     "append(trace1, cdr(trace2))"
                                                                                                                                                     "suffix")
                                                                                                                                                    (("2"
                                                                                                                                                      (assert)
                                                                                                                                                      (("2"
                                                                                                                                                        (typepred
                                                                                                                                                         "n")
                                                                                                                                                        (("2"
                                                                                                                                                          (replace
                                                                                                                                                           -6)
                                                                                                                                                          (("2"
                                                                                                                                                            (inst
                                                                                                                                                             -3
                                                                                                                                                             "length(suffix_1) - length(suffix) + n")
                                                                                                                                                            (("2"
                                                                                                                                                              (replace
                                                                                                                                                               -3)
                                                                                                                                                              (("2"
                                                                                                                                                                (assert)
                                                                                                                                                                (("2"
                                                                                                                                                                  (inst
                                                                                                                                                                   -2
                                                                                                                                                                   "n")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (lemma
                                                                                                                                                                     "length_append[TraceState]")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (inst?)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (replace
                                                                                                                                                                         -1)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (replace
                                                                                                                                                                           -3)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (lemma
                                                                                                                                                                             "nth_append[TraceState]")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (inst?)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (lift-if)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "length"
                                                                                                                                                                                     7
                                                                                                                                                                                     2)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (typepred
                                                                                                                                                                                         "trace2")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "wf_trace?")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (flatten)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (split)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (flatten)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (typepred
                                                                                                                                                                                                     "trace1")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (expand
                                                                                                                                                                                                       "wf_trace?")
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (flatten)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (replace
                                                                                                                                                                                                           -4)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (expand
                                                                                                                                                                                                             "length"
                                                                                                                                                                                                             -14
                                                                                                                                                                                                             2)
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (case
                                                                                                                                                                                                                 "n=length(suffix)-length(trace2)")
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (replace
                                                                                                                                                                                                                     -1)
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (expand
                                                                                                                                                                                                                         "length"
                                                                                                                                                                                                                         2
                                                                                                                                                                                                                         3)
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (expand
                                                                                                                                                                                                                           "last")
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (expand
                                                                                                                                                                                                                             "nth"
                                                                                                                                                                                                                             2
                                                                                                                                                                                                                             1)
                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                (lemma
                                                                                                                                                                                                                                 "TraceState_STATE_extensionality")
                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                  (inst
                                                                                                                                                                                                                                   -1
                                                                                                                                                                                                                                   "car(trace2)"
                                                                                                                                                                                                                                   "nth(trace1, length[TraceState](trace1) - 1)")
                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                                                    nil
                                                                                                                                                                                                                                    nil)
                                                                                                                                                                                                                                   ("2"
                                                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                                      (grind)
                                                                                                                                                                                                                                      nil
                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil)
                                                                                                                                                                                                                 ("2"
                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (expand
                                                                                                                                                                                                                     "length"
                                                                                                                                                                                                                     1
                                                                                                                                                                                                                     2)
                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                                      nil
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil)
                                                                                                                                                                                                 ("2"
                                                                                                                                                                                                  (flatten)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (replace
                                                                                                                                                                                                     -1)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (expand
                                                                                                                                                                                                       "length"
                                                                                                                                                                                                       3
                                                                                                                                                                                                       1)
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (expand
                                                                                                                                                                                                         "nth"
                                                                                                                                                                                                         3
                                                                                                                                                                                                         1)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          nil
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil)
                                                                                                                                                                               ("2"
                                                                                                                                                                                (typepred
                                                                                                                                                                                 "trace1")
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "wf_trace?")
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (flatten)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (lemma
                                                                                                                                                                                       "suffix_length[TraceState]")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (inst
                                                                                                                                                                                         -1
                                                                                                                                                                                         "suffix"
                                                                                                                                                                                         "append(trace1, cdr(trace2))")
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          nil
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (lemma
                                                                             "suffix_reflexive[TraceState]")
                                                                            (("2"
                                                                              (inst?)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (case
                                                           "cdr(trace2)=null")
                                                          (("1"
                                                            (lemma
                                                             "nth_append[TraceState]")
                                                            (("1"
                                                              (expand
                                                               "last")
                                                              (("1"
                                                                (inst
                                                                 -1
                                                                 "trace1"
                                                                 "cdr(trace2)"
                                                                 "length(trace) - 1")
                                                                (("1"
                                                                  (lemma
                                                                   "length_append[TraceState]")
                                                                  (("1"
                                                                    (inst
                                                                     -1
                                                                     "trace1"
                                                                     "cdr(trace2)")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (lift-if)
                                                                        (("1"
                                                                          (replace
                                                                           -6)
                                                                          (("1"
                                                                            (replace
                                                                             -1)
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (expand
                                                                                 "length"
                                                                                 -2
                                                                                 1)
                                                                                (("1"
                                                                                  (replace
                                                                                   -2)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "length"
                                                                                     1
                                                                                     2)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "length"
                                                                                       1
                                                                                       1)
                                                                                      (("1"
                                                                                        (typepred
                                                                                         "trace2")
                                                                                        (("1"
                                                                                          (expand
                                                                                           "wf_trace?")
                                                                                          (("1"
                                                                                            (flatten)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "length"
                                                                                                 1
                                                                                                 1)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "nth"
                                                                                                   1
                                                                                                   1)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (lemma
                                                                                                       "TraceState_STATE_extensionality")
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -1
                                                                                                         "nth(trace1, length(trace1) - 1)"
                                                                                                         "car(trace2)")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (typepred
                                                                                                           "trace1")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "wf_trace?")
                                                                                                            (("2"
                                                                                                              (flatten)
                                                                                                              (("2"
                                                                                                                (grind)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (typepred
                                                                   "trace")
                                                                  (("2"
                                                                    (expand
                                                                     "wf_trace?")
                                                                    (("2"
                                                                      (flatten)
                                                                      (("2"
                                                                        (grind)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (lemma
                                                             "last_append[TraceState]")
                                                            (("2"
                                                              (inst?)
                                                              (("1"
                                                                (lemma
                                                                 "last_cdr[TraceState]")
                                                                (("1"
                                                                  (inst?)
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil)
                                                                   ("2"
                                                                    (typepred
                                                                     "trace2")
                                                                    (("2"
                                                                      (expand
                                                                       "wf_trace?")
                                                                      (("2"
                                                                        (flatten)
                                                                        (("2"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("3"
                                                          (typepred
                                                           "trace")
                                                          (("3"
                                                            (expand
                                                             "wf_trace?")
                                                            (("3"
                                                              (flatten)
                                                              (("3"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("4"
                                                          (typepred
                                                           "trace2")
                                                          (("4"
                                                            (expand
                                                             "wf_trace?")
                                                            (("4"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (flatten)
                      (("2" (inst -3 "trace")
                        (("2" (assert)
                          (("2" (expand "normDLGE")
                            (("2" (expand "finite_trace?")
                              (("2"
                                (split -1)
                                (("1" (assert) nil nil)
                                 ("2" (assert) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (flatten)
            (("2" (expand "ALLRUNS_tr")
              (("2" (skeep)
                (("2" (expand "normDLGE")
                  (("2" (expand "trace_semantic_rel" -1)
                    (("2" (split)
                      (("1" (flatten)
                        (("1" (skeep)
                          (("1" (expand "finite_trace?")
                            (("1" (typepred "trace")
                              (("1"
                                (typepred "trace_1")
                                (("1"
                                  (expand "wf_trace?")
                                  (("1"
                                    (flatten)
                                    (("1"
                                      (inst
                                       -8
                                       "append(trace_1,cdr(trace))")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (lemma
                                           "nth_append[TraceState]")
                                          (("1"
                                            (inst?)
                                            (("1"
                                              (assert)
                                              (("1"
                                                (expand "length" -1 2)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (split)
                                                    (("1"
                                                      (expand
                                                       "length"
                                                       -1
                                                       1)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (case
                                                           "last(trace) = last(append(trace_1,cdr(trace)))")
                                                          (("1"
                                                            (replace
                                                             -1)
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (split
                                                                 -10)
                                                                (("1"
                                                                  (flatten)
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (expand
                                                                       "DLEVENTUALLY")
                                                                      (("2"
                                                                        (expand
                                                                         "DLGLOBALLY")
                                                                        (("2"
                                                                          (skeep)
                                                                          (("2"
                                                                            (typepred
                                                                             "suffix_1")
                                                                            (("2"
                                                                              (inst
                                                                               -3
                                                                               "suffix_1")
                                                                              (("1"
                                                                                (assert)
                                                                                nil
                                                                                nil)
                                                                               ("2"
                                                                                (lemma
                                                                                 "suffix_supl[TraceState]")
                                                                                (("2"
                                                                                  (inst-cp
                                                                                   -1
                                                                                   "suffix_1"
                                                                                   "trace")
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (inst?)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (skeep)
                                                                                          (("2"
                                                                                            (replace
                                                                                             -1
                                                                                             1
                                                                                             rl)
                                                                                            (("2"
                                                                                              (case
                                                                                               "L=null")
                                                                                              (("1"
                                                                                                (replace
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (lemma
                                                                                                   "append_null_left[TraceState]")
                                                                                                  (("1"
                                                                                                    (inst?)
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (replace
                                                                                                         -3)
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           1
                                                                                                           "rdc(trace_1)")
                                                                                                          (("1"
                                                                                                            (lemma
                                                                                                             "list_extensionality[TraceState]")
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               -1
                                                                                                               "append(rdc(trace_1), trace)"
                                                                                                               "append[TraceState](trace_1, cdr[TraceState](trace))")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (lemma
                                                                                                                   "length_append[TraceState]")
                                                                                                                  (("1"
                                                                                                                    (inst-cp
                                                                                                                     -1
                                                                                                                     "rdc(trace_1)"
                                                                                                                     "trace")
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       -1
                                                                                                                       "trace_1"
                                                                                                                       "cdr(trace)")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (lemma
                                                                                                                           "length_rdc[TraceState]")
                                                                                                                          (("1"
                                                                                                                            (inst?)
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (replace
                                                                                                                                 -1)
                                                                                                                                (("1"
                                                                                                                                  (replace
                                                                                                                                   -2)
                                                                                                                                  (("1"
                                                                                                                                    (replace
                                                                                                                                     -3)
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "length"
                                                                                                                                       1
                                                                                                                                       2)
                                                                                                                                      (("1"
                                                                                                                                        (skeep)
                                                                                                                                        (("1"
                                                                                                                                          (lemma
                                                                                                                                           "nth_append[TraceState]")
                                                                                                                                          (("1"
                                                                                                                                            (inst-cp
                                                                                                                                             -1
                                                                                                                                             "rdc(trace_1)"
                                                                                                                                             "trace"
                                                                                                                                             "n")
                                                                                                                                            (("1"
                                                                                                                                              (inst
                                                                                                                                               -1
                                                                                                                                               "trace_1"
                                                                                                                                               "cdr(trace)"
                                                                                                                                               "n")
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                (("1"
                                                                                                                                                  (typepred
                                                                                                                                                   "n")
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    (("1"
                                                                                                                                                      (replace
                                                                                                                                                       -6)
                                                                                                                                                      (("1"
                                                                                                                                                        (expand
                                                                                                                                                         "length"
                                                                                                                                                         -1
                                                                                                                                                         1)
                                                                                                                                                        (("1"
                                                                                                                                                          (assert)
                                                                                                                                                          (("1"
                                                                                                                                                            (lift-if)
                                                                                                                                                            (("1"
                                                                                                                                                              (split
                                                                                                                                                               -3)
                                                                                                                                                              (("1"
                                                                                                                                                                (flatten)
                                                                                                                                                                (("1"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (replace
                                                                                                                                                                     -4)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (replace
                                                                                                                                                                       -2)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (lemma
                                                                                                                                                                         "nth_rdc[TraceState]")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (inst?)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("2"
                                                                                                                                                                (flatten)
                                                                                                                                                                (("2"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (replace
                                                                                                                                                                     -1)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (case
                                                                                                                                                                       "n=length(trace_1)-1")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (replace
                                                                                                                                                                           -1)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (replace
                                                                                                                                                                             -4)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (replace
                                                                                                                                                                               -5)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "last")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (replace
                                                                                                                                                                                     -20)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (lemma
                                                                                                                                                                                         "TraceState_STATE_eta")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (inst?)
                                                                                                                                                                                          nil
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil)
                                                                                                                                                                       ("2"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (replace
                                                                                                                                                                           -3)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (replace
                                                                                                                                                                             -4)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (assert)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "nth"
                                                                                                                                                                                 3
                                                                                                                                                                                 1)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (propax)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (lemma
                                                                                                 "cdr_append[TraceState]")
                                                                                                (("2"
                                                                                                  (inst?)
                                                                                                  (("1"
                                                                                                    (lemma
                                                                                                     "associative_append[TraceState]")
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -2)
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         2
                                                                                                         "append(trace_1,cdr(L))")
                                                                                                        (("1"
                                                                                                          (inst?)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("3"
                                                                  (flatten)
                                                                  (("3"
                                                                    (assert)
                                                                    (("3"
                                                                      (inst
                                                                       1
                                                                       "trace_1"
                                                                       "trace")
                                                                      (("3"
                                                                        (assert)
                                                                        (("3"
                                                                          (expand
                                                                           "nth")
                                                                          (("3"
                                                                            (assert)
                                                                            (("3"
                                                                              (replace
                                                                               -8)
                                                                              (("3"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (case
                                                             "cdr(trace)=null")
                                                            (("1"
                                                              (replace
                                                               -1)
                                                              (("1"
                                                                (lemma
                                                                 "append_null[TraceState]")
                                                                (("1"
                                                                  (inst?)
                                                                  (("1"
                                                                    (replace
                                                                     -1)
                                                                    (("1"
                                                                      (expand
                                                                       "last")
                                                                      (("1"
                                                                        (expand
                                                                         "length"
                                                                         1
                                                                         1)
                                                                        (("1"
                                                                          (expand
                                                                           "length"
                                                                           1
                                                                           1)
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (replace
                                                                               -8)
                                                                              (("1"
                                                                                (lemma
                                                                                 "TraceState_STATE_eta")
                                                                                (("1"
                                                                                  (inst?)
                                                                                  (("1"
                                                                                    (grind)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (lemma
                                                               "last_append[TraceState]")
                                                              (("2"
                                                                (inst?)
                                                                (("1"
                                                                  (lemma
                                                                   "last_cdr[TraceState]")
                                                                  (("1"
                                                                    (inst?)
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil)
                                                                     ("2"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("3"
                                                            (grind)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (expand "wf_trace?")
                                        (("2"
                                          (assert)
                                          (("2"
                                            (split)
                                            (("1" (grind) nil nil)
                                             ("2"
                                              (skeep)
                                              (("2"
                                                (lemma
                                                 "nth_append[TraceState]")
                                                (("2"
                                                  (inst?)
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (typepred "i")
                                                      (("2"
                                                        (lemma
                                                         "length_append[TraceState]")
                                                        (("2"
                                                          (inst?)
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (lift-if)
                                                              (("2"
                                                                (split)
                                                                (("1"
                                                                  (flatten)
                                                                  (("1"
                                                                    (case
                                                                     "i=length(trace_1)-1")
                                                                    (("1"
                                                                      (replace
                                                                       -1)
                                                                      (("1"
                                                                        (replace
                                                                         -3)
                                                                        (("1"
                                                                          (expand
                                                                           "last")
                                                                          (("1"
                                                                            (propax)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (inst
                                                                       -6
                                                                       "i")
                                                                      (("1"
                                                                        (assert)
                                                                        nil
                                                                        nil)
                                                                       ("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (replace
                                                                     -1)
                                                                    (("2"
                                                                      (inst
                                                                       -7
                                                                       "1+i - length(trace_1)")
                                                                      (("1"
                                                                        (expand
                                                                         "nth"
                                                                         -7)
                                                                        (("1"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (grind)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (flatten)
                        (("2" (expand "finite_trace?")
                          (("2" (inst -1 "trace_1")
                            (("2" (assert)
                              (("2"
                                (flatten)
                                (("2" (assert) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((HP type-decl nil HP_adt nil)
    (TraceState type-decl nil TraceState_adt nil)
    (list type-decl nil list_adt nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (Environment type-eq-decl nil hp_def nil)
    (ALLRUNS_tr const-decl "bool" ltl_expr nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (normDLGE const-decl "bool" ltl_expr nil)
    (seq? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (SEQ adt-constructor-decl "[[HP, HP] -> (seq?)]" HP_adt nil)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil)
    (car_append formula-decl nil more_list_props structures)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (TraceState_STATE_eta formula-decl nil TraceState_adt nil)
    (last_cdr formula-decl nil more_list_props structures)
    (last_append formula-decl nil more_list_props structures)
    (suffix? def-decl "bool" more_list_props structures)
    (suffix_length formula-decl nil more_list_props structures)
    (error? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (suffix_reflexive formula-decl nil more_list_props structures)
    (append_null_left formula-decl nil more_list_props structures)
    (TraceState_STATE_extensionality formula-decl nil TraceState_adt
     nil)
    (nth_append formula-decl nil more_list_props structures)
    (suffix_nth formula-decl nil more_list_props structures)
    (list_extensionality formula-decl nil more_list_props structures)
    (null adt-constructor-decl "(null?)" list_adt nil)
    (caret_length formula-decl nil more_list_props structures)
    (caret_nth formula-decl nil more_list_props structures)
    (suffix_supl formula-decl nil more_list_props structures)
    (DLEVENTUALLY const-decl "bool" ltl_expr nil)
    (DLGLOBALLY const-decl "bool" ltl_expr nil)
    (last const-decl "T" more_list_props structures)
    (state? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (car adt-accessor-decl "[(cons?) -> T]" list_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (cdr adt-accessor-decl "[(cons?) -> list]" list_adt nil)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (rdc const-decl "list[T]" more_list_props structures)
    (length_rdc formula-decl nil more_list_props structures)
    (nth_rdc formula-decl nil more_list_props structures)
    (associative_append formula-decl nil even_more_list_props nil)
    (cdr_append formula-decl nil more_list_props structures))
   shostak))
 (dltl_choice 0
  (dltl_choice-1 nil 3888506745
   ("" (skeep)
    (("" (expand "DLAND")
      (("" (decompose-equality)
        (("" (iff)
          (("" (split)
            (("1" (flatten)
              (("1" (expand "ALLRUNS_tr")
                (("1" (skeep)
                  (("1" (expand "trace_semantic_rel" -4)
                    (("1" (split)
                      (("1" (inst -2 "trace") (("1" (assert) nil nil))
                        nil)
                       ("2" (inst -3 "trace") (("2" (assert) nil nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (flatten)
              (("2" (expand "ALLRUNS_tr")
                (("2" (split)
                  (("1" (skeep)
                    (("1" (inst -3 "trace")
                      (("1" (assert)
                        (("1" (expand "trace_semantic_rel" 2)
                          (("1" (propax) nil nil)) nil))
                        nil))
                      nil))
                    nil)
                   ("2" (skeep)
                    (("2" (inst -3 "trace")
                      (("2" (assert)
                        (("2" (expand "trace_semantic_rel" 2)
                          (("2" (propax) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((DLAND const-decl "bool" bool_expr nil)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil)
    (UNION adt-constructor-decl "[[HP, HP] -> (union?)]" HP_adt nil)
    (union? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (ALLRUNS_tr const-decl "bool" ltl_expr nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (list type-decl nil list_adt nil)
    (TraceState type-decl nil TraceState_adt nil)
    (HP type-decl nil HP_adt nil)
    (Environment type-eq-decl nil hp_def nil))
   shostak))
 (dltl_s_choice 0
  (dltl_s_choice-1 nil 3894447045
   ("" (skeep)
    (("" (expand "DLOR")
      (("" (decompose-equality)
        (("" (expand "SOMERUNS_tr")
          (("" (iff)
            (("" (split)
              (("1" (flatten)
                (("1" (expand "trace_semantic_rel" 1)
                  (("1" (split)
                    (("1" (skeep)
                      (("1" (inst 1 "trace") (("1" (assert) nil nil))
                        nil))
                      nil)
                     ("2" (skeep)
                      (("2" (inst 1 "trace") (("2" (assert) nil nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (flatten)
                (("2" (skeep)
                  (("2" (expand "trace_semantic_rel" -2)
                    (("2" (split)
                      (("1" (inst 1 "trace") (("1" (assert) nil nil))
                        nil)
                       ("2" (inst 2 "trace") (("2" (assert) nil nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((DLOR const-decl "bool" bool_expr nil)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (UNION adt-constructor-decl "[[HP, HP] -> (union?)]" HP_adt nil)
    (union? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (SOMERUNS_tr const-decl "bool" ltl_expr nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (list type-decl nil list_adt nil)
    (TraceState type-decl nil TraceState_adt nil)
    (HP type-decl nil HP_adt nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (Environment type-eq-decl nil hp_def nil))
   shostak))
 (dltl_TESTcap 0
  (dltl_TESTcap-1 nil 3889020669
   ("" (skeep)
    (("" (expand "DLAND")
      (("" (expand "DLOR")
        (("" (expand "DLNOT")
          (("" (decompose-equality)
            (("" (iff)
              (("" (split)
                (("1" (flatten)
                  (("1" (expand "ALLRUNS_tr")
                    (("1" (skeep)
                      (("1" (expand "normDLGLOBALLY")
                        (("1" (expand "trace_semantic_rel")
                          (("1" (replace -3)
                            (("1" (assert)
                              (("1"
                                (split)
                                (("1"
                                  (assert)
                                  (("1"
                                    (flatten)
                                    (("1"
                                      (expand "finite_trace?")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (expand "last")
                                          (("1"
                                            (expand "DLGLOBALLY")
                                            (("1"
                                              (skeep)
                                              (("1"
                                                (expand "State_Trace")
                                                (("1"
                                                  (typepred "suffix")
                                                  (("1"
                                                    (lemma
                                                     "suffix_nth[TraceState]")
                                                    (("1"
                                                      (inst?)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (inst -1 "0")
                                                          (("1"
                                                            (expand
                                                             "nth"
                                                             -1
                                                             1)
                                                            (("1"
                                                              (replace
                                                               -6)
                                                              (("1"
                                                                (lemma
                                                                 "suffix_length[TraceState]")
                                                                (("1"
                                                                  (inst?)
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (replace
                                                                       -7)
                                                                      (("1"
                                                                        (expand
                                                                         "wf_trace?")
                                                                        (("1"
                                                                          (flatten)
                                                                          (("1"
                                                                            (case
                                                                             "length(suffix)=1")
                                                                            (("1"
                                                                              (replace
                                                                               -1)
                                                                              (("1"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (case
                                                                               "length(suffix)=2")
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (replace
                                                                                   -1)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (replace
                                                                                       -3)
                                                                                      (("1"
                                                                                        (replace
                                                                                         -8)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (expand
                                                             "wf_trace?")
                                                            (("2"
                                                              (flatten)
                                                              (("2"
                                                                (grind)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (assert)
                                  (("2"
                                    (split -4)
                                    (("1"
                                      (flatten)
                                      (("1"
                                        (expand "finite_trace?")
                                        (("1"
                                          (expand "last")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (replace -1)
                                              (("1"
                                                (replace -5)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (expand
                                                     "DLGLOBALLY")
                                                    (("1"
                                                      (skeep)
                                                      (("1"
                                                        (typepred
                                                         "suffix")
                                                        (("1"
                                                          (expand
                                                           "wf_trace?")
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (lemma
                                                               "suffix_length[TraceState]")
                                                              (("1"
                                                                (inst?)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (lemma
                                                                     "suffix_nth[TraceState]")
                                                                    (("1"
                                                                      (inst?)
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (inst
                                                                           -1
                                                                           "0")
                                                                          (("1"
                                                                            (replace
                                                                             -6)
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (case
                                                                                 "length(suffix)=1")
                                                                                (("1"
                                                                                  (replace
                                                                                   -1)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "State_Trace")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "nth")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (replace
                                                                                             -2)
                                                                                            (("1"
                                                                                              (replace
                                                                                               -11)
                                                                                              (("1"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "length")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (grind)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (flatten)
                                      (("2"
                                        (expand "finite_trace?")
                                        (("2"
                                          (expand "last")
                                          (("2"
                                            (replace -1)
                                            (("2"
                                              (assert)
                                              (("2"
                                                (expand "DLGLOBALLY")
                                                (("2"
                                                  (skeep)
                                                  (("2"
                                                    (expand
                                                     "State_Trace")
                                                    (("2"
                                                      (typepred
                                                       "suffix")
                                                      (("2"
                                                        (lemma
                                                         "suffix_nth[TraceState]")
                                                        (("2"
                                                          (inst?)
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (inst
                                                               -1
                                                               "0")
                                                              (("1"
                                                                (expand
                                                                 "nth"
                                                                 -1
                                                                 1)
                                                                (("1"
                                                                  (lemma
                                                                   "suffix_length[TraceState]")
                                                                  (("1"
                                                                    (inst?)
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (expand
                                                                         "wf_trace?")
                                                                        (("1"
                                                                          (flatten)
                                                                          (("1"
                                                                            (case
                                                                             "length(suffix)=1")
                                                                            (("1"
                                                                              (replace
                                                                               -1)
                                                                              (("1"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (case
                                                                               "length(suffix)=2")
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (replace
                                                                                   -1)
                                                                                  (("1"
                                                                                    (replace
                                                                                     -3)
                                                                                    (("1"
                                                                                      (replace
                                                                                       -7)
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (replace
                                                                                           -11)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (expand
                                                                 "wf_trace?")
                                                                (("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (grind)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (flatten)
                  (("2" (expand "ALLRUNS_tr")
                    (("2" (expand "trace_semantic_rel")
                      (("2" (expand "normDLGLOBALLY")
                        (("2" (case "P(x!1)")
                          (("1" (inst -2 "(: STATE(x!1) :)")
                            (("1" (expand "nth")
                              (("1"
                                (expand "length")
                                (("1"
                                  (expand "length")
                                  (("1"
                                    (assert)
                                    (("1"
                                      (expand "finite_trace?")
                                      (("1"
                                        (expand "last")
                                        (("1"
                                          (expand "length")
                                          (("1"
                                            (expand "length")
                                            (("1"
                                              (expand "nth")
                                              (("1"
                                                (flatten)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (case
                                                     "DLGLOBALLY(State_Trace(R))((: STATE(x!1) :)) = R(x!1)")
                                                    (("1"
                                                      (replace -1)
                                                      (("1"
                                                        (propax)
                                                        nil
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (hide-all-but 1)
                                                      (("2"
                                                        (iff)
                                                        (("2"
                                                          (split)
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (expand
                                                               "DLGLOBALLY")
                                                              (("1"
                                                                (inst
                                                                 -1
                                                                 "(: STATE(x!1) :)")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (expand
                                                                     "State_Trace")
                                                                    (("1"
                                                                      (propax)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (lemma
                                                                   "suffix_reflexive[TraceState]")
                                                                  (("2"
                                                                    (inst?)
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (expand
                                                                         "wf_trace?")
                                                                        (("2"
                                                                          (skeep)
                                                                          (("2"
                                                                            (typepred
                                                                             "i")
                                                                            (("2"
                                                                              (grind)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (flatten)
                                                            (("2"
                                                              (expand
                                                               "DLGLOBALLY")
                                                              (("2"
                                                                (skeep)
                                                                (("2"
                                                                  (typepred
                                                                   "suffix")
                                                                  (("2"
                                                                    (lemma
                                                                     "suffix_length[TraceState]")
                                                                    (("2"
                                                                      (inst?)
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (expand "wf_trace?")
                              (("2"
                                (skeep)
                                (("2"
                                  (typepred "i")
                                  (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (inst -1 "(: STATE(x!1), ERROR :)")
                            (("1" (expand "nth" -1)
                              (("1"
                                (assert)
                                (("1"
                                  (expand "length")
                                  (("1"
                                    (assert)
                                    (("1"
                                      (expand "nth")
                                      (("1"
                                        (expand "finite_trace?")
                                        (("1"
                                          (expand "last")
                                          (("1"
                                            (expand "length")
                                            (("1"
                                              (expand "length")
                                              (("1"
                                                (expand "length")
                                                (("1"
                                                  (expand "nth")
                                                  (("1"
                                                    (expand "nth")
                                                    (("1"
                                                      (expand
                                                       "DLGLOBALLY")
                                                      (("1"
                                                        (inst
                                                         -1
                                                         "(: STATE(x!1), ERROR :)")
                                                        (("1"
                                                          (expand
                                                           "State_Trace")
                                                          (("1"
                                                            (propax)
                                                            nil
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (lemma
                                                           "suffix_reflexive[TraceState]")
                                                          (("2"
                                                            (inst?)
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (expand
                                                                 "wf_trace?")
                                                                (("2"
                                                                  (skeep)
                                                                  (("2"
                                                                    (typepred
                                                                     "i")
                                                                    (("2"
                                                                      (grind)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (expand "wf_trace?")
                              (("2"
                                (skeep)
                                (("2"
                                  (typepred "i")
                                  (("2" (grind) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((DLAND const-decl "bool" bool_expr nil)
    (DLNOT const-decl "bool" bool_expr nil)
    (length_singleton formula-decl nil more_list_props structures)
    (suffix_reflexive formula-decl nil more_list_props structures)
    (STATE adt-constructor-decl "[Environment -> (state?)]"
     TraceState_adt nil)
    (state? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (ERROR adt-constructor-decl "(error?)" TraceState_adt nil)
    (error? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (last const-decl "T" more_list_props structures)
    (suffix? def-decl "bool" more_list_props structures)
    (suffix_length formula-decl nil more_list_props structures)
    (suffix_nth formula-decl nil more_list_props structures)
    (State_Trace const-decl "bool" ltl_expr nil)
    (DLGLOBALLY const-decl "bool" ltl_expr nil)
    (normDLGLOBALLY const-decl "bool" ltl_expr nil)
    (TEST adt-constructor-decl "[BoolExpr -> (test?)]" HP_adt nil)
    (test? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (ALLRUNS_tr const-decl "bool" ltl_expr nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (list type-decl nil list_adt nil)
    (TraceState type-decl nil TraceState_adt nil)
    (HP type-decl nil HP_adt nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (Environment type-eq-decl nil hp_def nil)
    (DLOR const-decl "bool" bool_expr nil))
   shostak))
 (dltl_TESTcup 0
  (dltl_TESTcup-1 nil 3889108169
   ("" (skeep)
    (("" (expand "DLAND")
      (("" (expand "DLOR")
        (("" (decompose-equality)
          (("" (iff)
            (("" (split)
              (("1" (flatten)
                (("1" (expand "ALLRUNS_tr")
                  (("1" (skeep)
                    (("1" (expand "trace_semantic_rel")
                      (("1" (expand "normDLEVENTUALLY")
                        (("1" (split -3)
                          (("1" (flatten)
                            (("1" (expand "finite_trace?")
                              (("1"
                                (expand "last")
                                (("1"
                                  (assert)
                                  (("1"
                                    (replace -1)
                                    (("1"
                                      (assert)
                                      (("1"
                                        (flatten)
                                        (("1"
                                          (replace -5)
                                          (("1"
                                            (assert)
                                            (("1"
                                              (expand "DLEVENTUALLY")
                                              (("1"
                                                (inst 2 "trace")
                                                (("1"
                                                  (expand
                                                   "State_Trace")
                                                  (("1"
                                                    (expand "nth")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (replace -5)
                                                        (("1"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (lemma
                                                   "suffix_reflexive[TraceState]")
                                                  (("2"
                                                    (inst?)
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (expand "nth")
                                                        (("2"
                                                          (propax)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (expand "finite_trace?")
                            (("2" (assert) nil nil)) nil)
                           ("3" (expand "finite_trace?")
                            (("3" (assert) nil nil)) nil)
                           ("4" (flatten)
                            (("4" (expand "finite_trace?")
                              (("4"
                                (expand "last")
                                (("4"
                                  (replace -1)
                                  (("4"
                                    (assert)
                                    (("4"
                                      (replace -5)
                                      (("4"
                                        (assert)
                                        (("4"
                                          (expand "DLEVENTUALLY")
                                          (("4"
                                            (expand "State_Trace")
                                            (("4"
                                              (inst 2 "trace")
                                              (("1"
                                                (expand "nth")
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (replace -5)
                                                    (("1"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (expand "nth")
                                                (("2"
                                                  (assert)
                                                  (("2"
                                                    (lemma
                                                     "suffix_reflexive[TraceState]")
                                                    (("2"
                                                      (inst?)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (flatten)
                (("2" (expand "ALLRUNS_tr")
                  (("2" (expand "trace_semantic_rel")
                    (("2" (expand "normDLEVENTUALLY")
                      (("2" (case "P(x!1)")
                        (("1" (inst -2 "(: STATE(x!1) :)")
                          (("1" (expand "nth")
                            (("1" (expand "length")
                              (("1"
                                (expand "length")
                                (("1"
                                  (assert)
                                  (("1"
                                    (expand "finite_trace?")
                                    (("1"
                                      (expand "last")
                                      (("1"
                                        (expand "length")
                                        (("1"
                                          (expand "length")
                                          (("1"
                                            (expand "nth")
                                            (("1"
                                              (expand "DLEVENTUALLY")
                                              (("1"
                                                (skeep)
                                                (("1"
                                                  (expand
                                                   "State_Trace")
                                                  (("1"
                                                    (typepred "suffix")
                                                    (("1"
                                                      (expand
                                                       "wf_trace?")
                                                      (("1"
                                                        (flatten)
                                                        (("1"
                                                          (lemma
                                                           "suffix_same_length[TraceState]")
                                                          (("1"
                                                            (inst?)
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (split)
                                                                (("1"
                                                                  (replace
                                                                   -1)
                                                                  (("1"
                                                                    (replace
                                                                     -1
                                                                     -6
                                                                     rl)
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (grind)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (expand "wf_trace?")
                            (("2" (skeep)
                              (("2"
                                (typepred "i")
                                (("2"
                                  (expand "length")
                                  (("2"
                                    (expand "length")
                                    (("2"
                                      (expand "nth")
                                      (("2" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (assert)
                          (("2" (inst -1 "(: STATE(x!1), ERROR :)")
                            (("1" (expand "finite_trace?")
                              (("1"
                                (expand "last")
                                (("1"
                                  (expand "length")
                                  (("1"
                                    (expand "length")
                                    (("1"
                                      (expand "length")
                                      (("1"
                                        (expand "nth")
                                        (("1"
                                          (expand "nth")
                                          (("1"
                                            (expand "DLEVENTUALLY")
                                            (("1"
                                              (skeep)
                                              (("1"
                                                (typepred "suffix")
                                                (("1"
                                                  (expand "wf_trace?")
                                                  (("1"
                                                    (flatten)
                                                    (("1"
                                                      (lemma
                                                       "suffix_nth[TraceState]")
                                                      (("1"
                                                        (inst?)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (inst
                                                             -1
                                                             "0")
                                                            (("1"
                                                              (expand
                                                               "nth"
                                                               -1)
                                                              (("1"
                                                                (lift-if)
                                                                (("1"
                                                                  (lemma
                                                                   "suffix_length[TraceState]")
                                                                  (("1"
                                                                    (inst?)
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (expand
                                                                         "length"
                                                                         -1
                                                                         2)
                                                                        (("1"
                                                                          (expand
                                                                           "length"
                                                                           -1
                                                                           2)
                                                                          (("1"
                                                                            (expand
                                                                             "length"
                                                                             -1
                                                                             2)
                                                                            (("1"
                                                                              (split)
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (replace
                                                                                   -2)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "State_Trace")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (replace
                                                                                           -2)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (flatten)
                                                                                (("2"
                                                                                  (expand
                                                                                   "length"
                                                                                   -1
                                                                                   1)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "length"
                                                                                     -1
                                                                                     1)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "length"
                                                                                       -1
                                                                                       1)
                                                                                      (("2"
                                                                                        (case
                                                                                         "length(suffix)=1")
                                                                                        (("1"
                                                                                          (replace
                                                                                           -1)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "nth")
                                                                                              (("1"
                                                                                                (propax)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (expand
                                                                                           "length"
                                                                                           2
                                                                                           1)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "length"
                                                                                             2
                                                                                             1)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "length"
                                                                                               2
                                                                                               1)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "length")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (grind)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (expand "wf_trace?")
                              (("2" (grind) nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((DLAND const-decl "bool" bool_expr nil)
    (Environment type-eq-decl nil hp_def nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (HP type-decl nil HP_adt nil)
    (TraceState type-decl nil TraceState_adt nil)
    (list type-decl nil list_adt nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (ALLRUNS_tr const-decl "bool" ltl_expr nil)
    (test? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (TEST adt-constructor-decl "[BoolExpr -> (test?)]" HP_adt nil)
    (normDLEVENTUALLY const-decl "bool" ltl_expr nil)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (DLEVENTUALLY const-decl "bool" ltl_expr nil)
    (suffix_reflexive formula-decl nil more_list_props structures)
    (State_Trace const-decl "bool" ltl_expr nil)
    (car adt-accessor-decl "[(cons?) -> T]" list_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (error? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (suffix? def-decl "bool" more_list_props structures)
    (last const-decl "T" more_list_props structures)
    (suffix_nth formula-decl nil more_list_props structures)
    (suffix_length formula-decl nil more_list_props structures)
    (ERROR adt-constructor-decl "(error?)" TraceState_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (state? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (STATE adt-constructor-decl "[Environment -> (state?)]"
     TraceState_adt nil)
    (suffix_same_length formula-decl nil more_list_props structures)
    (length_singleton formula-decl nil more_list_props structures)
    (DLOR const-decl "bool" bool_expr nil))
   shostak))
 (dltl_TESTse 0
  (dltl_TESTse-1 nil 3895148150
   ("" (skeep)
    (("" (decompose-equality)
      (("" (iff)
        (("" (split)
          (("1" (flatten)
            (("1" (expand "SOMERUNS_tr")
              (("1" (expand "trace_semantic_rel")
                (("1" (assert)
                  (("1" (case "Q(x!1)")
                    (("1" (inst 1 "(: STATE(x!1) :)")
                      (("1" (assert)
                        (("1" (expand "nth")
                          (("1" (expand "DLEVENTUALLY")
                            (("1" (inst 1 "(: STATE(x!1) :)")
                              (("1"
                                (expand "State_Trace")
                                (("1" (propax) nil nil))
                                nil)
                               ("2"
                                (lemma "suffix_reflexive[TraceState]")
                                (("2"
                                  (inst?)
                                  (("2"
                                    (assert)
                                    (("2" (grind) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (grind) nil nil))
                      nil)
                     ("2" (inst 2 "(: STATE(x!1),ERROR :)")
                      (("1" (expand "length")
                        (("1" (expand "length")
                          (("1" (expand "length")
                            (("1" (expand "nth")
                              (("1"
                                (expand "nth")
                                (("1"
                                  (assert)
                                  (("1"
                                    (expand "DLEVENTUALLY")
                                    (("1"
                                      (inst 2 "(: STATE(x!1),ERROR :)")
                                      (("1"
                                        (expand "State_Trace")
                                        (("1" (propax) nil nil))
                                        nil)
                                       ("2"
                                        (lemma
                                         "suffix_reflexive[TraceState]")
                                        (("2"
                                          (inst?)
                                          (("2"
                                            (assert)
                                            (("2" (grind) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (grind) nil nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (flatten) (("2" (postpone) nil nil)) nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (dltl_TESTEG 0
  (dltl_TESTEG-1 nil 3889108694
   ("" (skeep)
    (("" (expand "DLAND")
      (("" (expand "DLOR")
        (("" (expand "DLNOT")
          (("" (decompose-equality)
            (("" (iff)
              (("" (split)
                (("1" (flatten)
                  (("1" (expand "ALLRUNS_tr")
                    (("1" (skeep)
                      (("1" (expand "trace_semantic_rel")
                        (("1" (expand "normDLEG")
                          (("1" (split -3)
                            (("1" (flatten)
                              (("1"
                                (expand "finite_trace?")
                                (("1"
                                  (expand "last")
                                  (("1"
                                    (assert)
                                    (("1"
                                      (split)
                                      (("1"
                                        (flatten)
                                        (("1"
                                          (replace -6)
                                          (("1"
                                            (replace -3)
                                            (("1"
                                              (replace -6)
                                              (("1" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (flatten)
                                        (("2"
                                          (assert)
                                          (("2"
                                            (replace -5)
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (flatten)
                              (("2"
                                (expand "finite_trace?")
                                (("2" (assert) nil nil))
                                nil))
                              nil)
                             ("3" (flatten)
                              (("3"
                                (split)
                                (("1"
                                  (flatten)
                                  (("1"
                                    (replace -6)
                                    (("1" (assert) nil nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (flatten)
                                  (("2"
                                    (hide 2)
                                    (("2" (assert) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("4" (flatten)
                              (("4"
                                (replace -5)
                                (("4"
                                  (assert)
                                  (("4"
                                    (expand "finite_trace?")
                                    (("4"
                                      (expand "last")
                                      (("4"
                                        (expand "DLEVENTUALLY")
                                        (("4"
                                          (expand "DLGLOBALLY")
                                          (("4"
                                            (inst 2 "trace")
                                            (("1"
                                              (skeep)
                                              (("1"
                                                (expand "State_Trace")
                                                (("1"
                                                  (lemma
                                                   "suffix_length[TraceState]")
                                                  (("1"
                                                    (typepred
                                                     "suffix_1")
                                                    (("1"
                                                      (inst?)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (replace -4)
                                                          (("1"
                                                            (lemma
                                                             "suffix_nth[TraceState]")
                                                            (("1"
                                                              (inst?)
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (inst
                                                                   -1
                                                                   "0")
                                                                  (("1"
                                                                    (replace
                                                                     -5)
                                                                    (("1"
                                                                      (expand
                                                                       "nth"
                                                                       -1
                                                                       1)
                                                                      (("1"
                                                                        (case
                                                                         "length(suffix_1)=2")
                                                                        (("1"
                                                                          (replace
                                                                           -1)
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (replace
                                                                               -2)
                                                                              (("1"
                                                                                (replace
                                                                                 -10)
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (case
                                                                           "length(suffix_1)=1")
                                                                          (("1"
                                                                            (replace
                                                                             -1)
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (grind)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (expand
                                                                     "wf_trace?")
                                                                    (("2"
                                                                      (flatten)
                                                                      (("2"
                                                                        (grind)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (expand "nth")
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (lemma
                                                   "suffix_reflexive[TraceState]")
                                                  (("2"
                                                    (inst?)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (flatten)
                  (("2" (expand "ALLRUNS_tr")
                    (("2" (expand "trace_semantic_rel")
                      (("2" (expand "normDLEG")
                        (("2" (case "P(x!1)")
                          (("1" (inst -2 "(: STATE(x!1) :)")
                            (("1" (assert)
                              (("1"
                                (expand "finite_trace?")
                                (("1"
                                  (expand "last")
                                  (("1"
                                    (expand "length")
                                    (("1"
                                      (expand "length")
                                      (("1"
                                        (expand "nth")
                                        (("1" (propax) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (expand "wf_trace?")
                              (("2"
                                (skeep)
                                (("2"
                                  (typepred "i")
                                  (("2" (grind) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (assert)
                            (("2" (inst -1 "(: STATE(x!1), ERROR :)")
                              (("1"
                                (expand "finite_trace?")
                                (("1"
                                  (expand "last")
                                  (("1"
                                    (expand "length")
                                    (("1"
                                      (expand "length")
                                      (("1"
                                        (expand "nth")
                                        (("1"
                                          (assert)
                                          (("1"
                                            (expand "nth")
                                            (("1"
                                              (expand "DLEVENTUALLY")
                                              (("1"
                                                (skeep)
                                                (("1"
                                                  (expand "DLGLOBALLY")
                                                  (("1"
                                                    (typepred "suffix")
                                                    (("1"
                                                      (lemma
                                                       "suffix_length[TraceState]")
                                                      (("1"
                                                        (inst?)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (lemma
                                                             "suffix_same_length[TraceState]")
                                                            (("1"
                                                              (inst?)
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (split)
                                                                  (("1"
                                                                    (replace
                                                                     -1)
                                                                    (("1"
                                                                      (inst
                                                                       -5
                                                                       "suffix")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (expand
                                                                           "State_Trace")
                                                                          (("1"
                                                                            (replace
                                                                             -1
                                                                             -5
                                                                             rl)
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (expand
                                                                     "length"
                                                                     1
                                                                     1)
                                                                    (("2"
                                                                      (expand
                                                                       "length"
                                                                       1
                                                                       1)
                                                                      (("2"
                                                                        (expand
                                                                         "length"
                                                                         1
                                                                         1)
                                                                        (("2"
                                                                          (case
                                                                           "length(suffix)=1")
                                                                          (("1"
                                                                            (lemma
                                                                             "suffix_nth[TraceState]")
                                                                            (("1"
                                                                              (inst?)
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (inst
                                                                                   -1
                                                                                   "0")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "nth"
                                                                                     -1)
                                                                                    (("1"
                                                                                      (replace
                                                                                       -2)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "length"
                                                                                         -1)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "length"
                                                                                           -1)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "length"
                                                                                             -1)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "nth")
                                                                                              (("1"
                                                                                                (propax)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (grind)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (grind) nil nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((DLAND const-decl "bool" bool_expr nil)
    (DLNOT const-decl "bool" bool_expr nil)
    (length_singleton formula-decl nil more_list_props structures)
    (STATE adt-constructor-decl "[Environment -> (state?)]"
     TraceState_adt nil)
    (state? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (ERROR adt-constructor-decl "(error?)" TraceState_adt nil)
    (length_null formula-decl nil more_list_props structures)
    (null adt-constructor-decl "(null?)" list_adt nil)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (suffix_same_length formula-decl nil more_list_props structures)
    (DLGLOBALLY const-decl "bool" ltl_expr nil)
    (suffix_reflexive formula-decl nil more_list_props structures)
    (suffix_length formula-decl nil more_list_props structures)
    (cdr adt-accessor-decl "[(cons?) -> list]" list_adt nil)
    (state_diff? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (dd? const-decl "bool" hp_expr nil)
    (closed_interval const-decl "(closed_interval?(a, b))" interval_def
     ODEs)
    (D adt-accessor-decl "[(state_diff?) ->
   {D: (dd?) | EXISTS (b: posreal): D = closed_interval(0, b)}]"
     TraceState_adt nil)
    (hp const-decl "bool" interval_def ODEs)
    (suffix_nth formula-decl nil more_list_props structures)
    (State_Trace const-decl "bool" ltl_expr nil)
    (car adt-accessor-decl "[(cons?) -> T]" list_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (error? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (suffix? def-decl "bool" more_list_props structures)
    (DLEVENTUALLY const-decl "bool" ltl_expr nil)
    (last const-decl "T" more_list_props structures)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil)
    (normDLEG const-decl "bool" ltl_expr nil)
    (TEST adt-constructor-decl "[BoolExpr -> (test?)]" HP_adt nil)
    (test? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (ALLRUNS_tr const-decl "bool" ltl_expr nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (list type-decl nil list_adt nil)
    (TraceState type-decl nil TraceState_adt nil)
    (HP type-decl nil HP_adt nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (Environment type-eq-decl nil hp_def nil)
    (DLOR const-decl "bool" bool_expr nil))
   shostak))
 (dltl_TESTGE 0
  (dltl_TESTGE-1 nil 3889109022
   ("" (skeep)
    (("" (expand "DLOR")
      (("" (expand "DLAND")
        (("" (expand "DLNOT")
          (("" (decompose-equality)
            (("" (iff)
              (("" (split)
                (("1" (flatten)
                  (("1" (expand "ALLRUNS_tr")
                    (("1" (skeep)
                      (("1" (expand "trace_semantic_rel")
                        (("1" (expand "normDLGE")
                          (("1" (split -3)
                            (("1" (flatten)
                              (("1"
                                (expand "finite_trace?")
                                (("1"
                                  (expand "last")
                                  (("1"
                                    (assert)
                                    (("1"
                                      (split)
                                      (("1"
                                        (flatten)
                                        (("1"
                                          (replace -6)
                                          (("1"
                                            (replace -3)
                                            (("1"
                                              (replace -6)
                                              (("1" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (flatten)
                                        (("2"
                                          (assert)
                                          (("2"
                                            (replace -5)
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (flatten)
                              (("2"
                                (expand "finite_trace?")
                                (("2" (assert) nil nil))
                                nil))
                              nil)
                             ("3" (flatten)
                              (("3"
                                (split)
                                (("1"
                                  (flatten)
                                  (("1"
                                    (replace -6)
                                    (("1" (assert) nil nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (flatten)
                                  (("2"
                                    (hide 2)
                                    (("2" (assert) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("4" (flatten)
                              (("4"
                                (replace -5)
                                (("4"
                                  (assert)
                                  (("4"
                                    (expand "finite_trace?")
                                    (("4"
                                      (expand "last")
                                      (("4"
                                        (expand "DLGLOBALLY")
                                        (("4"
                                          (skeep)
                                          (("4"
                                            (expand "DLEVENTUALLY")
                                            (("4"
                                              (typepred "suffix")
                                              (("4"
                                                (expand "wf_trace?")
                                                (("4"
                                                  (flatten)
                                                  (("4"
                                                    (lemma
                                                     "suffix_nth[TraceState]")
                                                    (("4"
                                                      (inst?)
                                                      (("4"
                                                        (assert)
                                                        (("4"
                                                          (lemma
                                                           "suffix_length[TraceState]")
                                                          (("4"
                                                            (inst?)
                                                            (("4"
                                                              (assert)
                                                              (("4"
                                                                (replace
                                                                 -6)
                                                                (("4"
                                                                  (assert)
                                                                  (("4"
                                                                    (inst
                                                                     -2
                                                                     "0")
                                                                    (("1"
                                                                      (expand
                                                                       "nth"
                                                                       -2
                                                                       1)
                                                                      (("1"
                                                                        (case
                                                                         "length(suffix)=2")
                                                                        (("1"
                                                                          (replace
                                                                           -1)
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (inst
                                                                               2
                                                                               "suffix")
                                                                              (("1"
                                                                                (expand
                                                                                 "State_Trace")
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (replace
                                                                                     -3)
                                                                                    (("1"
                                                                                      (replace
                                                                                       -11)
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (lemma
                                                                                 "suffix_reflexive[TraceState]")
                                                                                (("2"
                                                                                  (inst?)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (case
                                                                           "length(suffix)=1")
                                                                          (("1"
                                                                            (replace
                                                                             -3)
                                                                            (("1"
                                                                              (replace
                                                                               -1)
                                                                              (("1"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (grind)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (grind)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (flatten)
                  (("2" (expand "ALLRUNS_tr")
                    (("2" (expand "trace_semantic_rel")
                      (("2" (expand "normDLGE")
                        (("2" (expand "finite_trace?")
                          (("2" (expand "last")
                            (("2" (case "P(x!1)")
                              (("1"
                                (inst -2 "(: STATE(x!1) :)")
                                (("1" (grind) nil nil)
                                 ("2"
                                  (expand "wf_trace?")
                                  (("2"
                                    (skeep)
                                    (("2"
                                      (typepred "i")
                                      (("2" (grind) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (inst -1 "(: STATE(x!1), ERROR :)")
                                (("1"
                                  (expand "length")
                                  (("1"
                                    (expand "length")
                                    (("1"
                                      (expand "length")
                                      (("1"
                                        (expand "nth")
                                        (("1"
                                          (expand "nth")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (expand "DLGLOBALLY")
                                              (("1"
                                                (expand "DLEVENTUALLY")
                                                (("1"
                                                  (inst
                                                   -1
                                                   "(: STATE(x!1), ERROR :)")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (skeep)
                                                      (("1"
                                                        (typepred
                                                         "suffix_1")
                                                        (("1"
                                                          (expand
                                                           "wf_trace?")
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (lemma
                                                               "suffix_same_length[TraceState]")
                                                              (("1"
                                                                (inst?)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (split)
                                                                    (("1"
                                                                      (replace
                                                                       -1
                                                                       -5
                                                                       rl)
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (expand
                                                                           "State_Trace")
                                                                          (("1"
                                                                            (propax)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (expand
                                                                       "length"
                                                                       1
                                                                       1)
                                                                      (("2"
                                                                        (expand
                                                                         "length"
                                                                         1
                                                                         1)
                                                                        (("2"
                                                                          (expand
                                                                           "length"
                                                                           1
                                                                           1)
                                                                          (("2"
                                                                            (case
                                                                             "length(suffix_1)=1")
                                                                            (("1"
                                                                              (lemma
                                                                               "suffix_nth[TraceState]")
                                                                              (("1"
                                                                                (inst?)
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (inst
                                                                                     -1
                                                                                     "0")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "nth")
                                                                                      (("1"
                                                                                        (replace
                                                                                         -2)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "length"
                                                                                           -1)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "length"
                                                                                             -1)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "length"
                                                                                               -1)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "nth"
                                                                                                 -1
                                                                                                 1)
                                                                                                (("1"
                                                                                                  (propax)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (grind)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (lemma
                                                     "suffix_reflexive[TraceState]")
                                                    (("2"
                                                      (inst?)
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (expand
                                                           "wf_trace?")
                                                          (("2"
                                                            (skeep)
                                                            (("2"
                                                              (typepred
                                                               "i")
                                                              (("2"
                                                                (grind)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (expand "wf_trace?")
                                  (("2"
                                    (skeep)
                                    (("2"
                                      (typepred "i")
                                      (("2" (grind) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((DLOR const-decl "bool" bool_expr nil)
    (DLNOT const-decl "bool" bool_expr nil)
    (STATE adt-constructor-decl "[Environment -> (state?)]"
     TraceState_adt nil)
    (state? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (suffix_same_length formula-decl nil more_list_props structures)
    (ERROR adt-constructor-decl "(error?)" TraceState_adt nil)
    (suffix? def-decl "bool" more_list_props structures)
    (suffix_length formula-decl nil more_list_props structures)
    (car adt-accessor-decl "[(cons?) -> T]" list_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (error? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (State_Trace const-decl "bool" ltl_expr nil)
    (suffix_reflexive formula-decl nil more_list_props structures)
    (suffix_nth formula-decl nil more_list_props structures)
    (DLEVENTUALLY const-decl "bool" ltl_expr nil)
    (DLGLOBALLY const-decl "bool" ltl_expr nil)
    (last const-decl "T" more_list_props structures)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil)
    (normDLGE const-decl "bool" ltl_expr nil)
    (TEST adt-constructor-decl "[BoolExpr -> (test?)]" HP_adt nil)
    (test? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (ALLRUNS_tr const-decl "bool" ltl_expr nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (list type-decl nil list_adt nil)
    (TraceState type-decl nil TraceState_adt nil)
    (HP type-decl nil HP_adt nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (Environment type-eq-decl nil hp_def nil)
    (DLAND const-decl "bool" bool_expr nil))
   shostak))
 (dltl_s_TESTGE 0
  (dltl_s_TESTGE-1 nil 3894447234
   ("" (skeep)
    (("" (expand "DLAND")
      (("" (expand "DLOR")
        (("" (decompose-equality)
          (("" (iff)
            (("" (split)
              (("1" (flatten)
                (("1" (expand "DLNOT")
                  (("1" (expand "SOMERUNS_tr")
                    (("1" (expand "trace_semantic_rel")
                      (("1" (assert)
                        (("1" (case "NOT P(x!1)")
                          (("1" (assert)
                            (("1" (inst 2 "(: STATE(x!1), ERROR :)")
                              (("1"
                                (assert)
                                (("1"
                                  (expand "normDLGE")
                                  (("1"
                                    (expand "finite_trace?")
                                    (("1"
                                      (expand "last")
                                      (("1"
                                        (expand "nth")
                                        (("1"
                                          (expand "nth")
                                          (("1"
                                            (expand "length")
                                            (("1"
                                              (expand "length")
                                              (("1"
                                                (expand "length")
                                                (("1"
                                                  (expand "DLGLOBALLY")
                                                  (("1"
                                                    (skeep)
                                                    (("1"
                                                      (typepred
                                                       "suffix")
                                                      (("1"
                                                        (expand
                                                         "DLEVENTUALLY")
                                                        (("1"
                                                          (lemma
                                                           "suffix_same_length[TraceState]")
                                                          (("1"
                                                            (inst?)
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (split)
                                                                (("1"
                                                                  (replace
                                                                   -1)
                                                                  (("1"
                                                                    (inst
                                                                     2
                                                                     "suffix")
                                                                    (("1"
                                                                      (expand
                                                                       "State_Trace")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (replace
                                                                           -1
                                                                           2
                                                                           rl)
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (expand
                                                                   "length"
                                                                   1
                                                                   1)
                                                                  (("2"
                                                                    (expand
                                                                     "length"
                                                                     1
                                                                     1)
                                                                    (("2"
                                                                      (expand
                                                                       "length"
                                                                       1
                                                                       1)
                                                                      (("2"
                                                                        (expand
                                                                         "wf_trace?")
                                                                        (("2"
                                                                          (flatten)
                                                                          (("2"
                                                                            (case
                                                                             "length(suffix)=1")
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (lemma
                                                                                 "suffix_nth[TraceState]")
                                                                                (("1"
                                                                                  (inst?)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (inst
                                                                                       -1
                                                                                       "0")
                                                                                      (("1"
                                                                                        (replace
                                                                                         -2)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "length"
                                                                                           -1)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "length"
                                                                                             -1)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "length"
                                                                                               -1)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "nth"
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "nth"
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (propax)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (expand "wf_trace?")
                                (("2" (grind) nil nil))
                                nil))
                              nil))
                            nil)
                           ("2" (assert)
                            (("2" (expand "normDLGE")
                              (("2"
                                (expand "finite_trace?")
                                (("2"
                                  (expand "last")
                                  (("2"
                                    (inst 1 "(: STATE(x!1) :)")
                                    (("1"
                                      (expand "nth")
                                      (("1"
                                        (expand "length")
                                        (("1"
                                          (expand "length")
                                          (("1" (propax) nil nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2" (grind) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (flatten)
                (("2" (expand "SOMERUNS_tr")
                  (("2" (skeep)
                    (("2" (expand "trace_semantic_rel")
                      (("2" (replace -1)
                        (("2" (assert)
                          (("2" (split)
                            (("1" (flatten)
                              (("1"
                                (assert)
                                (("1"
                                  (expand "DLNOT")
                                  (("1"
                                    (expand "normDLGE")
                                    (("1"
                                      (expand "finite_trace?")
                                      (("1"
                                        (expand "last")
                                        (("1"
                                          (replace -1)
                                          (("1"
                                            (assert)
                                            (("1"
                                              (replace -3)
                                              (("1" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (flatten)
                              (("2"
                                (assert)
                                (("2"
                                  (expand "DLNOT")
                                  (("2"
                                    (expand "normDLGE")
                                    (("2"
                                      (expand "finite_trace?")
                                      (("2"
                                        (expand "last")
                                        (("2"
                                          (expand "DLGLOBALLY")
                                          (("2"
                                            (inst -4 "trace")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (split)
                                                (("1"
                                                  (expand
                                                   "DLEVENTUALLY")
                                                  (("1"
                                                    (skeep)
                                                    (("1"
                                                      (typepred
                                                       "suffix")
                                                      (("1"
                                                        (expand
                                                         "wf_trace?")
                                                        (("1"
                                                          (flatten)
                                                          (("1"
                                                            (lemma
                                                             "suffix_same_length[TraceState]")
                                                            (("1"
                                                              (inst?)
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (replace
                                                                   -6)
                                                                  (("1"
                                                                    (split)
                                                                    (("1"
                                                                      (expand
                                                                       "State_Trace")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (replace
                                                                           -1
                                                                           -5
                                                                           rl)
                                                                          (("1"
                                                                            (expand
                                                                             "nth")
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (replace
                                                                                 -8)
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (case
                                                                       "length(suffix)=1")
                                                                      (("1"
                                                                        (lemma
                                                                         "suffix_nth[TraceState]")
                                                                        (("1"
                                                                          (inst?)
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (inst
                                                                               -1
                                                                               "0")
                                                                              (("1"
                                                                                (replace
                                                                                 -7)
                                                                                (("1"
                                                                                  (replace
                                                                                   -2)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "nth"
                                                                                       -1
                                                                                       1)
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (grind)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (assert)
                                                  (("2"
                                                    (typepred "trace")
                                                    (("2"
                                                      (expand
                                                       "wf_trace?")
                                                      (("2"
                                                        (grind)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (lemma
                                               "suffix_reflexive[TraceState]")
                                              (("2" (inst?) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((DLAND const-decl "bool" bool_expr nil)
    (Environment type-eq-decl nil hp_def nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (DLNOT const-decl "bool" bool_expr nil)
    (HP type-decl nil HP_adt nil)
    (TraceState type-decl nil TraceState_adt nil)
    (list type-decl nil list_adt nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (SOMERUNS_tr const-decl "bool" ltl_expr nil)
    (test? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (TEST adt-constructor-decl "[BoolExpr -> (test?)]" HP_adt nil)
    (normDLGE const-decl "bool" ltl_expr nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (ERROR adt-constructor-decl "(error?)" TraceState_adt nil)
    (error? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (STATE adt-constructor-decl "[Environment -> (state?)]"
     TraceState_adt nil)
    (state? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (last const-decl "T" more_list_props structures)
    (DLGLOBALLY const-decl "bool" ltl_expr nil)
    (suffix? def-decl "bool" more_list_props structures)
    (suffix_same_length formula-decl nil more_list_props structures)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (below type-eq-decl nil naturalnumbers nil)
    (< const-decl "bool" reals nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (suffix_nth formula-decl nil more_list_props structures)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (State_Trace const-decl "bool" ltl_expr nil)
    (car adt-accessor-decl "[(cons?) -> T]" list_adt nil)
    (DLEVENTUALLY const-decl "bool" ltl_expr nil)
    (length def-decl "nat" list_props nil)
    (nth def-decl "T" list_props nil)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (suffix_reflexive formula-decl nil more_list_props structures)
    (even_minus_odd_is_odd application-judgement "odd_int" integers
     nil)
    (odd_minus_odd_is_even application-judgement "even_int" integers
     nil)
    (DLOR const-decl "bool" bool_expr nil))
   shostak))
 (dltl_ASSIGNcap 0
  (dltl_ASSIGNcap-1 nil 3889022728
   ("" (skeep)
    (("" (expand "DLAND")
      (("" (decompose-equality)
        (("" (iff)
          (("" (split)
            (("1" (flatten)
              (("1" (expand "ALLRUNS_tr")
                (("1" (expand "ALLRUNS")
                  (("1" (skeep)
                    (("1" (expand "trace_semantic_rel")
                      (("1" (flatten)
                        (("1" (inst -2 "state(nth(trace, 1))")
                          (("1" (expand "semantic_rel")
                            (("1" (assert)
                              (("1"
                                (replace -3)
                                (("1"
                                  (assert)
                                  (("1"
                                    (split)
                                    (("1"
                                      (flatten)
                                      (("1"
                                        (expand "normDLGLOBALLY")
                                        (("1"
                                          (expand "finite_trace?")
                                          (("1"
                                            (expand "last")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (expand "DLGLOBALLY")
                                                (("1"
                                                  (skeep)
                                                  (("1"
                                                    (lemma
                                                     "suffix_nth[TraceState]")
                                                    (("1"
                                                      (typepred
                                                       "suffix")
                                                      (("1"
                                                        (inst?)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (expand
                                                             "State_Trace")
                                                            (("1"
                                                              (inst
                                                               -3
                                                               "0")
                                                              (("1"
                                                                (expand
                                                                 "nth"
                                                                 -3
                                                                 1)
                                                                (("1"
                                                                  (replace
                                                                   -3)
                                                                  (("1"
                                                                    (lemma
                                                                     "suffix_length[TraceState]")
                                                                    (("1"
                                                                      (inst?)
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (replace
                                                                           -9)
                                                                          (("1"
                                                                            (case
                                                                             "length(suffix)=1")
                                                                            (("1"
                                                                              (replace
                                                                               -1)
                                                                              (("1"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (case
                                                                                 "length(suffix)=2")
                                                                                (("1"
                                                                                  (replace
                                                                                   -1)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (replace
                                                                                       -9)
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (expand
                                                                 "wf_trace?")
                                                                (("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (grind)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2" (propax) nil nil)
                                     ("3" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (flatten)
              (("2" (expand "normDLGLOBALLY")
                (("2" (expand "ALLRUNS_tr")
                  (("2" (expand "ALLRUNS")
                    (("2" (split)
                      (("1" (expand "trace_semantic_rel")
                        (("1" (name "envo" "assign_sub(l)(x!1)")
                          (("1"
                            (inst -2 "(: STATE(x!1), STATE(envo) :)")
                            (("1" (expand "finite_trace?")
                              (("1"
                                (expand "last")
                                (("1"
                                  (expand "length")
                                  (("1"
                                    (expand "length")
                                    (("1"
                                      (expand "length")
                                      (("1"
                                        (expand "nth" -2 1)
                                        (("1"
                                          (expand "nth" -2 1)
                                          (("1"
                                            (expand "nth" -2 1)
                                            (("1"
                                              (expand "nth" -2 1)
                                              (("1"
                                                (expand "nth" -2 1)
                                                (("1"
                                                  (expand "nth" -2 1)
                                                  (("1"
                                                    (expand "nth" -2 3)
                                                    (("1"
                                                      (expand
                                                       "nth"
                                                       -2
                                                       3)
                                                      (("1"
                                                        (expand
                                                         "nth"
                                                         -2
                                                         3)
                                                        (("1"
                                                          (expand
                                                           "nth"
                                                           -2
                                                           3)
                                                          (("1"
                                                            (expand
                                                             "nth"
                                                             -2
                                                             3)
                                                            (("1"
                                                              (expand
                                                               "nth"
                                                               -2
                                                               3)
                                                              (("1"
                                                                (expand
                                                                 "nth"
                                                                 -2
                                                                 3)
                                                                (("1"
                                                                  (expand
                                                                   "nth"
                                                                   -2
                                                                   3)
                                                                  (("1"
                                                                    (split)
                                                                    (("1"
                                                                      (flatten)
                                                                      (("1"
                                                                        (expand
                                                                         "DLGLOBALLY")
                                                                        (("1"
                                                                          (inst
                                                                           -2
                                                                           "(: STATE(x!1), STATE(envo) :)")
                                                                          (("1"
                                                                            (expand
                                                                             "State_Trace")
                                                                            (("1"
                                                                              (propax)
                                                                              nil
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (lemma
                                                                             "suffix_reflexive[TraceState]")
                                                                            (("2"
                                                                              (inst?)
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (expand
                                                                                   "wf_trace?")
                                                                                  (("2"
                                                                                    (skeep)
                                                                                    (("2"
                                                                                      (typepred
                                                                                       "i")
                                                                                      (("2"
                                                                                        (grind)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (lemma
                                                                       "assign_env_alt")
                                                                      (("2"
                                                                        (expand
                                                                         "assign_sub")
                                                                        (("2"
                                                                          (inst?)
                                                                          (("2"
                                                                            (flatten)
                                                                            (("2"
                                                                              (skeep)
                                                                              (("2"
                                                                                (typepred
                                                                                 "i")
                                                                                (("2"
                                                                                  (inst
                                                                                   -2
                                                                                   "i")
                                                                                  (("2"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("3"
                                                                      (lemma
                                                                       "assign_env_alt")
                                                                      (("3"
                                                                        (expand
                                                                         "assign_sub")
                                                                        (("3"
                                                                          (inst?)
                                                                          (("3"
                                                                            (flatten)
                                                                            (("3"
                                                                              (skeep)
                                                                              (("3"
                                                                                (typepred
                                                                                 "varj")
                                                                                (("3"
                                                                                  (inst
                                                                                   -3
                                                                                   "varj")
                                                                                  (("3"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (expand "wf_trace?")
                              (("2"
                                (skeep)
                                (("2"
                                  (typepred "i")
                                  (("2" (grind) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (skeep)
                        (("2" (inst -2 "(: STATE(x!1), STATE(envo) :)")
                          (("1" (expand "trace_semantic_rel")
                            (("1" (expand "finite_trace?")
                              (("1"
                                (expand "last")
                                (("1"
                                  (expand "nth" -2 1)
                                  (("1"
                                    (expand "length")
                                    (("1"
                                      (expand "length")
                                      (("1"
                                        (expand "length")
                                        (("1"
                                          (expand "nth" -2 1)
                                          (("1"
                                            (expand "nth" -2 1)
                                            (("1"
                                              (expand "nth" -2 1)
                                              (("1"
                                                (expand "nth" -2 1)
                                                (("1"
                                                  (expand "nth" -2 1)
                                                  (("1"
                                                    (expand "nth" -2 3)
                                                    (("1"
                                                      (expand
                                                       "nth"
                                                       -2
                                                       3)
                                                      (("1"
                                                        (expand
                                                         "nth"
                                                         -2
                                                         3)
                                                        (("1"
                                                          (expand
                                                           "nth"
                                                           -2
                                                           3)
                                                          (("1"
                                                            (expand
                                                             "nth"
                                                             -2
                                                             3)
                                                            (("1"
                                                              (expand
                                                               "nth"
                                                               -2
                                                               3)
                                                              (("1"
                                                                (expand
                                                                 "nth"
                                                                 -2
                                                                 3)
                                                                (("1"
                                                                  (expand
                                                                   "nth"
                                                                   -2
                                                                   3)
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (expand
                                                                       "semantic_rel")
                                                                      (("1"
                                                                        (flatten)
                                                                        (("1"
                                                                          (split
                                                                           -3)
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (flatten)
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (expand
                                                                                   "DLGLOBALLY")
                                                                                  (("1"
                                                                                    (inst
                                                                                     -2
                                                                                     "(: STATE(envo) :)")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "State_Trace")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "nth")
                                                                                        (("1"
                                                                                          (expand
                                                                                           "nth")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (lemma
                                                                                       "suffix_supl[TraceState]")
                                                                                      (("2"
                                                                                        (inst?)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "wf_trace?")
                                                                                          (("2"
                                                                                            (split)
                                                                                            (("1"
                                                                                              (skeep)
                                                                                              (("1"
                                                                                                (typepred
                                                                                                 "i")
                                                                                                (("1"
                                                                                                  (grind)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (inst
                                                                                                 2
                                                                                                 "(: STATE(x!1) :)")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (decompose-equality
                                                                                                     2)
                                                                                                    (("1"
                                                                                                      (lemma
                                                                                                       "car_append[TraceState]")
                                                                                                      (("1"
                                                                                                        (inst?)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (lemma
                                                                                                       "cdr_append[TraceState]")
                                                                                                      (("2"
                                                                                                        (inst?)
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (lemma
                                                                                                             "append_null_left[TraceState]")
                                                                                                            (("2"
                                                                                                              (inst?)
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("3"
                                                                                                      (grind)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (propax)
                                                                            nil
                                                                            nil)
                                                                           ("3"
                                                                            (propax)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (expand "wf_trace?")
                            (("2" (skeep)
                              (("2"
                                (typepred "i")
                                (("2" (grind) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((DLAND const-decl "bool" bool_expr nil)
    (assign_sub const-decl "Environment" substitution nil)
    (assign_env_alt formula-decl nil substitution nil)
    (suffix_reflexive formula-decl nil more_list_props structures)
    (STATE adt-constructor-decl "[Environment -> (state?)]"
     TraceState_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (suffix_supl formula-decl nil more_list_props structures)
    (cdr_append formula-decl nil more_list_props structures)
    (append_null_left formula-decl nil more_list_props structures)
    (car_append formula-decl nil more_list_props structures)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (list_cons_extensionality formula-decl nil list_adt nil)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil)
    (state? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (state adt-accessor-decl "[(state?) -> Environment]" TraceState_adt
     nil)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (suffix? def-decl "bool" more_list_props structures)
    (not_in_map const-decl "bool" hp_def nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (cdr adt-accessor-decl "[(cons?) -> list]" list_adt nil)
    (MapExprInj type-eq-decl nil hp_def nil)
    (suffix_length formula-decl nil more_list_props structures)
    (State_Trace const-decl "bool" ltl_expr nil)
    (suffix_nth formula-decl nil more_list_props structures)
    (DLGLOBALLY const-decl "bool" ltl_expr nil)
    (last const-decl "T" more_list_props structures)
    (semantic_rel inductive-decl "bool" hp_expr nil)
    (normDLGLOBALLY const-decl "bool" ltl_expr nil)
    (ALLRUNS_tr const-decl "bool" ltl_expr nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (TraceState type-decl nil TraceState_adt nil)
    (ASSIGN adt-constructor-decl "[Assigns -> (assign?)]" HP_adt nil)
    (assign? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (Assigns type-eq-decl nil hp_def nil)
    (mapexpr_inj const-decl "bool" hp_def nil)
    (list type-decl nil list_adt nil)
    (MapExpr type-eq-decl nil hp_def nil)
    (RealExpr type-eq-decl nil hp_def nil)
    (ALLRUNS const-decl "bool" bool_expr nil)
    (HP type-decl nil HP_adt nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (Environment type-eq-decl nil hp_def nil)
    (null_MapExprInj name-judgement "MapExprInj" hp_def nil))
   shostak))
 (dltl_ASSIGNcup 0
  (dltl_ASSIGNcup-1 nil 3889023836
   ("" (skeep)
    (("" (expand "DLOR")
      (("" (decompose-equality)
        (("" (iff)
          (("" (split)
            (("1" (flatten)
              (("1" (expand "ALLRUNS_tr")
                (("1" (skeep)
                  (("1" (expand "normDLEVENTUALLY")
                    (("1" (expand "trace_semantic_rel")
                      (("1" (flatten)
                        (("1" (expand "finite_trace?")
                          (("1" (expand "last")
                            (("1" (assert)
                              (("1"
                                (flatten)
                                (("1"
                                  (split)
                                  (("1"
                                    (expand "DLEVENTUALLY")
                                    (("1"
                                      (inst 2 "trace")
                                      (("1"
                                        (expand "State_Trace")
                                        (("1"
                                          (assert)
                                          (("1"
                                            (expand "nth" -4)
                                            (("1"
                                              (assert)
                                              (("1"
                                                (expand "nth" -2)
                                                (("1"
                                                  (replace -2)
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (lemma
                                         "suffix_reflexive[TraceState]")
                                        (("2"
                                          (inst?)
                                          (("2"
                                            (assert)
                                            (("2"
                                              (expand "nth")
                                              (("2" (propax) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (expand "ALLRUNS")
                                    (("2"
                                      (inst -1 "state(nth(trace, 1))")
                                      (("2"
                                        (expand "semantic_rel")
                                        (("2"
                                          (assert)
                                          (("2"
                                            (replace -2)
                                            (("2"
                                              (assert)
                                              (("2"
                                                (split)
                                                (("1"
                                                  (expand
                                                   "DLEVENTUALLY")
                                                  (("1"
                                                    (inst
                                                     2
                                                     "cdr(trace)")
                                                    (("1"
                                                      (expand
                                                       "State_Trace")
                                                      (("1"
                                                        (grind)
                                                        nil
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (expand
                                                       "wf_trace?")
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (split)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (expand
                                                               "length"
                                                               -3)
                                                              (("1"
                                                                (typepred
                                                                 "trace")
                                                                (("1"
                                                                  (expand
                                                                   "wf_trace?")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (expand
                                                                       "length")
                                                                      (("1"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (skeep)
                                                            (("2"
                                                              (typepred
                                                               "i")
                                                              (("2"
                                                                (typepred
                                                                 "trace")
                                                                (("2"
                                                                  (expand
                                                                   "wf_trace?")
                                                                  (("2"
                                                                    (expand
                                                                     "length")
                                                                    (("2"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("3"
                                                            (lemma
                                                             "suffix_supl[TraceState]")
                                                            (("3"
                                                              (inst?)
                                                              (("3"
                                                                (assert)
                                                                (("3"
                                                                  (inst
                                                                   1
                                                                   "(:car(trace):)")
                                                                  (("3"
                                                                    (assert)
                                                                    (("3"
                                                                      (lemma
                                                                       "cons_append[TraceState]")
                                                                      (("3"
                                                                        (inst
                                                                         -1
                                                                         "cdr(trace)"
                                                                         "car(trace)")
                                                                        (("3"
                                                                          (assert)
                                                                          (("3"
                                                                            (replace
                                                                             -1
                                                                             1
                                                                             rl)
                                                                            (("3"
                                                                              (hide-all-but
                                                                               1)
                                                                              (("3"
                                                                                (decompose-equality)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("4"
                                                            (expand
                                                             "nth")
                                                            (("4"
                                                              (assert)
                                                              (("4"
                                                                (expand
                                                                 "nth")
                                                                (("4"
                                                                  (propax)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2" (propax) nil nil)
                                                 ("3"
                                                  (propax)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (flatten)
              (("2" (expand "ALLRUNS")
                (("2" (skeep)
                  (("2" (expand "ALLRUNS_tr")
                    (("2" (inst -1 "(: STATE(x!1),STATE(envo) :)")
                      (("1" (expand "trace_semantic_rel")
                        (("1" (expand "normDLEVENTUALLY")
                          (("1" (expand "finite_trace?")
                            (("1" (expand "last")
                              (("1"
                                (expand "semantic_rel")
                                (("1"
                                  (flatten)
                                  (("1"
                                    (expand "length")
                                    (("1"
                                      (expand "length")
                                      (("1"
                                        (expand "length")
                                        (("1"
                                          (expand "nth" -1 1)
                                          (("1"
                                            (expand "nth" -1 1)
                                            (("1"
                                              (expand "nth" -1 1)
                                              (("1"
                                                (expand "nth" -1 1)
                                                (("1"
                                                  (expand "nth" -1 1)
                                                  (("1"
                                                    (expand "nth" -1 1)
                                                    (("1"
                                                      (expand
                                                       "nth"
                                                       -1
                                                       3)
                                                      (("1"
                                                        (expand
                                                         "nth"
                                                         -1
                                                         3)
                                                        (("1"
                                                          (expand
                                                           "nth"
                                                           -1
                                                           3)
                                                          (("1"
                                                            (expand
                                                             "nth"
                                                             -1
                                                             3)
                                                            (("1"
                                                              (expand
                                                               "nth"
                                                               -1
                                                               3)
                                                              (("1"
                                                                (expand
                                                                 "nth"
                                                                 -1
                                                                 3)
                                                                (("1"
                                                                  (expand
                                                                   "nth"
                                                                   -1
                                                                   3)
                                                                  (("1"
                                                                    (expand
                                                                     "nth"
                                                                     -1
                                                                     3)
                                                                    (("1"
                                                                      (split)
                                                                      (("1"
                                                                        (expand
                                                                         "nth")
                                                                        (("1"
                                                                          (expand
                                                                           "nth")
                                                                          (("1"
                                                                            (propax)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (expand
                                                                         "DLEVENTUALLY")
                                                                        (("2"
                                                                          (skeep)
                                                                          (("2"
                                                                            (typepred
                                                                             "suffix")
                                                                            (("2"
                                                                              (expand
                                                                               "State_Trace")
                                                                              (("2"
                                                                                (expand
                                                                                 "wf_trace?")
                                                                                (("2"
                                                                                  (flatten)
                                                                                  (("2"
                                                                                    (lemma
                                                                                     "suffix_nth[TraceState]")
                                                                                    (("2"
                                                                                      (inst?)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (inst
                                                                                           -1
                                                                                           "0")
                                                                                          (("1"
                                                                                            (lemma
                                                                                             "suffix_length[TraceState]")
                                                                                            (("1"
                                                                                              (inst?)
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "length"
                                                                                                   -1
                                                                                                   2)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "length"
                                                                                                     -1
                                                                                                     2)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "length"
                                                                                                       -1
                                                                                                       2)
                                                                                                      (("1"
                                                                                                        (case
                                                                                                         "length(suffix)=2")
                                                                                                        (("1"
                                                                                                          (lemma
                                                                                                           "suffix_same_length[TraceState]")
                                                                                                          (("1"
                                                                                                            (inst?)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "length"
                                                                                                                 -1
                                                                                                                 1)
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "length"
                                                                                                                   -1
                                                                                                                   1)
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "length"
                                                                                                                     -1
                                                                                                                     1)
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (replace
                                                                                                                         -1
                                                                                                                         -8
                                                                                                                         rl)
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (case
                                                                                                           "length(suffix)=1")
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             -1)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "length"
                                                                                                               -3)
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "length"
                                                                                                                 -3)
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "length"
                                                                                                                   -3)
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "nth"
                                                                                                                     -3)
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "nth"
                                                                                                                       -3)
                                                                                                                      (("1"
                                                                                                                        (replace
                                                                                                                         -3)
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (grind)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (grind)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("3"
                                                                        (propax)
                                                                        nil
                                                                        nil)
                                                                       ("4"
                                                                        (propax)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (expand "wf_trace?")
                        (("2" (skeep)
                          (("2" (typepred "i") (("2" (grind) nil nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((DLOR const-decl "bool" bool_expr nil)
    (STATE adt-constructor-decl "[Environment -> (state?)]"
     TraceState_adt nil)
    (suffix_same_length formula-decl nil more_list_props structures)
    (suffix_length formula-decl nil more_list_props structures)
    (suffix_nth formula-decl nil more_list_props structures)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (suffix? def-decl "bool" more_list_props structures)
    (error? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (car adt-accessor-decl "[(cons?) -> T]" list_adt nil)
    (State_Trace const-decl "bool" ltl_expr nil)
    (suffix_reflexive formula-decl nil more_list_props structures)
    (DLEVENTUALLY const-decl "bool" ltl_expr nil)
    (state adt-accessor-decl "[(state?) -> Environment]" TraceState_adt
     nil)
    (state? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (cons_append formula-decl nil more_list_props structures)
    (list_cons_extensionality formula-decl nil list_adt nil)
    (suffix_supl formula-decl nil more_list_props structures)
    (cdr adt-accessor-decl "[(cons?) -> list]" list_adt nil)
    (semantic_rel inductive-decl "bool" hp_expr nil)
    (last const-decl "T" more_list_props structures)
    (normDLEVENTUALLY const-decl "bool" ltl_expr nil)
    (ALLRUNS_tr const-decl "bool" ltl_expr nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (TraceState type-decl nil TraceState_adt nil)
    (ASSIGN adt-constructor-decl "[Assigns -> (assign?)]" HP_adt nil)
    (assign? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (Assigns type-eq-decl nil hp_def nil)
    (mapexpr_inj const-decl "bool" hp_def nil)
    (list type-decl nil list_adt nil)
    (MapExpr type-eq-decl nil hp_def nil)
    (RealExpr type-eq-decl nil hp_def nil)
    (ALLRUNS const-decl "bool" bool_expr nil)
    (HP type-decl nil HP_adt nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (Environment type-eq-decl nil hp_def nil)
    (null_MapExprInj name-judgement "MapExprInj" hp_def nil))
   shostak))
 (dltl_s_ASSIGNcup 0
  (dltl_s_ASSIGNcup-1 nil 3894456975
   ("" (skeep)
    (("" (expand "DLOR")
      (("" (decompose-equality)
        (("" (iff)
          (("" (split)
            (("1" (flatten)
              (("1" (expand "SOMERUNS")
                (("1" (expand "SOMERUNS_tr")
                  (("1" (split)
                    (("1" (expand "trace_semantic_rel")
                      (("1" (name "envo" "assign_sub(l)(x!1)")
                        (("1" (inst 1 "(: STATE(x!1), STATE(envo) :)")
                          (("1" (expand "nth" 1 1)
                            (("1" (expand "length" 1 1)
                              (("1"
                                (expand "length" 1 1)
                                (("1"
                                  (expand "length" 1 1)
                                  (("1"
                                    (expand "nth" 1 1)
                                    (("1"
                                      (expand "nth" 1 1)
                                      (("1"
                                        (expand "nth" 1 1)
                                        (("1"
                                          (lemma "assign_env_alt")
                                          (("1"
                                            (expand "nth" 1 1)
                                            (("1"
                                              (expand "nth" 1 1)
                                              (("1"
                                                (expand "nth" 1 3)
                                                (("1"
                                                  (expand "nth" 1 3)
                                                  (("1"
                                                    (expand "nth" 1 3)
                                                    (("1"
                                                      (expand
                                                       "nth"
                                                       1
                                                       3)
                                                      (("1"
                                                        (expand
                                                         "assign_sub")
                                                        (("1"
                                                          (inst?)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (replace
                                                               -2)
                                                              (("1"
                                                                (flatten)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (split)
                                                                    (("1"
                                                                      (propax)
                                                                      nil
                                                                      nil)
                                                                     ("2"
                                                                      (propax)
                                                                      nil
                                                                      nil)
                                                                     ("3"
                                                                      (expand
                                                                       "normDLEVENTUALLY")
                                                                      (("3"
                                                                        (expand
                                                                         "finite_trace?")
                                                                        (("3"
                                                                          (expand
                                                                           "last")
                                                                          (("3"
                                                                            (expand
                                                                             "length")
                                                                            (("3"
                                                                              (expand
                                                                               "length")
                                                                              (("3"
                                                                                (expand
                                                                                 "length")
                                                                                (("3"
                                                                                  (expand
                                                                                   "nth"
                                                                                   1)
                                                                                  (("3"
                                                                                    (expand
                                                                                     "nth"
                                                                                     1)
                                                                                    (("3"
                                                                                      (flatten)
                                                                                      (("3"
                                                                                        (expand
                                                                                         "DLEVENTUALLY")
                                                                                        (("3"
                                                                                          (inst
                                                                                           2
                                                                                           "(: STATE(x!1), STATE(envo) :)")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "State_Trace")
                                                                                            (("1"
                                                                                              (propax)
                                                                                              nil
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (lemma
                                                                                             "suffix_reflexive[TraceState]")
                                                                                            (("2"
                                                                                              (inst?)
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (grind)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (grind) nil nil))
                          nil))
                        nil))
                      nil)
                     ("2" (skeep)
                      (("2" (inst 1 "(: STATE(x!1), STATE(envo) :)")
                        (("1" (expand "nth")
                          (("1" (split 1)
                            (("1" (expand "trace_semantic_rel")
                              (("1"
                                (expand "length")
                                (("1"
                                  (expand "length")
                                  (("1"
                                    (expand "length")
                                    (("1"
                                      (expand "nth" 1 1)
                                      (("1"
                                        (expand "nth" 1 1)
                                        (("1"
                                          (expand "nth" 1 1)
                                          (("1"
                                            (expand "semantic_rel")
                                            (("1"
                                              (flatten)
                                              (("1"
                                                (expand "nth" 1 1)
                                                (("1"
                                                  (expand "nth" 1 1)
                                                  (("1"
                                                    (expand "nth" 1 3)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (expand
                                                         "nth"
                                                         1
                                                         3)
                                                        (("1"
                                                          (expand
                                                           "nth"
                                                           1
                                                           3)
                                                          (("1"
                                                            (expand
                                                             "nth"
                                                             1
                                                             3)
                                                            (("1"
                                                              (split)
                                                              (("1"
                                                                (propax)
                                                                nil
                                                                nil)
                                                               ("2"
                                                                (propax)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (expand "normDLEVENTUALLY")
                              (("2"
                                (expand "finite_trace?")
                                (("2"
                                  (expand "last")
                                  (("2"
                                    (expand "length")
                                    (("2"
                                      (expand "length")
                                      (("2"
                                        (expand "length")
                                        (("2"
                                          (expand "nth")
                                          (("2"
                                            (expand "nth")
                                            (("2"
                                              (assert)
                                              (("2"
                                                (flatten)
                                                (("2"
                                                  (split)
                                                  (("1"
                                                    (propax)
                                                    nil
                                                    nil)
                                                   ("2"
                                                    (expand
                                                     "DLEVENTUALLY")
                                                    (("2"
                                                      (inst
                                                       2
                                                       "(: STATE(envo) :)")
                                                      (("1"
                                                        (expand
                                                         "State_Trace")
                                                        (("1"
                                                          (propax)
                                                          nil
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (split)
                                                        (("1"
                                                          (grind)
                                                          nil
                                                          nil)
                                                         ("2"
                                                          (lemma
                                                           "suffix_supl[TraceState]")
                                                          (("2"
                                                            (inst?)
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (inst
                                                                 1
                                                                 "(: STATE(x!1) :)")
                                                                (("2"
                                                                  (decompose-equality)
                                                                  (("1"
                                                                    (lemma
                                                                     "car_append[TraceState]")
                                                                    (("1"
                                                                      (inst?)
                                                                      (("1"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (lemma
                                                                     "cdr_append[TraceState]")
                                                                    (("2"
                                                                      (inst?)
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (lemma
                                                                           "append_null_left[TraceState]")
                                                                          (("2"
                                                                            (inst?)
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("3"
                                                                    (grind)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (grind) nil nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (flatten)
              (("2" (expand "SOMERUNS")
                (("2" (expand "SOMERUNS_tr")
                  (("2" (skeep)
                    (("2" (expand "trace_semantic_rel")
                      (("2" (flatten)
                        (("2" (inst 2 "state(nth(trace, 1))")
                          (("2" (assert)
                            (("2" (expand "normDLEVENTUALLY")
                              (("2"
                                (expand "finite_trace?")
                                (("2"
                                  (expand "last")
                                  (("2"
                                    (assert)
                                    (("2"
                                      (replace -2)
                                      (("2"
                                        (assert)
                                        (("2"
                                          (split 2)
                                          (("1"
                                            (expand "semantic_rel")
                                            (("1"
                                              (split)
                                              (("1"
                                                (replace -1)
                                                (("1"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil)
                                               ("2"
                                                (replace -1)
                                                (("2"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (flatten)
                                            (("2"
                                              (assert)
                                              (("2"
                                                (expand "DLEVENTUALLY")
                                                (("2"
                                                  (skeep)
                                                  (("2"
                                                    (expand
                                                     "State_Trace")
                                                    (("2"
                                                      (lemma
                                                       "suffix_nth[TraceState]")
                                                      (("2"
                                                        (typepred
                                                         "suffix")
                                                        (("2"
                                                          (inst?)
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (inst
                                                               -3
                                                               "0")
                                                              (("1"
                                                                (replace
                                                                 -5)
                                                                (("1"
                                                                  (expand
                                                                   "nth"
                                                                   -3
                                                                   1)
                                                                  (("1"
                                                                    (expand
                                                                     "wf_trace?")
                                                                    (("1"
                                                                      (flatten)
                                                                      (("1"
                                                                        (case
                                                                         "length(suffix)=1")
                                                                        (("1"
                                                                          (replace
                                                                           -1)
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (case
                                                                           "length(suffix)=2")
                                                                          (("1"
                                                                            (replace
                                                                             -1)
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (replace
                                                                                 -5)
                                                                                (("1"
                                                                                  (replace
                                                                                   -6)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (hide-all-but
                                                                             (1
                                                                              2
                                                                              -3
                                                                              -1
                                                                              -6))
                                                                            (("2"
                                                                              (grind)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (expand
                                                                 "wf_trace?")
                                                                (("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (grind)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((DLOR const-decl "bool" bool_expr nil)
    (below type-eq-decl nil nat_types nil)
    (state adt-accessor-decl "[(state?) -> Environment]" TraceState_adt
     nil)
    (suffix_nth formula-decl nil more_list_props structures)
    (even_minus_even_is_even application-judgement "even_int" integers
     nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (even_minus_odd_is_odd application-judgement "odd_int" integers
     nil)
    (suffix_supl formula-decl nil more_list_props structures)
    (list_cons_extensionality formula-decl nil list_adt nil)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (car_append formula-decl nil more_list_props structures)
    (append_null_left formula-decl nil more_list_props structures)
    (cdr_append formula-decl nil more_list_props structures)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (semantic_rel inductive-decl "bool" hp_expr nil)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil)
    (STATE adt-constructor-decl "[Environment -> (state?)]"
     TraceState_adt nil)
    (state? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (length def-decl "nat" list_props nil)
    (assign_env_alt formula-decl nil substitution nil)
    (last const-decl "T" more_list_props structures)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (suffix? def-decl "bool" more_list_props structures)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (error? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (car adt-accessor-decl "[(cons?) -> T]" list_adt nil)
    (State_Trace const-decl "bool" ltl_expr nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (reverse def-decl "list[T]" list_props nil)
    (append def-decl "list[T]" list_props nil)
    (below type-eq-decl nil naturalnumbers nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (< const-decl "bool" reals nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (suffix_reflexive formula-decl nil more_list_props structures)
    (DLEVENTUALLY const-decl "bool" ltl_expr nil)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (nth def-decl "T" list_props nil)
    (assign_sub const-decl "Environment" substitution nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (normDLEVENTUALLY const-decl "bool" ltl_expr nil)
    (SOMERUNS_tr const-decl "bool" ltl_expr nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (TraceState type-decl nil TraceState_adt nil)
    (ASSIGN adt-constructor-decl "[Assigns -> (assign?)]" HP_adt nil)
    (assign? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (Assigns type-eq-decl nil hp_def nil)
    (mapexpr_inj const-decl "bool" hp_def nil)
    (list type-decl nil list_adt nil)
    (MapExpr type-eq-decl nil hp_def nil)
    (RealExpr type-eq-decl nil hp_def nil)
    (SOMERUNS const-decl "bool" bool_expr nil)
    (HP type-decl nil HP_adt nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (Environment type-eq-decl nil hp_def nil)
    (null_MapExprInj name-judgement "MapExprInj" hp_def nil))
   shostak))
 (dltl_ASSIGNEG 0
  (dltl_ASSIGNEG-1 nil 3889023948
   ("" (skeep)
    (("" (decompose-equality)
      (("" (iff)
        (("" (split)
          (("1" (flatten)
            (("1" (expand "ALLRUNS")
              (("1" (expand "ALLRUNS_tr")
                (("1" (skeep)
                  (("1" (expand "trace_semantic_rel")
                    (("1" (flatten)
                      (("1" (inst -1 "state(nth(trace, 1))")
                        (("1" (expand "semantic_rel")
                          (("1" (assert)
                            (("1" (replace -2)
                              (("1"
                                (assert)
                                (("1"
                                  (split)
                                  (("1"
                                    (expand "normDLEG")
                                    (("1"
                                      (expand "finite_trace?")
                                      (("1"
                                        (expand "last")
                                        (("1"
                                          (replace -3)
                                          (("1" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2" (propax) nil nil)
                                   ("3" (propax) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (flatten)
            (("2" (expand "ALLRUNS")
              (("2" (expand "ALLRUNS_tr")
                (("2" (skeep)
                  (("2" (expand "trace_semantic_rel")
                    (("2" (expand "semantic_rel")
                      (("2" (flatten)
                        (("2" (inst -1 "(: STATE(x!1), STATE(envo) :)")
                          (("1" (expand "normDLEG")
                            (("1" (expand "finite_trace?")
                              (("1"
                                (expand "last")
                                (("1"
                                  (expand "length")
                                  (("1"
                                    (expand "length")
                                    (("1"
                                      (expand "length")
                                      (("1"
                                        (expand "nth" -1 1)
                                        (("1"
                                          (expand "nth" -1 1)
                                          (("1"
                                            (expand "nth" -1 1)
                                            (("1"
                                              (expand "nth" -1 1)
                                              (("1"
                                                (expand "nth" -1 1)
                                                (("1"
                                                  (expand "nth" -1 1)
                                                  (("1"
                                                    (expand "nth" -1 3)
                                                    (("1"
                                                      (expand
                                                       "nth"
                                                       -1
                                                       3)
                                                      (("1"
                                                        (expand
                                                         "nth"
                                                         -1
                                                         3)
                                                        (("1"
                                                          (expand
                                                           "nth"
                                                           -1
                                                           3)
                                                          (("1"
                                                            (expand
                                                             "nth"
                                                             -1
                                                             3)
                                                            (("1"
                                                              (expand
                                                               "nth"
                                                               -1
                                                               3)
                                                              (("1"
                                                                (expand
                                                                 "nth"
                                                                 -1
                                                                 3)
                                                                (("1"
                                                                  (expand
                                                                   "nth"
                                                                   -1
                                                                   3)
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (split)
                                                                      (("1"
                                                                        (expand
                                                                         "nth")
                                                                        (("1"
                                                                          (expand
                                                                           "nth")
                                                                          (("1"
                                                                            (propax)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (propax)
                                                                        nil
                                                                        nil)
                                                                       ("3"
                                                                        (propax)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (expand "wf_trace?")
                            (("2" (skeep)
                              (("2"
                                (typepred "i")
                                (("2" (grind) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((HP type-decl nil HP_adt nil)
    (Environment type-eq-decl nil hp_def nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (ALLRUNS const-decl "bool" bool_expr nil)
    (RealExpr type-eq-decl nil hp_def nil)
    (MapExpr type-eq-decl nil hp_def nil)
    (list type-decl nil list_adt nil)
    (mapexpr_inj const-decl "bool" hp_def nil)
    (Assigns type-eq-decl nil hp_def nil)
    (assign? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (ASSIGN adt-constructor-decl "[Assigns -> (assign?)]" HP_adt nil)
    (TraceState type-decl nil TraceState_adt nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (ALLRUNS_tr const-decl "bool" ltl_expr nil)
    (normDLEG const-decl "bool" ltl_expr nil)
    (semantic_rel inductive-decl "bool" hp_expr nil)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (last const-decl "T" more_list_props structures)
    (state adt-accessor-decl "[(state?) -> Environment]" TraceState_adt
     nil)
    (state? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (STATE adt-constructor-decl "[Environment -> (state?)]"
     TraceState_adt nil)
    (null_MapExprInj name-judgement "MapExprInj" hp_def nil))
   shostak))
 (dltl_ASSIGNGE 0
  (dltl_ASSIGNGE-1 nil 3889024123
   ("" (skeep)
    (("" (decompose-equality)
      (("" (iff)
        (("" (split)
          (("1" (flatten)
            (("1" (expand "ALLRUNS")
              (("1" (expand "ALLRUNS_tr")
                (("1" (skeep)
                  (("1" (expand "trace_semantic_rel")
                    (("1" (flatten)
                      (("1" (inst -1 "state(nth(trace, 1))")
                        (("1" (expand "semantic_rel")
                          (("1" (assert)
                            (("1" (replace -2)
                              (("1"
                                (assert)
                                (("1"
                                  (split)
                                  (("1"
                                    (expand "normDLGE")
                                    (("1"
                                      (expand "finite_trace?")
                                      (("1"
                                        (expand "last")
                                        (("1"
                                          (replace -3)
                                          (("1" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2" (propax) nil nil)
                                   ("3" (propax) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (flatten)
            (("2" (expand "ALLRUNS")
              (("2" (expand "ALLRUNS_tr")
                (("2" (skeep)
                  (("2" (expand "trace_semantic_rel")
                    (("2" (expand "semantic_rel")
                      (("2" (flatten)
                        (("2" (inst -1 "(: STATE(x!1), STATE(envo) :)")
                          (("1" (expand "normDLGE")
                            (("1" (expand "finite_trace?")
                              (("1"
                                (expand "last")
                                (("1"
                                  (expand "length")
                                  (("1"
                                    (expand "length")
                                    (("1"
                                      (expand "length")
                                      (("1"
                                        (expand "nth" -1 1)
                                        (("1"
                                          (expand "nth" -1 1)
                                          (("1"
                                            (expand "nth" -1 1)
                                            (("1"
                                              (expand "nth" -1 1)
                                              (("1"
                                                (expand "nth" -1 1)
                                                (("1"
                                                  (expand "nth" -1 1)
                                                  (("1"
                                                    (expand "nth" -1 3)
                                                    (("1"
                                                      (expand
                                                       "nth"
                                                       -1
                                                       3)
                                                      (("1"
                                                        (expand
                                                         "nth"
                                                         -1
                                                         3)
                                                        (("1"
                                                          (expand
                                                           "nth"
                                                           -1
                                                           3)
                                                          (("1"
                                                            (expand
                                                             "nth"
                                                             -1
                                                             3)
                                                            (("1"
                                                              (expand
                                                               "nth"
                                                               -1
                                                               3)
                                                              (("1"
                                                                (expand
                                                                 "nth"
                                                                 -1
                                                                 3)
                                                                (("1"
                                                                  (expand
                                                                   "nth"
                                                                   -1
                                                                   3)
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (split)
                                                                      (("1"
                                                                        (expand
                                                                         "nth")
                                                                        (("1"
                                                                          (expand
                                                                           "nth")
                                                                          (("1"
                                                                            (propax)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (propax)
                                                                        nil
                                                                        nil)
                                                                       ("3"
                                                                        (propax)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (expand "wf_trace?")
                            (("2" (skeep)
                              (("2"
                                (typepred "i")
                                (("2" (grind) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((HP type-decl nil HP_adt nil)
    (Environment type-eq-decl nil hp_def nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (ALLRUNS const-decl "bool" bool_expr nil)
    (RealExpr type-eq-decl nil hp_def nil)
    (MapExpr type-eq-decl nil hp_def nil)
    (list type-decl nil list_adt nil)
    (mapexpr_inj const-decl "bool" hp_def nil)
    (Assigns type-eq-decl nil hp_def nil)
    (assign? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (ASSIGN adt-constructor-decl "[Assigns -> (assign?)]" HP_adt nil)
    (TraceState type-decl nil TraceState_adt nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (ALLRUNS_tr const-decl "bool" ltl_expr nil)
    (normDLGE const-decl "bool" ltl_expr nil)
    (semantic_rel inductive-decl "bool" hp_expr nil)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (last const-decl "T" more_list_props structures)
    (state adt-accessor-decl "[(state?) -> Environment]" TraceState_adt
     nil)
    (state? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (STATE adt-constructor-decl "[Environment -> (state?)]"
     TraceState_adt nil)
    (null_MapExprInj name-judgement "MapExprInj" hp_def nil))
   shostak))
 (dltl_DIFFcap 0
  (dltl_DIFFcap-1 nil 3889024783
   ("" (skeep)
    (("" (expand "DLAND")
      (("" (decompose-equality)
        (("" (iff)
          (("" (split)
            (("1" (flatten)
              (("1" (expand "ALLRUNS_tr")
                (("1" (skeep)
                  (("1" (expand "trace_semantic_rel")
                    (("1" (expand "ALLRUNS")
                      (("1" (expand "normDLGLOBALLY")
                        (("1" (expand "finite_trace?")
                          (("1" (expand "last")
                            (("1" (assert)
                              (("1"
                                (split)
                                (("1"
                                  (flatten)
                                  (("1"
                                    (assert)
                                    (("1"
                                      (replace -1)
                                      (("1"
                                        (assert)
                                        (("1"
                                          (replace -5)
                                          (("1"
                                            (assert)
                                            (("1"
                                              (inst -4 "x!1")
                                              (("1"
                                                (split -4)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (expand
                                                     "DLGLOBALLY")
                                                    (("1"
                                                      (skeep)
                                                      (("1"
                                                        (typepred
                                                         "suffix")
                                                        (("1"
                                                          (expand
                                                           "wf_trace?")
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (lemma
                                                               "suffix_length[TraceState]")
                                                              (("1"
                                                                (inst?)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (replace
                                                                     -6)
                                                                    (("1"
                                                                      (expand
                                                                       "State_Trace")
                                                                      (("1"
                                                                        (lemma
                                                                         "suffix_same_length[TraceState]")
                                                                        (("1"
                                                                          (inst?)
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (replace
                                                                               -7)
                                                                              (("1"
                                                                                (split)
                                                                                (("1"
                                                                                  (replace
                                                                                   -1)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "nth")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (replace
                                                                                         -10)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (postpone)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (flatten)
                                  (("2"
                                    (split)
                                    (("1"
                                      (flatten)
                                      (("1"
                                        (assert)
                                        (("1"
                                          (skeep*)
                                          (("1"
                                            (replace -2)
                                            (("1"
                                              (assert)
                                              (("1"
                                                (replace -4)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (typepred
                                                     "D(nth(trace,1))")
                                                    (("1"
                                                      (hide -1)
                                                      (("1"
                                                        (skeep)
                                                        (("1"
                                                          (replace -1)
                                                          (("1"
                                                            (typepred
                                                             "fs")
                                                            (("1"
                                                              (replace
                                                               -2)
                                                              (("1"
                                                                (replace
                                                                 -9)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (expand
                                                                     "semantic_rel")
                                                                    (("1"
                                                                      (expand
                                                                       "semantic_rel_diff")
                                                                      (("1"
                                                                        (case
                                                                         "max(closed_interval(0, b)) = b")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (replace
                                                                             -1)
                                                                            (("1"
                                                                              (inst
                                                                               -9
                                                                               "env_at_t(f, fs, x!1)(b)")
                                                                              (("1"
                                                                                (split)
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (flatten)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "DLGLOBALLY")
                                                                                        (("1"
                                                                                          (replace
                                                                                           -7)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (skeep)
                                                                                              (("1"
                                                                                                (typepred
                                                                                                 "suffix")
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "wf_trace?")
                                                                                                  (("1"
                                                                                                    (flatten)
                                                                                                    (("1"
                                                                                                      (lemma
                                                                                                       "suffix_length[TraceState]")
                                                                                                      (("1"
                                                                                                        (inst?)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (lemma
                                                                                                             "suffix_nth[TraceState]")
                                                                                                            (("1"
                                                                                                              (inst?)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (inst
                                                                                                                   -1
                                                                                                                   "0")
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "nth"
                                                                                                                     -1
                                                                                                                     1)
                                                                                                                    (("1"
                                                                                                                      (replace
                                                                                                                       -14)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "State_Trace")
                                                                                                                        (("1"
                                                                                                                          (case
                                                                                                                           "length(suffix)=2")
                                                                                                                          (("1"
                                                                                                                            (replace
                                                                                                                             -1)
                                                                                                                            (("1"
                                                                                                                              (replace
                                                                                                                               -2)
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (replace
                                                                                                                                   -17)
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (case
                                                                                                                             "length(suffix)=1")
                                                                                                                            (("1"
                                                                                                                              (replace
                                                                                                                               -1)
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (replace
                                                                                                                                   -2)
                                                                                                                                  (("1"
                                                                                                                                    (inst
                                                                                                                                     2
                                                                                                                                     "b")
                                                                                                                                    (("1"
                                                                                                                                      (skeep)
                                                                                                                                      (("1"
                                                                                                                                        (typepred
                                                                                                                                         "t")
                                                                                                                                        (("1"
                                                                                                                                          (replace
                                                                                                                                           -4)
                                                                                                                                          (("1"
                                                                                                                                            (replace
                                                                                                                                             -15)
                                                                                                                                            (("1"
                                                                                                                                              (replace
                                                                                                                                               -13)
                                                                                                                                              (("1"
                                                                                                                                                (expand
                                                                                                                                                 "closed_interval")
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (hide-all-but
                                                                                                                               (1
                                                                                                                                2
                                                                                                                                -2
                                                                                                                                -3))
                                                                                                                              (("2"
                                                                                                                                (grind)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (grind)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (inst
                                                                                   1
                                                                                   "closed_interval(0,b)")
                                                                                  (("2"
                                                                                    (inst
                                                                                     1
                                                                                     "b"
                                                                                     "fs")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (skeep)
                                                                                        (("2"
                                                                                          (typepred
                                                                                           "env")
                                                                                          (("2"
                                                                                            (inst
                                                                                             -7
                                                                                             "t")
                                                                                            (("2"
                                                                                              (typepred
                                                                                               "env_at_t(f, fs, x!1)(t)")
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -2
                                                                                                 "env")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (typepred
                                                                           "max(closed_interval(0, b))")
                                                                          (("2"
                                                                            (expand
                                                                             "closed_interval")
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (inst
                                                                                 -2
                                                                                 "b")
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("3"
                                                                          (postpone)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (flatten)
                                      (("2"
                                        (skeep*)
                                        (("2"
                                          (assert)
                                          (("2"
                                            (expand "DLGLOBALLY")
                                            (("2"
                                              (skeep)
                                              (("2"
                                                (expand "State_Trace")
                                                (("2"
                                                  (typepred "suffix")
                                                  (("2"
                                                    (expand
                                                     "wf_trace?")
                                                    (("2"
                                                      (flatten)
                                                      (("2"
                                                        (lemma
                                                         "suffix_length[TraceState]")
                                                        (("2"
                                                          (inst?)
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (lemma
                                                               "suffix_nth[TraceState]")
                                                              (("2"
                                                                (inst?)
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (inst
                                                                     -1
                                                                     "0")
                                                                    (("1"
                                                                      (expand
                                                                       "nth"
                                                                       -1
                                                                       1)
                                                                      (("1"
                                                                        (replace
                                                                         -12)
                                                                        (("1"
                                                                          (replace
                                                                           -9)
                                                                          (("1"
                                                                            (case
                                                                             "length(suffix)=2")
                                                                            (("1"
                                                                              (replace
                                                                               -1)
                                                                              (("1"
                                                                                (replace
                                                                                 -2)
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (replace
                                                                                     -13)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (case
                                                                               "length(suffix)=1")
                                                                              (("1"
                                                                                (replace
                                                                                 -1)
                                                                                (("1"
                                                                                  (replace
                                                                                   -2)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (replace
                                                                                       -8)
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (inst
                                                                                           2
                                                                                           "0")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (skeep)
                                                                                              (("1"
                                                                                                (typepred
                                                                                                 "t")
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -13
                                                                                                   "env_at_t(f, fs, x!1)(t)")
                                                                                                  (("1"
                                                                                                    (split)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (expand
                                                                                                       "semantic_rel"
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         1
                                                                                                         "hp(0)")
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "semantic_rel_diff"
                                                                                                           1)
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             1
                                                                                                             "t"
                                                                                                             "fs")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (skeep)
                                                                                                                (("1"
                                                                                                                  (typepred
                                                                                                                   "env")
                                                                                                                  (("1"
                                                                                                                    (inst
                                                                                                                     -11
                                                                                                                     "t_1")
                                                                                                                    (("1"
                                                                                                                      (typepred
                                                                                                                       "env_at_t(f, fs, x!1)(t_1)")
                                                                                                                      (("1"
                                                                                                                        (inst
                                                                                                                         -2
                                                                                                                         "env")
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (typepred
                                                                                                                 "fs")
                                                                                                                (("2"
                                                                                                                  (replace
                                                                                                                   -14)
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (expand
                                                                                                           "dd?")
                                                                                                          (("2"
                                                                                                            (propax)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (expand
                                                                                             "hp")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (hide-all-but
                                                                                 (1
                                                                                  2
                                                                                  -2
                                                                                  -3))
                                                                                (("2"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (grind)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("3"
                                      (flatten)
                                      (("3"
                                        (assert)
                                        (("3"
                                          (expand "DLGLOBALLY")
                                          (("3"
                                            (skeep)
                                            (("3"
                                              (typepred "suffix")
                                              (("3"
                                                (expand "wf_trace?")
                                                (("3"
                                                  (flatten)
                                                  (("3"
                                                    (lemma
                                                     "suffix_length[TraceState]")
                                                    (("3"
                                                      (inst?)
                                                      (("3"
                                                        (assert)
                                                        (("3"
                                                          (lemma
                                                           "suffix_nth[TraceState]")
                                                          (("3"
                                                            (inst?)
                                                            (("3"
                                                              (assert)
                                                              (("3"
                                                                (replace
                                                                 -10)
                                                                (("3"
                                                                  (inst
                                                                   -1
                                                                   "0")
                                                                  (("1"
                                                                    (expand
                                                                     "nth"
                                                                     -1
                                                                     1)
                                                                    (("1"
                                                                      (expand
                                                                       "State_Trace")
                                                                      (("1"
                                                                        (case
                                                                         "length(suffix)=2")
                                                                        (("1"
                                                                          (replace
                                                                           -1)
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (replace
                                                                               -2)
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (replace
                                                                                   -8)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (replace
                                                                                       -11)
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (case
                                                                           "length(suffix)=1")
                                                                          (("1"
                                                                            (replace
                                                                             -1)
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (hide-all-but
                                                                             (1
                                                                              2
                                                                              -2
                                                                              -3))
                                                                            (("2"
                                                                              (grind)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (grind)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (flatten)
              (("2" (expand "ALLRUNS_tr")
                (("2" (expand "trace_semantic_rel")
                  (("2" (expand "normDLGLOBALLY")
                    (("2" (expand "ALLRUNS")
                      (("2" (expand "semantic_rel" 1)
                        (("2" (split)
                          (("1" (case "Q(x!1)")
                            (("1" (inst -2 "(: STATE(x!1) :)")
                              (("1"
                                (expand "finite_trace?")
                                (("1"
                                  (expand "last")
                                  (("1"
                                    (expand "length")
                                    (("1"
                                      (expand "length")
                                      (("1"
                                        (expand "nth")
                                        (("1"
                                          (assert)
                                          (("1"
                                            (flatten)
                                            (("1"
                                              (expand "DLGLOBALLY")
                                              (("1"
                                                (inst
                                                 -3
                                                 "(: STATE(x!1) :)")
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (expand
                                                     "State_Trace")
                                                    (("1"
                                                      (propax)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (lemma
                                                   "suffix_reflexive[TraceState]")
                                                  (("2"
                                                    (inst?)
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (grind)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (grind) nil nil))
                              nil)
                             ("2" (inst -1 "(: STATE(x!1),ERROR :)")
                              (("1"
                                (expand "finite_trace?")
                                (("1"
                                  (expand "last")
                                  (("1"
                                    (expand "length")
                                    (("1"
                                      (expand "length")
                                      (("1"
                                        (expand "length")
                                        (("1"
                                          (expand "nth")
                                          (("1"
                                            (expand "nth")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (expand "DLGLOBALLY")
                                                (("1"
                                                  (inst
                                                   -1
                                                   "(: STATE(x!1),ERROR :)")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (expand
                                                       "State_Trace")
                                                      (("1"
                                                        (propax)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (lemma
                                                     "suffix_reflexive[TraceState]")
                                                    (("2"
                                                      (inst?)
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (grind)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (grind) nil nil))
                              nil))
                            nil)
                           ("2" (skeep)
                            (("2" (expand "semantic_rel_diff" -1)
                              (("2"
                                (skeep*)
                                (("2"
                                  (typepred "fs")
                                  (("2"
                                    (case "r<=0")
                                    (("1"
                                      (case "r=0")
                                      (("1"
                                        (replace -1)
                                        (("1"
                                          (expand "solution_odes_u?")
                                          (("1"
                                            (flatten)
                                            (("1"
                                              (expand "solution_odes?")
                                              (("1"
                                                (flatten)
                                                (("1"
                                                  (case "envo=x!1")
                                                  (("1"
                                                    (replace -1)
                                                    (("1"
                                                      (inst
                                                       -9
                                                       "0"
                                                       "x!1")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (inst
                                                           -10
                                                           "(: STATE(x!1) :)")
                                                          (("1"
                                                            (expand
                                                             "finite_trace?")
                                                            (("1"
                                                              (expand
                                                               "last")
                                                              (("1"
                                                                (expand
                                                                 "length")
                                                                (("1"
                                                                  (expand
                                                                   "length")
                                                                  (("1"
                                                                    (expand
                                                                     "nth")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (flatten)
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (expand
                                                                             "DLGLOBALLY")
                                                                            (("1"
                                                                              (inst
                                                                               -11
                                                                               "(: STATE(x!1) :)")
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (expand
                                                                                   "State_Trace")
                                                                                  (("1"
                                                                                    (propax)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (lemma
                                                                                 "suffix_reflexive[TraceState]")
                                                                                (("2"
                                                                                  (inst?)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (grind)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (grind)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (typepred "D")
                                                        (("2"
                                                          (expand
                                                           "dd?")
                                                          (("2"
                                                            (split)
                                                            (("1"
                                                              (skeep)
                                                              (("1"
                                                                (replace
                                                                 -1)
                                                                (("1"
                                                                  (expand
                                                                   "closed_interval")
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (replace
                                                               -1)
                                                              (("2"
                                                                (expand
                                                                 "hp")
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (decompose-equality)
                                                    (("2"
                                                      (expand
                                                       "env_at_t?")
                                                      (("2"
                                                        (flatten)
                                                        (("2"
                                                          (case
                                                           "not_in_map(f)(x!2)")
                                                          (("1"
                                                            (inst
                                                             -8
                                                             "x!2")
                                                            (("1"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (expand
                                                             "not_in_map")
                                                            (("2"
                                                              (skeep)
                                                              (("2"
                                                                (inst
                                                                 -5
                                                                 "i")
                                                                (("2"
                                                                  (inst
                                                                   -9
                                                                   "i")
                                                                  (("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (assert)
                                        (("2"
                                          (typepred "r")
                                          (("2"
                                            (typepred "D")
                                            (("2"
                                              (expand "dd?")
                                              (("2"
                                                (expand
                                                 "closed_interval")
                                                (("2"
                                                  (expand "hp")
                                                  (("2"
                                                    (split)
                                                    (("1"
                                                      (skeep)
                                                      (("1"
                                                        (replace -1)
                                                        (("1"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (replace -1)
                                                      (("2"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (inst
                                       -4
                                       "(: STATE(x!1), STATE_DIFF(closed_interval(0,r),LAMBDA(t:(closed_interval(0,r))): env_at_t(f, fs, x!1)(t)) :)")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (expand "nth")
                                          (("1"
                                            (expand "nth")
                                            (("1"
                                              (expand "length")
                                              (("1"
                                                (expand "length")
                                                (("1"
                                                  (expand "length")
                                                  (("1"
                                                    (expand
                                                     "finite_trace?")
                                                    (("1"
                                                      (expand "last")
                                                      (("1"
                                                        (expand
                                                         "length")
                                                        (("1"
                                                          (expand
                                                           "length")
                                                          (("1"
                                                            (expand
                                                             "length")
                                                            (("1"
                                                              (expand
                                                               "nth")
                                                              (("1"
                                                                (expand
                                                                 "nth")
                                                                (("1"
                                                                  (split
                                                                   -4)
                                                                  (("1"
                                                                    (flatten)
                                                                    (("1"
                                                                      (expand
                                                                       "DLGLOBALLY")
                                                                      (("1"
                                                                        (expand
                                                                         "State_Trace")
                                                                        (("1"
                                                                          (case
                                                                           "max(closed_interval(0, r)) = r")
                                                                          (("1"
                                                                            (replace
                                                                             -1)
                                                                            (("1"
                                                                              (typepred
                                                                               "env_at_t(f, fs, x!1)(r)")
                                                                              (("1"
                                                                                (inst
                                                                                 -2
                                                                                 "envo")
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (inst
                                                                                     -5
                                                                                     "(: STATE_DIFF(closed_interval(0,r),LAMBDA(t:(closed_interval(0,r))): env_at_t(f, fs, x!1)(t)) :)")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (skeep)
                                                                                        (("1"
                                                                                          (typepred
                                                                                           "T")
                                                                                          (("1"
                                                                                            (inst
                                                                                             -6
                                                                                             "r")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil)
                                                                                             ("2"
                                                                                              (expand
                                                                                               "closed_interval")
                                                                                              (("2"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (split)
                                                                                      (("1"
                                                                                        (grind)
                                                                                        nil
                                                                                        nil)
                                                                                       ("2"
                                                                                        (lemma
                                                                                         "suffix_supl[TraceState]")
                                                                                        (("2"
                                                                                          (inst?)
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (inst
                                                                                               1
                                                                                               "(: STATE(x!1) :)")
                                                                                              (("2"
                                                                                                (hide-all-but
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (decompose-equality)
                                                                                                  (("1"
                                                                                                    (lemma
                                                                                                     "car_append[TraceState]")
                                                                                                    (("1"
                                                                                                      (inst?)
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (lemma
                                                                                                     "cdr_append[TraceState]")
                                                                                                    (("2"
                                                                                                      (inst?)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (replace
                                                                                                           -1)
                                                                                                          (("2"
                                                                                                            (lemma
                                                                                                             "append_null_left[TraceState]")
                                                                                                            (("2"
                                                                                                              (inst?)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("3"
                                                                                                    (grind)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("3"
                                                                                      (expand
                                                                                       "dd?")
                                                                                      (("3"
                                                                                        (split)
                                                                                        (("1"
                                                                                          (flatten)
                                                                                          (("1"
                                                                                            (inst
                                                                                             1
                                                                                             "r")
                                                                                            nil
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (inst
                                                                                           1
                                                                                           "r")
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (typepred
                                                                             "max(closed_interval(0, r))")
                                                                            (("2"
                                                                              (expand
                                                                               "closed_interval")
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (inst
                                                                                   -2
                                                                                   "r")
                                                                                  (("2"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (lemma
                                                                     "solution_odes_subset")
                                                                    (("2"
                                                                      (inst
                                                                       -1
                                                                       "D"
                                                                       "f"
                                                                       "x!1"
                                                                       "fs"
                                                                       "closed_interval(0,r)")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (inst
                                                                           1
                                                                           "fs")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (split)
                                                                              (("1"
                                                                                (decompose-equality)
                                                                                (("1"
                                                                                  (expand
                                                                                   "nth")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "nth")
                                                                                    (("1"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (expand
                                                                                   "nth")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "nth")
                                                                                    (("2"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("3"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (skeep)
                                                                                (("2"
                                                                                  (inst
                                                                                   -4
                                                                                   "t_1"
                                                                                   "env_at_t(f, fs, x!1)(t_1)")
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (typepred
                                                                                       "t_1")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "nth")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "nth")
                                                                                          (("2"
                                                                                            (typepred
                                                                                             "D")
                                                                                            (("2"
                                                                                              (typepred
                                                                                               "r")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "dd?")
                                                                                                (("2"
                                                                                                  (split)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "closed_interval")
                                                                                                    (("1"
                                                                                                      (flatten)
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (skeep)
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             -1)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (replace
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "hp")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "closed_interval")
                                                                                                        (("2"
                                                                                                          (flatten)
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (expand
                                                                             "nth")
                                                                            (("2"
                                                                              (expand
                                                                               "nth")
                                                                              (("2"
                                                                                (propax)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (split)
                                                                        (("1"
                                                                          (expand
                                                                           "dd?")
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (inst
                                                                               1
                                                                               "r")
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (skeep)
                                                                          (("2"
                                                                            (typepred
                                                                             "D")
                                                                            (("2"
                                                                              (typepred
                                                                               "r")
                                                                              (("2"
                                                                                (expand
                                                                                 "dd?")
                                                                                (("2"
                                                                                  (split)
                                                                                  (("1"
                                                                                    (skeep)
                                                                                    (("1"
                                                                                      (replace
                                                                                       -1)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "closed_interval")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (flatten)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (replace
                                                                                     -1)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "hp")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "closed_interval")
                                                                                        (("2"
                                                                                          (flatten)
                                                                                          (("2"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2" (grind) nil nil)
                                       ("3"
                                        (split)
                                        (("1"
                                          (expand "dd?")
                                          (("1"
                                            (flatten)
                                            (("1"
                                              (inst 1 "r")
                                              (("1" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (inst 1 "r")
                                          (("2" (assert) nil nil))
                                          nil))
                                        nil)
                                       ("4" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (dltl_DIFFcup 0
  (dltl_DIFFcup-1 nil 3889265660
   ("" (skeep)
    (("" (expand "DLAND")
      (("" (expand "DLOR")
        (("" (decompose-equality)
          (("" (iff)
            (("" (split)
              (("1" (flatten)
                (("1" (expand "ALLRUNS_tr")
                  (("1" (skeep)
                    (("1" (expand "ALLRUNS")
                      (("1" (expand "SOMERUNS")
                        (("1" (skeep)
                          (("1" (expand "trace_semantic_rel")
                            (("1" (split -6)
                              (("1"
                                (flatten)
                                (("1"
                                  (replace -7)
                                  (("1"
                                    (assert)
                                    (("1"
                                      (expand "normDLEVENTUALLY")
                                      (("1"
                                        (expand "finite_trace?")
                                        (("1"
                                          (expand "last")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (replace -1)
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (replace -6)
                                                  (("1"
                                                    (flatten)
                                                    (("1"
                                                      (case "Q(x!1)")
                                                      (("1"
                                                        (expand
                                                         "DLEVENTUALLY")
                                                        (("1"
                                                          (inst
                                                           2
                                                           "trace")
                                                          (("1"
                                                            (expand
                                                             "State_Trace")
                                                            (("1"
                                                              (expand
                                                               "nth")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (replace
                                                                   -7)
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (expand
                                                             "nth")
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (lemma
                                                                 "suffix_reflexive[TraceState]")
                                                                (("2"
                                                                  (inst?)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (inst -3 "x!1")
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (postpone)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (flatten)
                                (("2"
                                  (split)
                                  (("1"
                                    (replace -8)
                                    (("1" (assert) nil nil))
                                    nil)
                                   ("2"
                                    (replace -8)
                                    (("2"
                                      (expand "normDLEVENTUALLY")
                                      (("2"
                                        (assert)
                                        (("2"
                                          (expand "finite_trace?")
                                          (("2"
                                            (expand "last")
                                            (("2"
                                              (expand "DLEVENTUALLY")
                                              (("2"
                                                (inst 2 "trace")
                                                (("1"
                                                  (expand
                                                   "State_Trace")
                                                  (("1"
                                                    (expand "nth" -8)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (replace -8)
                                                        (("1"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (expand "nth")
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (lemma
                                                       "suffix_reflexive[TraceState]")
                                                      (("2"
                                                        (inst?)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (flatten)
                (("2" (split)
                  (("1" (flatten)
                    (("1" (expand "ALLRUNS_tr")
                      (("1" (expand "normDLEVENTUALLY")
                        (("1" (inst -1 "(:STATE(x!1),ERROR:)")
                          (("1" (expand "finite_trace?")
                            (("1" (expand "last")
                              (("1"
                                (expand "trace_semantic_rel")
                                (("1"
                                  (expand "length")
                                  (("1"
                                    (expand "length")
                                    (("1"
                                      (expand "length")
                                      (("1"
                                        (expand "nth")
                                        (("1"
                                          (expand "nth")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (expand "DLEVENTUALLY")
                                              (("1"
                                                (skeep)
                                                (("1"
                                                  (typepred "suffix")
                                                  (("1"
                                                    (lemma
                                                     "suffix_length[TraceState]")
                                                    (("1"
                                                      (inst?)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (expand
                                                           "length"
                                                           -1
                                                           2)
                                                          (("1"
                                                            (expand
                                                             "length"
                                                             -1
                                                             2)
                                                            (("1"
                                                              (expand
                                                               "length"
                                                               -1
                                                               2)
                                                              (("1"
                                                                (expand
                                                                 "wf_trace?")
                                                                (("1"
                                                                  (flatten)
                                                                  (("1"
                                                                    (lemma
                                                                     "suffix_nth[TraceState]")
                                                                    (("1"
                                                                      (inst?)
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (inst
                                                                           -1
                                                                           "0")
                                                                          (("1"
                                                                            (expand
                                                                             "State_Trace")
                                                                            (("1"
                                                                              (expand
                                                                               "length"
                                                                               -1
                                                                               1)
                                                                              (("1"
                                                                                (expand
                                                                                 "length"
                                                                                 -1
                                                                                 1)
                                                                                (("1"
                                                                                  (expand
                                                                                   "length"
                                                                                   -1
                                                                                   1)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "nth")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (lift-if)
                                                                                        (("1"
                                                                                          (split)
                                                                                          (("1"
                                                                                            (flatten)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (replace
                                                                                                 -2)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (flatten)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (case
                                                                                                 "length(suffix)=1")
                                                                                                (("1"
                                                                                                  (replace
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "nth")
                                                                                                      (("1"
                                                                                                        (propax)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (hide-all-but
                                                                                                   (-2
                                                                                                    -3
                                                                                                    1
                                                                                                    2))
                                                                                                  (("2"
                                                                                                    (grind)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (grind)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (grind) nil nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (expand "ALLRUNS")
                    (("2" (skeep)
                      (("2" (expand "ALLRUNS_tr")
                        (("2" (expand "normDLEVENTUALLY")
                          (("2" (expand "semantic_rel")
                            (("2" (expand "semantic_rel_diff")
                              (("2"
                                (skeep*)
                                (("2"
                                  (typepred "fs")
                                  (("2"
                                    (expand "solution_odes_u?")
                                    (("2"
                                      (flatten)
                                      (("2"
                                        (expand "solution_odes?")
                                        (("2"
                                          (flatten)
                                          (("2"
                                            (typepred "D")
                                            (("2"
                                              (typepred "fs")
                                              (("2"
                                                (typepred "r")
                                                (("2"
                                                  (case "r=0")
                                                  (("1"
                                                    (replace -1)
                                                    (("1"
                                                      (inst
                                                       -10
                                                       "0"
                                                       "x!1")
                                                      (("1"
                                                        (flatten)
                                                        (("1"
                                                          (inst
                                                           -12
                                                           "(: STATE(x!1) :)")
                                                          (("1"
                                                            (expand
                                                             "finite_trace?")
                                                            (("1"
                                                              (expand
                                                               "last")
                                                              (("1"
                                                                (expand
                                                                 "length"
                                                                 -12)
                                                                (("1"
                                                                  (expand
                                                                   "length"
                                                                   -12)
                                                                  (("1"
                                                                    (expand
                                                                     "nth")
                                                                    (("1"
                                                                      (expand
                                                                       "trace_semantic_rel"
                                                                       -12)
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (expand
                                                                           "nth"
                                                                           -12)
                                                                          (("1"
                                                                            (expand
                                                                             "DLNOT")
                                                                            (("1"
                                                                              (case
                                                                               "envo=x!1")
                                                                              (("1"
                                                                                (replace
                                                                                 -1)
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "DLEVENTUALLY")
                                                                                    (("1"
                                                                                      (skeep)
                                                                                      (("1"
                                                                                        (typepred
                                                                                         "suffix")
                                                                                        (("1"
                                                                                          (expand
                                                                                           "wf_trace?")
                                                                                          (("1"
                                                                                            (flatten)
                                                                                            (("1"
                                                                                              (lemma
                                                                                               "suffix_same_length[TraceState]")
                                                                                              (("1"
                                                                                                (inst?)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (split)
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -1
                                                                                                       -16
                                                                                                       rl)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "State_Trace")
                                                                                                        (("1"
                                                                                                          (propax)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (grind)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (decompose-equality)
                                                                                (("2"
                                                                                  (expand
                                                                                   "env_at_t?")
                                                                                  (("2"
                                                                                    (flatten)
                                                                                    (("2"
                                                                                      (case
                                                                                       "not_in_map(f)(x!2)")
                                                                                      (("1"
                                                                                        (inst
                                                                                         -10
                                                                                         "x!2")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (expand
                                                                                         "not_in_map")
                                                                                        (("2"
                                                                                          (skeep)
                                                                                          (("2"
                                                                                            (inst
                                                                                             -7
                                                                                             "i")
                                                                                            (("2"
                                                                                              (inst
                                                                                               -11
                                                                                               "i")
                                                                                              (("2"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (grind)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (grind)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (lemma
                                                     "solution_odes_subset")
                                                    (("2"
                                                      (inst
                                                       -1
                                                       "D"
                                                       "f"
                                                       "x!1"
                                                       "fs"
                                                       "closed_interval(0,r)")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (inst
                                                           -11
                                                           "(: STATE(x!1),STATE_DIFF(closed_interval(0,r),x!1, (LAMBDA (t:(closed_interval(0,r))): env_at_t(f,fs,x!1)(t))) :)")
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (expand
                                                               "nth"
                                                               -11)
                                                              (("1"
                                                                (split)
                                                                (("1"
                                                                  (expand
                                                                   "finite_trace?")
                                                                  (("1"
                                                                    (expand
                                                                     "last")
                                                                    (("1"
                                                                      (expand
                                                                       "length")
                                                                      (("1"
                                                                        (expand
                                                                         "length")
                                                                        (("1"
                                                                          (expand
                                                                           "length")
                                                                          (("1"
                                                                            (expand
                                                                             "nth")
                                                                            (("1"
                                                                              (expand
                                                                               "nth")
                                                                              (("1"
                                                                                (postpone)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (expand
                                                                   "finite_trace?")
                                                                  (("2"
                                                                    (expand
                                                                     "last")
                                                                    (("2"
                                                                      (expand
                                                                       "length")
                                                                      (("2"
                                                                        (expand
                                                                         "length")
                                                                        (("2"
                                                                          (expand
                                                                           "length")
                                                                          (("2"
                                                                            (expand
                                                                             "nth")
                                                                            (("2"
                                                                              (expand
                                                                               "nth")
                                                                              (("2"
                                                                                (propax)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("3"
                                                                  (expand
                                                                   "trace_semantic_rel"
                                                                   1)
                                                                  (("3"
                                                                    (expand
                                                                     "length")
                                                                    (("3"
                                                                      (expand
                                                                       "length")
                                                                      (("3"
                                                                        (expand
                                                                         "length")
                                                                        (("3"
                                                                          (postpone)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (postpone)
                                                            nil
                                                            nil)
                                                           ("3"
                                                            (postpone)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (split)
                                                        (("1"
                                                          (expand
                                                           "dd?")
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (inst?)
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (typepred
                                                                   "D")
                                                                  (("1"
                                                                    (expand
                                                                     "dd?")
                                                                    (("1"
                                                                      (expand
                                                                       "closed_interval")
                                                                      (("1"
                                                                        (expand
                                                                         "hp")
                                                                        (("1"
                                                                          (split)
                                                                          (("1"
                                                                            (skeep)
                                                                            (("1"
                                                                              (replace
                                                                               -1)
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (flatten)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (replace
                                                                             -1)
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (skeep)
                                                          (("2"
                                                            (typepred
                                                             "D")
                                                            (("2"
                                                              (expand
                                                               "dd?")
                                                              (("2"
                                                                (expand
                                                                 "closed_interval")
                                                                (("2"
                                                                  (expand
                                                                   "hp")
                                                                  (("2"
                                                                    (split)
                                                                    (("1"
                                                                      (skeep)
                                                                      (("1"
                                                                        (replace
                                                                         -1)
                                                                        (("1"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (replace
                                                                       -1)
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("3"
                                                        (assert)
                                                        (("3"
                                                          (expand
                                                           "dd?")
                                                          (("3"
                                                            (expand
                                                             "closed_interval")
                                                            (("3"
                                                              (expand
                                                               "hp")
                                                              (("3"
                                                                (split)
                                                                (("1"
                                                                  (skeep)
                                                                  (("1"
                                                                    (replace
                                                                     -1)
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (replace
                                                                   -1)
                                                                  (("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("3" (expand "ALLRUNS_tr")
                    (("3" (expand "SOMERUNS")
                      (("3" (inst 1 "x!1")
                        (("3" (split)
                          (("1" (postpone) nil nil)
                           ("2" (expand "DLNOT")
                            (("2" (assert)
                              (("2"
                                (flatten)
                                (("2"
                                  (expand "normDLEVENTUALLY")
                                  (("2" (postpone) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (dltl_s_DIFFcup 0
  (dltl_s_DIFFcup-1 nil 3894534707 ("" (postpone) nil nil) nil
   shostak))
 (dltl_DIFFEG 0
  (dltl_DIFFEG-1 nil 3889265663
   ("" (skeep)
    (("" (expand "DLAND")
      (("" (expand "DLOR")
        (("" (decompose-equality)
          (("" (iff)
            (("" (split)
              (("1" (flatten)
                (("1" (expand "ALLRUNS")
                  (("1" (expand "SOMERUNS")
                    (("1" (expand "ALLRUNS_tr")
                      (("1" (skeep)
                        (("1" (expand "normDLEG")
                          (("1" (split 1)
                            (("1" (flatten)
                              (("1"
                                (expand "trace_semantic_rel")
                                (("1"
                                  (split -6)
                                  (("1"
                                    (flatten)
                                    (("1"
                                      (assert)
                                      (("1"
                                        (expand "last")
                                        (("1"
                                          (replace -1)
                                          (("1"
                                            (assert)
                                            (("1"
                                              (replace -8)
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (inst -6 "x!1")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (postpone)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (assert)
                                    (("2"
                                      (flatten)
                                      (("2"
                                        (assert)
                                        (("2"
                                          (split)
                                          (("1"
                                            (flatten)
                                            (("1"
                                              (skeep*)
                                              (("1"
                                                (expand "last")
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (replace -4)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (replace -2)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (replace
                                                             -9)
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (inst
                                                                 -7
                                                                 "env_at_t(f, fs, x!1)(max(D(nth(trace, 1))))")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (expand
                                                                     "semantic_rel")
                                                                    (("1"
                                                                      (inst
                                                                       2
                                                                       "D(nth(trace,1))")
                                                                      (("1"
                                                                        (expand
                                                                         "semantic_rel_diff"
                                                                         2)
                                                                        (("1"
                                                                          (inst
                                                                           2
                                                                           "max(D(nth(trace, 1)))"
                                                                           "fs")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (skeep)
                                                                              (("1"
                                                                                (typepred
                                                                                 "env")
                                                                                (("1"
                                                                                  (typepred
                                                                                   "t")
                                                                                  (("1"
                                                                                    (inst
                                                                                     -6
                                                                                     "t")
                                                                                    (("1"
                                                                                      (typepred
                                                                                       "env_at_t(f, fs, x!1)(t)")
                                                                                      (("1"
                                                                                        (inst
                                                                                         -2
                                                                                         "env")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (typepred
                                                                             "fs")
                                                                            (("2"
                                                                              (replace
                                                                               -9)
                                                                              (("2"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (flatten)
                                            (("2"
                                              (skeep*)
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (expand "last")
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (replace -4)
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (expand
                                                           "finite_trace?")
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (expand
                                                               "last")
                                                              (("2"
                                                                (propax)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("3"
                                            (expand "finite_trace?")
                                            (("3"
                                              (expand "last")
                                              (("3"
                                                (assert)
                                                (("3"
                                                  (replace -2)
                                                  (("3"
                                                    (assert)
                                                    (("3"
                                                      (flatten)
                                                      (("3"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (flatten)
                              (("2"
                                (expand "finite_trace?")
                                (("2"
                                  (flatten)
                                  (("2"
                                    (expand "trace_semantic_rel")
                                    (("2"
                                      (assert)
                                      (("2"
                                        (expand "last")
                                        (("2"
                                          (assert)
                                          (("2"
                                            (flatten)
                                            (("2"
                                              (assert)
                                              (("2"
                                                (replace -5)
                                                (("2"
                                                  (assert)
                                                  (("2"
                                                    (replace -4)
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (split)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (skeep)
                                                              (("1"
                                                                (replace
                                                                 -7)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (expand
                                                                     "DLEVENTUALLY")
                                                                    (("1"
                                                                      (split
                                                                       -3)
                                                                      (("1"
                                                                        (skeep)
                                                                        (("1"
                                                                          (expand
                                                                           "DLNOT")
                                                                          (("1"
                                                                            (expand
                                                                             "semantic_rel")
                                                                            (("1"
                                                                              (expand
                                                                               "semantic_rel_diff")
                                                                              (("1"
                                                                                (skeep*)
                                                                                (("1"
                                                                                  (inst
                                                                                   -9
                                                                                   "r")
                                                                                  (("1"
                                                                                    (typepred
                                                                                     "env_at_t(f, fs, x!1)(r)")
                                                                                    (("1"
                                                                                      (inst
                                                                                       -2
                                                                                       "envo")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil)
                                                                                       ("2"
                                                                                        (expand
                                                                                         "env_at_t?")
                                                                                        (("2"
                                                                                          (flatten)
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (split)
                                                                                              (("1"
                                                                                                (propax)
                                                                                                nil
                                                                                                nil)
                                                                                               ("2"
                                                                                                (skeep)
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -4
                                                                                                   "k")
                                                                                                  (("2"
                                                                                                    (typepred
                                                                                                     "fs")
                                                                                                    (("2"
                                                                                                      (typepred
                                                                                                       "fs!1")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "solution_odes_u?")
                                                                                                        (("2"
                                                                                                          (flatten)
                                                                                                          (("2"
                                                                                                            (replace
                                                                                                             -12)
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 -4
                                                                                                                 "fs!1"
                                                                                                                 "D")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (inst
                                                                                                                     -4
                                                                                                                     "k"
                                                                                                                     "r")
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (skeep)
                                                                                                                  (("2"
                                                                                                                    (typepred
                                                                                                                     "D")
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "dd?")
                                                                                                                      (("2"
                                                                                                                        (split)
                                                                                                                        (("1"
                                                                                                                          (skeep)
                                                                                                                          (("1"
                                                                                                                            (replace
                                                                                                                             -1)
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "closed_interval")
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "hp")
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (replace
                                                                                                                           -1)
                                                                                                                          (("2"
                                                                                                                            (propax)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (typepred
                                                                                     "r")
                                                                                    (("2"
                                                                                      (typepred
                                                                                       "D")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "dd?")
                                                                                        (("2"
                                                                                          (split)
                                                                                          (("1"
                                                                                            (skeep)
                                                                                            (("1"
                                                                                              (replace
                                                                                               -1)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "closed_interval")
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "hp")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (skeep)
                                                                        (("2"
                                                                          (expand
                                                                           "DLGLOBALLY")
                                                                          (("2"
                                                                            (inst
                                                                             3
                                                                             "(: nth(trace,1) :)")
                                                                            (("1"
                                                                              (skeep)
                                                                              (("1"
                                                                                (typepred
                                                                                 "suffix_1")
                                                                                (("1"
                                                                                  (expand
                                                                                   "wf_trace?")
                                                                                  (("1"
                                                                                    (flatten)
                                                                                    (("1"
                                                                                      (lemma
                                                                                       "suffix_same_length[TraceState]")
                                                                                      (("1"
                                                                                        (inst?)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (split)
                                                                                            (("1"
                                                                                              (replace
                                                                                               -1)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "State_Trace")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (replace
                                                                                                     -1
                                                                                                     3
                                                                                                     rl)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (replace
                                                                                                         -12)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (typepred
                                                                                                             "fs")
                                                                                                            (("1"
                                                                                                              (replace
                                                                                                               -10)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "semantic_rel")
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "semantic_rel_diff")
                                                                                                                    (("1"
                                                                                                                      (skeep*)
                                                                                                                      (("1"
                                                                                                                        (inst
                                                                                                                         3
                                                                                                                         "r")
                                                                                                                        (("1"
                                                                                                                          (skeep)
                                                                                                                          (("1"
                                                                                                                            (name
                                                                                                                             "fs2"
                                                                                                                             "LAMBDA(k:below(length(f)))(t:real): fs(k)(t+r)")
                                                                                                                            (("1"
                                                                                                                              (decompose-equality
                                                                                                                               -1)
                                                                                                                              (("1"
                                                                                                                                (name
                                                                                                                                 "env2"
                                                                                                                                 "LAMBDA(t:(hp(0))): env_at_t(f, fs, x!1)(r + t)")
                                                                                                                                (("1"
                                                                                                                                  (inst
                                                                                                                                   -10
                                                                                                                                   "env_at_t(f, fs, x!1)(r + t)")
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    (("1"
                                                                                                                                      (inst
                                                                                                                                       1
                                                                                                                                       "hp(0)")
                                                                                                                                      (("1"
                                                                                                                                        (inst
                                                                                                                                         1
                                                                                                                                         "t"
                                                                                                                                         "fs2")
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          (("1"
                                                                                                                                            (expand
                                                                                                                                             "DLBOOL")
                                                                                                                                            (("1"
                                                                                                                                              (typepred
                                                                                                                                               "env_at_t(f, fs, x!1)(r + t)")
                                                                                                                                              (("1"
                                                                                                                                                (expand
                                                                                                                                                 "env_at_t?")
                                                                                                                                                (("1"
                                                                                                                                                  (flatten)
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    (("1"
                                                                                                                                                      (split)
                                                                                                                                                      (("1"
                                                                                                                                                        (skeep)
                                                                                                                                                        (("1"
                                                                                                                                                          (inst
                                                                                                                                                           -1
                                                                                                                                                           "i")
                                                                                                                                                          (("1"
                                                                                                                                                            (inst
                                                                                                                                                             -11
                                                                                                                                                             "i")
                                                                                                                                                            (("1"
                                                                                                                                                              (assert)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("2"
                                                                                                                                                        (skeep)
                                                                                                                                                        (("2"
                                                                                                                                                          (inst
                                                                                                                                                           -2
                                                                                                                                                           "k")
                                                                                                                                                          (("2"
                                                                                                                                                            (inst
                                                                                                                                                             -5
                                                                                                                                                             "k")
                                                                                                                                                            (("2"
                                                                                                                                                              (decompose-equality
                                                                                                                                                               -5)
                                                                                                                                                              (("2"
                                                                                                                                                                (inst
                                                                                                                                                                 -1
                                                                                                                                                                 "t")
                                                                                                                                                                (("2"
                                                                                                                                                                  (assert)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (postpone)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (typepred
                                                                                                                           "r")
                                                                                                                          (("2"
                                                                                                                            (typepred
                                                                                                                             "D")
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "dd?")
                                                                                                                              (("2"
                                                                                                                                (split)
                                                                                                                                (("1"
                                                                                                                                  (skeep)
                                                                                                                                  (("1"
                                                                                                                                    (replace
                                                                                                                                     -1)
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "closed_interval")
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "hp")
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (replace
                                                                                                                                   -1)
                                                                                                                                  (("2"
                                                                                                                                    (propax)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (lemma
                                                                                               "suffix_length[TraceState]")
                                                                                              (("2"
                                                                                                (inst?)
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (grind)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (split)
                                                                              (("1"
                                                                                (grind)
                                                                                nil
                                                                                nil)
                                                                               ("2"
                                                                                (lemma
                                                                                 "suffix_supl[TraceState]")
                                                                                (("2"
                                                                                  (inst?)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (inst
                                                                                       1
                                                                                       "(: nth(trace,0) :)")
                                                                                      (("2"
                                                                                        (lemma
                                                                                         "list_extensionality[TraceState]")
                                                                                        (("2"
                                                                                          (inst?)
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (lemma
                                                                                               "length_append[TraceState]")
                                                                                              (("2"
                                                                                                (inst?)
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (skeep)
                                                                                                    (("2"
                                                                                                      (lemma
                                                                                                       "nth_append[TraceState]")
                                                                                                      (("2"
                                                                                                        (inst?)
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (lift-if)
                                                                                                            (("2"
                                                                                                              (split)
                                                                                                              (("1"
                                                                                                                (flatten)
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (replace
                                                                                                                     -2)
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "nth"
                                                                                                                       1
                                                                                                                       1)
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (flatten)
                                                                                                                (("2"
                                                                                                                  (replace
                                                                                                                   -1)
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "nth"
                                                                                                                       2)
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (assert)
                                                          (("2"
                                                            (split -6)
                                                            (("1"
                                                              (flatten)
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (skeep*)
                                                                  (("1"
                                                                    (replace
                                                                     -2)
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (expand
                                                                         "DLEVENTUALLY")
                                                                        (("1"
                                                                          (expand
                                                                           "DLGLOBALLY")
                                                                          (("1"
                                                                            (split
                                                                             -6)
                                                                            (("1"
                                                                              (skeep)
                                                                              (("1"
                                                                                (expand
                                                                                 "DLNOT")
                                                                                (("1"
                                                                                  (expand
                                                                                   "semantic_rel"
                                                                                   -1)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "semantic_rel_diff")
                                                                                    (("1"
                                                                                      (skeep*)
                                                                                      (("1"
                                                                                        (typepred
                                                                                         "fs!1")
                                                                                        (("1"
                                                                                          (typepred
                                                                                           "fs")
                                                                                          (("1"
                                                                                            (replace
                                                                                             -10)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "solution_odes_u?")
                                                                                                (("1"
                                                                                                  (flatten)
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     -2
                                                                                                     "fs!1"
                                                                                                     "D")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -9
                                                                                                         "r")
                                                                                                        (("1"
                                                                                                          (typepred
                                                                                                           "env_at_t(f, fs, x!1)(r)")
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             -2
                                                                                                             "envo")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (expand
                                                                                                               "env_at_t?")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (flatten)
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (split)
                                                                                                                      (("1"
                                                                                                                        (propax)
                                                                                                                        nil
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (skeep)
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -4
                                                                                                                           "k"
                                                                                                                           "r")
                                                                                                                          (("2"
                                                                                                                            (inst
                                                                                                                             -8
                                                                                                                             "k")
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (typepred
                                                                                                           "r")
                                                                                                          (("2"
                                                                                                            (typepred
                                                                                                             "D")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "dd?")
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "closed_interval")
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "hp")
                                                                                                                  (("2"
                                                                                                                    (split)
                                                                                                                    (("1"
                                                                                                                      (skeep)
                                                                                                                      (("1"
                                                                                                                        (replace
                                                                                                                         -1)
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (flatten)
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (replace
                                                                                                                       -1)
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (typepred
                                                                                                       "D")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "dd?")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "closed_interval")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "hp")
                                                                                                            (("2"
                                                                                                              (split)
                                                                                                              (("1"
                                                                                                                (skeep)
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (skeep)
                                                                                                                    (("1"
                                                                                                                      (replace
                                                                                                                       -1)
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (replace
                                                                                                                 -1)
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (skeep)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (skeep)
                                                                              (("2"
                                                                                (inst
                                                                                 3
                                                                                 "(: nth(trace,1) :)")
                                                                                (("1"
                                                                                  (skeep)
                                                                                  (("1"
                                                                                    (typepred
                                                                                     "suffix_1")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "wf_trace?")
                                                                                      (("1"
                                                                                        (flatten)
                                                                                        (("1"
                                                                                          (lemma
                                                                                           "suffix_same_length[TraceState]")
                                                                                          (("1"
                                                                                            (inst?)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (split)
                                                                                                (("1"
                                                                                                  (replace
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "State_Trace")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (replace
                                                                                                         -1
                                                                                                         3
                                                                                                         rl)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             -8)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (typepred
                                                                                                                 "fs")
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "semantic_rel")
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "semantic_rel_diff")
                                                                                                                    (("1"
                                                                                                                      (skeep*)
                                                                                                                      (("1"
                                                                                                                        (inst
                                                                                                                         3
                                                                                                                         "r")
                                                                                                                        (("1"
                                                                                                                          (skeep)
                                                                                                                          (("1"
                                                                                                                            (name
                                                                                                                             "fs2"
                                                                                                                             "LAMBDA(k:below(length(f)))(t:real): fs(k)(t+r)")
                                                                                                                            (("1"
                                                                                                                              (decompose-equality
                                                                                                                               -1)
                                                                                                                              (("1"
                                                                                                                                (name
                                                                                                                                 "env2"
                                                                                                                                 "LAMBDA(t:(hp(0))): env_at_t(f, fs, x!1)(r + t)")
                                                                                                                                (("1"
                                                                                                                                  (inst
                                                                                                                                   -10
                                                                                                                                   "env_at_t(f, fs, x!1)(r + t)")
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    (("1"
                                                                                                                                      (inst
                                                                                                                                       1
                                                                                                                                       "hp(0)")
                                                                                                                                      (("1"
                                                                                                                                        (inst
                                                                                                                                         1
                                                                                                                                         "t"
                                                                                                                                         "fs2")
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          (("1"
                                                                                                                                            (expand
                                                                                                                                             "DLBOOL")
                                                                                                                                            (("1"
                                                                                                                                              (typepred
                                                                                                                                               "env_at_t(f, fs, x!1)(r + t)")
                                                                                                                                              (("1"
                                                                                                                                                (expand
                                                                                                                                                 "env_at_t?")
                                                                                                                                                (("1"
                                                                                                                                                  (flatten)
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    (("1"
                                                                                                                                                      (split)
                                                                                                                                                      (("1"
                                                                                                                                                        (skeep)
                                                                                                                                                        (("1"
                                                                                                                                                          (inst
                                                                                                                                                           -1
                                                                                                                                                           "i")
                                                                                                                                                          (("1"
                                                                                                                                                            (inst
                                                                                                                                                             -11
                                                                                                                                                             "i")
                                                                                                                                                            (("1"
                                                                                                                                                              (assert)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("2"
                                                                                                                                                        (skeep)
                                                                                                                                                        (("2"
                                                                                                                                                          (inst
                                                                                                                                                           -2
                                                                                                                                                           "k")
                                                                                                                                                          (("2"
                                                                                                                                                            (inst
                                                                                                                                                             -5
                                                                                                                                                             "k")
                                                                                                                                                            (("2"
                                                                                                                                                              (decompose-equality
                                                                                                                                                               -5)
                                                                                                                                                              (("2"
                                                                                                                                                                (inst
                                                                                                                                                                 -1
                                                                                                                                                                 "t")
                                                                                                                                                                (("2"
                                                                                                                                                                  (assert)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (postpone)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (typepred
                                                                                                                           "r")
                                                                                                                          (("2"
                                                                                                                            (typepred
                                                                                                                             "D")
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "dd?")
                                                                                                                              (("2"
                                                                                                                                (split)
                                                                                                                                (("1"
                                                                                                                                  (skeep)
                                                                                                                                  (("1"
                                                                                                                                    (replace
                                                                                                                                     -1)
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "closed_interval")
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "hp")
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (replace
                                                                                                                                   -1)
                                                                                                                                  (("2"
                                                                                                                                    (propax)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (lemma
                                                                                                   "suffix_length[TraceState]")
                                                                                                  (("2"
                                                                                                    (inst?)
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (grind)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (split)
                                                                                  (("1"
                                                                                    (grind)
                                                                                    nil
                                                                                    nil)
                                                                                   ("2"
                                                                                    (lemma
                                                                                     "suffix_supl[TraceState]")
                                                                                    (("2"
                                                                                      (inst?)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (inst
                                                                                           1
                                                                                           "(: nth(trace,0) :)")
                                                                                          (("2"
                                                                                            (lemma
                                                                                             "list_extensionality[TraceState]")
                                                                                            (("2"
                                                                                              (inst?)
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (lemma
                                                                                                   "length_append[TraceState]")
                                                                                                  (("2"
                                                                                                    (inst?)
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (skeep)
                                                                                                        (("2"
                                                                                                          (lemma
                                                                                                           "nth_append[TraceState]")
                                                                                                          (("2"
                                                                                                            (inst?)
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (lift-if)
                                                                                                                (("2"
                                                                                                                  (split)
                                                                                                                  (("1"
                                                                                                                    (flatten)
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (replace
                                                                                                                         -2)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "nth"
                                                                                                                           1
                                                                                                                           1)
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (flatten)
                                                                                                                    (("2"
                                                                                                                      (replace
                                                                                                                       -1)
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "nth"
                                                                                                                           2)
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (flatten)
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (expand
                                                                   "DLEVENTUALLY")
                                                                  (("2"
                                                                    (inst
                                                                     4
                                                                     "trace")
                                                                    (("1"
                                                                      (expand
                                                                       "DLGLOBALLY")
                                                                      (("1"
                                                                        (skeep)
                                                                        (("1"
                                                                          (typepred
                                                                           "suffix")
                                                                          (("1"
                                                                            (expand
                                                                             "wf_trace?")
                                                                            (("1"
                                                                              (flatten)
                                                                              (("1"
                                                                                (lemma
                                                                                 "suffix_length[TraceState]")
                                                                                (("1"
                                                                                  (inst?)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (replace
                                                                                       -10)
                                                                                      (("1"
                                                                                        (lemma
                                                                                         "suffix_nth[TraceState]")
                                                                                        (("1"
                                                                                          (inst?)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (replace
                                                                                               -11)
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -1
                                                                                                   "0")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "State_Trace")
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "nth"
                                                                                                         -1
                                                                                                         1)
                                                                                                        (("1"
                                                                                                          (case
                                                                                                           "length(suffix)=1")
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             -1)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (case
                                                                                                             "length(suffix)=2")
                                                                                                            (("1"
                                                                                                              (replace
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (replace
                                                                                                                   -2)
                                                                                                                  (("1"
                                                                                                                    (replace
                                                                                                                     -11)
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (hide-all-but
                                                                                                               (-2
                                                                                                                -3
                                                                                                                1
                                                                                                                2))
                                                                                                              (("2"
                                                                                                                (grind)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (grind)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (expand
                                                                       "nth"
                                                                       -5)
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (lemma
                                                                           "suffix_reflexive[TraceState]")
                                                                          (("2"
                                                                            (inst?)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (flatten)
                (("2" (split)
                  (("1" (flatten)
                    (("1" (expand "ALLRUNS_tr")
                      (("1" (expand "normDLEG")
                        (("1" (inst -1 "(: STATE(x!1), ERROR :)")
                          (("1" (assert)
                            (("1" (expand "nth")
                              (("1"
                                (split)
                                (("1"
                                  (expand "finite_trace?")
                                  (("1"
                                    (expand "last")
                                    (("1"
                                      (expand "length")
                                      (("1"
                                        (expand "length")
                                        (("1"
                                          (expand "length")
                                          (("1"
                                            (expand "nth")
                                            (("1"
                                              (expand "nth")
                                              (("1" (propax) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (flatten)
                                  (("2"
                                    (expand "DLEVENTUALLY")
                                    (("2"
                                      (expand "DLGLOBALLY")
                                      (("2"
                                        (skeep)
                                        (("2"
                                          (typepred "suffix")
                                          (("2"
                                            (expand "wf_trace?")
                                            (("2"
                                              (flatten)
                                              (("2"
                                                (lemma
                                                 "suffix_same_length[TraceState]")
                                                (("2"
                                                  (inst?)
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (split)
                                                      (("1"
                                                        (replace -1)
                                                        (("1"
                                                          (inst
                                                           -5
                                                           "suffix")
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (expand
                                                               "State_Trace")
                                                              (("1"
                                                                (replace
                                                                 -1
                                                                 -5
                                                                 rl)
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (expand
                                                         "length"
                                                         1
                                                         1)
                                                        (("2"
                                                          (expand
                                                           "length"
                                                           1
                                                           1)
                                                          (("2"
                                                            (expand
                                                             "length"
                                                             1
                                                             1)
                                                            (("2"
                                                              (lemma
                                                               "suffix_length[TraceState]")
                                                              (("2"
                                                                (inst?)
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (expand
                                                                     "length"
                                                                     -1
                                                                     2)
                                                                    (("2"
                                                                      (expand
                                                                       "length"
                                                                       -1
                                                                       2)
                                                                      (("2"
                                                                        (expand
                                                                         "length"
                                                                         -1
                                                                         2)
                                                                        (("2"
                                                                          (case
                                                                           "length(suffix)=1")
                                                                          (("1"
                                                                            (lemma
                                                                             "suffix_nth[TraceState]")
                                                                            (("1"
                                                                              (inst?)
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (inst
                                                                                   -1
                                                                                   "0")
                                                                                  (("1"
                                                                                    (replace
                                                                                     -2)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "length"
                                                                                       -1)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "length"
                                                                                         -1)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "length"
                                                                                           -1)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "nth")
                                                                                            (("1"
                                                                                              (expand
                                                                                               "nth")
                                                                                              (("1"
                                                                                                (propax)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (grind)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("3"
                                  (expand "trace_semantic_rel")
                                  (("3"
                                    (assert)
                                    (("3"
                                      (expand "length")
                                      (("3"
                                        (expand "length")
                                        (("3"
                                          (expand "length")
                                          (("3"
                                            (expand "nth")
                                            (("3"
                                              (expand "nth")
                                              (("3" (propax) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (grind) nil nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (expand "ALLRUNS")
                    (("2" (expand "ALLRUNS_tr")
                      (("2" (skeep)
                        (("2" (expand "normDLEG")
                          (("2" (expand "semantic_rel")
                            (("2" (skeep)
                              (("2"
                                (expand "semantic_rel_diff")
                                (("2"
                                  (skeep*)
                                  (("2"
                                    (inst
                                     -3
                                     "(: STATE(x!1), STATE_DIFF(closed_interval(0,r), LAMBDA(t:(closed_interval(0,r))): env_at_t(f,fs,x!1)(t)) :)")
                                    (("1"
                                      (expand "finite_trace?")
                                      (("1"
                                        (expand "last")
                                        (("1"
                                          (expand "length")
                                          (("1"
                                            (expand "length")
                                            (("1"
                                              (expand "length")
                                              (("1"
                                                (expand "nth")
                                                (("1"
                                                  (expand "nth")
                                                  (("1"
                                                    (split)
                                                    (("1"
                                                      (typepred
                                                       "max(closed_interval(0, r))")
                                                      (("1"
                                                        (expand
                                                         "closed_interval")
                                                        (("1"
                                                          (flatten)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (inst
                                                               -3
                                                               "r")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (case
                                                                   "max(LAMBDA (r_1: real): 0 <= r_1 AND r_1 <= r) = r")
                                                                  (("1"
                                                                    (replace
                                                                     -1)
                                                                    (("1"
                                                                      (typepred
                                                                       "env_at_t(f, fs, x!1)(r)")
                                                                      (("1"
                                                                        (inst
                                                                         -2
                                                                         "envo")
                                                                        (("1"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (assert)
                                                                    nil
                                                                    nil)
                                                                   ("3"
                                                                    (postpone)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (hide 2)
                                                      (("2"
                                                        (expand
                                                         "trace_semantic_rel")
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (expand
                                                             "length")
                                                            (("2"
                                                              (expand
                                                               "length")
                                                              (("2"
                                                                (expand
                                                                 "length")
                                                                (("2"
                                                                  (expand
                                                                   "nth")
                                                                  (("2"
                                                                    (expand
                                                                     "nth")
                                                                    (("2"
                                                                      (inst
                                                                       1
                                                                       "fs")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (split)
                                                                          (("1"
                                                                            (decompose-equality)
                                                                            (("1"
                                                                              (skeep)
                                                                              (("1"
                                                                                (expand
                                                                                 "nth")
                                                                                (("1"
                                                                                  (expand
                                                                                   "nth")
                                                                                  (("1"
                                                                                    (propax)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (expand
                                                                               "nth")
                                                                              (("2"
                                                                                (expand
                                                                                 "nth")
                                                                                (("2"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("3"
                                                                              (grind)
                                                                              nil
                                                                              nil)
                                                                             ("4"
                                                                              (typepred
                                                                               "r")
                                                                              (("4"
                                                                                (postpone)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (skeep)
                                                                            (("2"
                                                                              (typepred
                                                                               "t_1")
                                                                              (("2"
                                                                                (expand
                                                                                 "nth")
                                                                                (("2"
                                                                                  (expand
                                                                                   "nth")
                                                                                  (("2"
                                                                                    (typepred
                                                                                     "r")
                                                                                    (("2"
                                                                                      (typepred
                                                                                       "D")
                                                                                      (("2"
                                                                                        (inst
                                                                                         -5
                                                                                         "t_1"
                                                                                         "env_at_t(f, fs, x!1)(t_1)")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "closed_interval")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "dd?")
                                                                                                (("2"
                                                                                                  (split
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (skeep)
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "closed_interval")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (replace
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "hp")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (flatten)
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (expand
                                                                         "nth")
                                                                        (("2"
                                                                          (expand
                                                                           "nth")
                                                                          (("2"
                                                                            (typepred
                                                                             "fs")
                                                                            (("2"
                                                                              (lemma
                                                                               "solution_odes_subset")
                                                                              (("2"
                                                                                (inst?)
                                                                                (("2"
                                                                                  (inst
                                                                                   -1
                                                                                   "closed_interval(0, r)")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil)
                                                                                   ("2"
                                                                                    (skeep)
                                                                                    (("2"
                                                                                      (typepred
                                                                                       "D")
                                                                                      (("2"
                                                                                        (typepred
                                                                                         "r")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "dd?")
                                                                                          (("2"
                                                                                            (split)
                                                                                            (("1"
                                                                                              (skeep)
                                                                                              (("1"
                                                                                                (replace
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "closed_interval")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (flatten)
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (replace
                                                                                               -1)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "hp")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "closed_interval")
                                                                                                    (("2"
                                                                                                      (propax)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2" (grind) nil nil)
                                     ("3"
                                      (split)
                                      (("1"
                                        (expand "dd?")
                                        (("1"
                                          (flatten)
                                          (("1"
                                            (inst 1 "r")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (postpone)
                                                nil
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (inst 1 "r")
                                        (("2"
                                          (assert)
                                          (("2" (postpone) nil nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("4" (postpone) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("3" (flatten)
                    (("3" (expand "ALLRUNS_tr")
                      (("3" (expand "SOMERUNS")
                        (("3" (inst 1 "x!1")
                          (("3" (assert)
                            (("3" (split)
                              (("1" (postpone) nil nil)
                               ("2"
                                (expand "DLNOT")
                                (("2"
                                  (expand "normDLEG")
                                  (("2"
                                    (expand "ALLRUNS")
                                    (("2"
                                      (inst 1 "x!1")
                                      (("2"
                                        (split)
                                        (("1" (postpone) nil nil)
                                         ("2"
                                          (skeep)
                                          (("2" (postpone) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (dltl_DIFFGE 0
  (dltl_DIFFGE-1 nil 3889265665
   ("" (skeep)
    (("" (expand "DLAND")
      (("" (expand "DLOR")
        (("" (decompose-equality)
          (("" (iff)
            (("" (split)
              (("1" (flatten)
                (("1" (expand "ALLRUNS")
                  (("1" (expand "ALLRUNS_tr")
                    (("1" (skeep)
                      (("1" (expand "normDLGE")
                        (("1" (split 1)
                          (("1" (flatten)
                            (("1" (expand "finite_trace?")
                              (("1"
                                (lemma "trace_semantics_sound")
                                (("1"
                                  (inst -1 "DIFF(f, P)" "trace")
                                  (("1"
                                    (assert)
                                    (("1"
                                      (assert)
                                      (("1"
                                        (expand "final_env")
                                        (("1"
                                          (split)
                                          (("1"
                                            (flatten)
                                            (("1"
                                              (assert)
                                              (("1"
                                                (expand "nth")
                                                (("1"
                                                  (replace -7)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (inst
                                                       -4
                                                       "state(last(trace))")
                                                      (("1"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (flatten)
                                            (("2"
                                              (assert)
                                              (("2"
                                                (expand "nth")
                                                (("2"
                                                  (replace -6)
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (inst
                                                       -4
                                                       "behavior(last(trace))(max(D(last(trace))))")
                                                      (("2"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (expand "finite_trace?")
                                    (("2" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (flatten)
                            (("2" (expand "DLGLOBALLY")
                              (("2"
                                (expand "DLEVENTUALLY")
                                (("2"
                                  (skeep)
                                  (("2"
                                    (typepred "suffix")
                                    (("2"
                                      (expand "SOMERUNS")
                                      (("2"
                                        (split -5)
                                        (("1"
                                          (skeep)
                                          (("1"
                                            (expand "semantic_rel" -1)
                                            (("1"
                                              (skeep)
                                              (("1"
                                                (expand
                                                 "semantic_rel_diff")
                                                (("1"
                                                  (skeep*)
                                                  (("1"
                                                    (expand "DLNOT")
                                                    (("1"
                                                      (expand
                                                       "trace_semantic_rel")
                                                      (("1"
                                                        (expand
                                                         "finite_trace?")
                                                        (("1"
                                                          (expand
                                                           "last")
                                                          (("1"
                                                            (split -8)
                                                            (("1"
                                                              (flatten)
                                                              (("1"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (flatten)
                                                              (("2"
                                                                (split)
                                                                (("1"
                                                                  (flatten)
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (replace
                                                                       -11)
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (skeep)
                                                                          (("2"
                                                                            (replace
                                                                             -3)
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (inst
                                                                                 -4
                                                                                 "r")
                                                                                (("1"
                                                                                  (typepred
                                                                                   "env_at_t(f, fs!1, x!1)(r)")
                                                                                  (("1"
                                                                                    (inst
                                                                                     -2
                                                                                     "envo")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil)
                                                                                     ("2"
                                                                                      (expand
                                                                                       "env_at_t?")
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (flatten)
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (split)
                                                                                              (("1"
                                                                                                (propax)
                                                                                                nil
                                                                                                nil)
                                                                                               ("2"
                                                                                                (skeep)
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -9
                                                                                                   "k")
                                                                                                  (("2"
                                                                                                    (replace
                                                                                                     -9
                                                                                                     1
                                                                                                     rl)
                                                                                                    (("2"
                                                                                                      (typepred
                                                                                                       "fs")
                                                                                                      (("2"
                                                                                                        (typepred
                                                                                                         "fs!1")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "solution_odes_u?")
                                                                                                          (("2"
                                                                                                            (flatten)
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               -2
                                                                                                               "fs"
                                                                                                               "D")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (replace
                                                                                                                   -19)
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       -2
                                                                                                                       "k"
                                                                                                                       "r")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (skeep)
                                                                                                                (("2"
                                                                                                                  (typepred
                                                                                                                   "D")
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "dd?")
                                                                                                                    (("2"
                                                                                                                      (split)
                                                                                                                      (("1"
                                                                                                                        (skeep)
                                                                                                                        (("1"
                                                                                                                          (replace
                                                                                                                           -1)
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "closed_interval")
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "hp")
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (replace
                                                                                                                         -1)
                                                                                                                        (("2"
                                                                                                                          (propax)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (typepred
                                                                                   "r")
                                                                                  (("2"
                                                                                    (typepred
                                                                                     "D")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "dd?")
                                                                                      (("2"
                                                                                        (split)
                                                                                        (("1"
                                                                                          (skeep)
                                                                                          (("1"
                                                                                            (replace
                                                                                             -1)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "closed_interval")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "hp")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (replace
                                                                                           -1)
                                                                                          (("2"
                                                                                            (propax)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("3"
                                                                  (flatten)
                                                                  (("3"
                                                                    (replace
                                                                     -10)
                                                                    (("3"
                                                                      (assert)
                                                                      (("3"
                                                                        (lemma
                                                                         "suffix_same_length[TraceState]")
                                                                        (("3"
                                                                          (inst?)
                                                                          (("3"
                                                                            (assert)
                                                                            (("3"
                                                                              (split)
                                                                              (("1"
                                                                                (replace
                                                                                 -1)
                                                                                (("1"
                                                                                  (inst
                                                                                   5
                                                                                   "trace")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "State_Trace")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "nth")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (replace
                                                                                             -1)
                                                                                            (("1"
                                                                                              (replace
                                                                                               -11)
                                                                                              (("1"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (replace
                                                                                     -1)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "nth")
                                                                                      (("2"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (lemma
                                                                                 "suffix_length[TraceState]")
                                                                                (("2"
                                                                                  (inst?)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (replace
                                                                                       -4)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "wf_trace?")
                                                                                          (("2"
                                                                                            (flatten)
                                                                                            (("2"
                                                                                              (case
                                                                                               "length(suffix)=1")
                                                                                              (("1"
                                                                                                (lemma
                                                                                                 "suffix_nth[TraceState]")
                                                                                                (("1"
                                                                                                  (inst?)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       -1
                                                                                                       "0")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           -2)
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             -6)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "nth"
                                                                                                                 -1
                                                                                                                 1)
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (hide-all-but
                                                                                                 (-1
                                                                                                  -7
                                                                                                  1
                                                                                                  2))
                                                                                                (("2"
                                                                                                  (grind)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (inst -1 "x!1")
                                          (("2"
                                            (assert)
                                            (("2"
                                              (split)
                                              (("1"
                                                (skeep)
                                                (("1"
                                                  (expand
                                                   "trace_semantic_rel")
                                                  (("1"
                                                    (expand
                                                     "finite_trace?")
                                                    (("1"
                                                      (expand "last")
                                                      (("1"
                                                        (flatten)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (split
                                                                 -9)
                                                                (("1"
                                                                  (flatten)
                                                                  (("1"
                                                                    (skeep)
                                                                    (("1"
                                                                      (replace
                                                                       -2)
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (replace
                                                                           -10)
                                                                          (("1"
                                                                            (expand
                                                                             "wf_trace?")
                                                                            (("1"
                                                                              (flatten)
                                                                              (("1"
                                                                                (lemma
                                                                                 "suffix_length[TraceState]")
                                                                                (("1"
                                                                                  (inst?)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (replace
                                                                                       -13)
                                                                                      (("1"
                                                                                        (inst
                                                                                         3
                                                                                         "(: INF_DIFF(LAMBDA (r: (hp(0))): env_at_t(f, fs, x!1)(r)) :)")
                                                                                        (("1"
                                                                                          (expand
                                                                                           State_Trace)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (postpone)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (split)
                                                                                          (("1"
                                                                                            (grind)
                                                                                            nil
                                                                                            nil)
                                                                                           ("2"
                                                                                            (case
                                                                                             "length(suffix)=1")
                                                                                            (("1"
                                                                                              (postpone)
                                                                                              nil
                                                                                              nil)
                                                                                             ("2"
                                                                                              (case
                                                                                               "length(suffix)=2")
                                                                                              (("1"
                                                                                                (postpone)
                                                                                                nil
                                                                                                nil)
                                                                                               ("2"
                                                                                                (hide-all-but
                                                                                                 (-1
                                                                                                  -7
                                                                                                  1
                                                                                                  2))
                                                                                                (("2"
                                                                                                  (grind)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (replace
                                                                     -8)
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (lemma
                                                                         "suffix_length[TraceState]")
                                                                        (("2"
                                                                          (inst?)
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (replace
                                                                               -10)
                                                                              (("2"
                                                                                (lemma
                                                                                 "suffix_same_length[TraceState]")
                                                                                (("2"
                                                                                  (inst?)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (split)
                                                                                      (("1"
                                                                                        (replace
                                                                                         -1)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (inst
                                                                                             4
                                                                                             "suffix")
                                                                                            (("1"
                                                                                              (expand
                                                                                               "State_Trace")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "nth")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (replace
                                                                                                     -10)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (replace
                                                                                         -10)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "wf_trace?")
                                                                                          (("2"
                                                                                            (flatten)
                                                                                            (("2"
                                                                                              (case
                                                                                               "length(suffix)=1")
                                                                                              (("1"
                                                                                                (replace
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (lemma
                                                                                                     "suffix_nth[TraceState]")
                                                                                                    (("1"
                                                                                                      (inst?)
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           -1
                                                                                                           "0")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "nth"
                                                                                                             -1
                                                                                                             1)
                                                                                                            (("1"
                                                                                                              (replace
                                                                                                               -2)
                                                                                                              (("1"
                                                                                                                (replace
                                                                                                                 -13)
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (hide-all-but
                                                                                                 (-1
                                                                                                  -5
                                                                                                  1
                                                                                                  2))
                                                                                                (("2"
                                                                                                  (grind)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (postpone)
                                                nil
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (flatten)
                (("2" (split)
                  (("1" (flatten)
                    (("1" (expand "ALLRUNS_tr")
                      (("1" (expand "normDLGE")
                        (("1" (inst -1 "(:STATE(x!1),ERROR:)")
                          (("1" (assert)
                            (("1" (expand "finite_trace?")
                              (("1"
                                (expand "last")
                                (("1"
                                  (expand "length")
                                  (("1"
                                    (expand "length")
                                    (("1"
                                      (expand "length")
                                      (("1"
                                        (expand "nth")
                                        (("1"
                                          (expand "nth")
                                          (("1"
                                            (split)
                                            (("1"
                                              (expand "DLGLOBALLY")
                                              (("1"
                                                (expand "DLEVENTUALLY")
                                                (("1"
                                                  (inst
                                                   -1
                                                   "(: STATE(x!1), ERROR :)")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (skeep)
                                                      (("1"
                                                        (typepred
                                                         "suffix_1")
                                                        (("1"
                                                          (expand
                                                           "State_Trace")
                                                          (("1"
                                                            (lemma
                                                             "suffix_nth[TraceState]")
                                                            (("1"
                                                              (inst?)
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (expand
                                                                   "wf_trace?")
                                                                  (("1"
                                                                    (flatten)
                                                                    (("1"
                                                                      (inst
                                                                       -1
                                                                       "0")
                                                                      (("1"
                                                                        (expand
                                                                         "length"
                                                                         -1
                                                                         1)
                                                                        (("1"
                                                                          (expand
                                                                           "length"
                                                                           -1
                                                                           1)
                                                                          (("1"
                                                                            (expand
                                                                             "length"
                                                                             -1
                                                                             1)
                                                                            (("1"
                                                                              (expand
                                                                               "nth"
                                                                               -1)
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (lift-if)
                                                                                  (("1"
                                                                                    (split)
                                                                                    (("1"
                                                                                      (flatten)
                                                                                      (("1"
                                                                                        (replace
                                                                                         -2)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (flatten)
                                                                                      (("2"
                                                                                        (case
                                                                                         "length(suffix_1)=1")
                                                                                        (("1"
                                                                                          (replace
                                                                                           -1)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "nth")
                                                                                              (("1"
                                                                                                (propax)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (lemma
                                                                                           "suffix_length[TraceState]")
                                                                                          (("2"
                                                                                            (inst?)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "length"
                                                                                                 -1
                                                                                                 2)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "length"
                                                                                                   -1
                                                                                                   2)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "length"
                                                                                                     -1
                                                                                                     2)
                                                                                                    (("2"
                                                                                                      (grind)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (grind)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (lemma
                                                     "suffix_reflexive[TraceState]")
                                                    (("2"
                                                      (inst?)
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (grind)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (expand
                                               "trace_semantic_rel")
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (expand "length")
                                                  (("2"
                                                    (expand "length")
                                                    (("2"
                                                      (expand "length")
                                                      (("2"
                                                        (expand "nth")
                                                        (("2"
                                                          (expand
                                                           "nth")
                                                          (("2"
                                                            (propax)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (grind) nil nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (expand "ALLRUNS_tr")
                    (("2" (expand "ALLRUNS")
                      (("2" (skeep)
                        (("2" (lemma "trace_semantics_complete")
                          (("2" (inst?)
                            (("2" (assert)
                              (("2"
                                (skeep)
                                (("2"
                                  (expand "nth")
                                  (("2"
                                    (inst -5 "trace")
                                    (("2"
                                      (assert)
                                      (("2"
                                        (replace -1)
                                        (("2"
                                          (lemma
                                           "TraceState_STATE_eta")
                                          (("2"
                                            (inst?)
                                            (("2"
                                              (assert)
                                              (("2"
                                                (expand "normDLGE")
                                                (("2"
                                                  (expand "final_env")
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (lift-if)
                                                      (("2"
                                                        (split)
                                                        (("1"
                                                          (flatten)
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (flatten)
                                                          (("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("3" (flatten)
                    (("3" (expand "SOMERUNS")
                      (("3" (expand "ALLRUNS_tr")
                        (("3" (expand "normDLGE")
                          (("3" (expand "ALLRUNS")
                            (("3" (skeep)
                              (("3"
                                (inst-cp 1 "x!1")
                                (("3"
                                  (expand "DLNOT")
                                  (("3"
                                    (assert)
                                    (("3"
                                      (split 2)
                                      (("1" (postpone) nil nil)
                                       ("2"
                                        (inst 1 "envo_1")
                                        (("2"
                                          (assert)
                                          (("2" (postpone) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (dltl_STARcap 0
  (dltl_STARcap-1 nil 3889265666
   ("" (skeep)
    (("" (expand "DLAND")
      (("" (decompose-equality)
        (("" (iff)
          (("" (split)
            (("1" (flatten)
              (("1" (expand "ALLRUNS")
                (("1" (expand "ALLRUNS_tr")
                  (("1" (skeep*)
                    (("1"
                      (lemma "trace_semantic_rel_star_bounded_star")
                      (("1" (inst?)
                        (("1" (assert)
                          (("1" (skeep)
                            (("1" (expand "BSTAR" -1)
                              (("1" (postpone) nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (flatten)
              (("2" (expand "ALLRUNS")
                (("2" (expand "ALLRUNS_tr")
                  (("2" (copy -1)
                    (("2" (expand "trace_semantic_rel" -1)
                      (("2" (inst -1 "(: STATE(x!1) :)")
                        (("1" (assert)
                          (("1" (expand "nth")
                            (("1" (expand "normDLGLOBALLY" -1)
                              (("1"
                                (expand "finite_trace?")
                                (("1"
                                  (expand "last")
                                  (("1"
                                    (assert)
                                    (("1"
                                      (expand "nth")
                                      (("1"
                                        (flatten)
                                        (("1"
                                          (assert)
                                          (("1"
                                            (skeep*)
                                            (("1"
                                              (expand
                                               "trace_semantic_rel"
                                               -3)
                                              (("1"
                                                (postpone)
                                                nil
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (grind) nil nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (dltl_STARcup 0
  (dltl_STARcup-1 nil 3889265668
   ("" (skeep)
    (("" (expand "ALLRUNS_tr")
      (("" (expand "DLOR")
        (("" (decompose-equality)
          (("1" (iff)
            (("1" (split)
              (("1" (flatten)
                (("1" (skeep*)
                  (("1" (expand "normDLEVENTUALLY")
                    (("1" (postpone) nil nil)) nil))
                  nil))
                nil)
               ("2" (flatten) (("2" (postpone) nil nil)) nil))
              nil))
            nil)
           ("2" (skeep)
            (("2" (typepred "trace")
              (("2" (expand "wf_trace?")
                (("2" (flatten) (("2" (grind) nil nil)) nil)) nil))
              nil))
            nil)
           ("3" (skeep*)
            (("3" (typepred "trace")
              (("3" (expand "wf_trace?")
                (("3" (flatten) (("3" (grind) nil nil)) nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (dltl_STARindcup 0
  (dltl_STARindcup-1 nil 3891418097
   ("" (skeep)
    (("" (expand "DLIMPLIES")
      (("" (flatten)
        (("" (assert)
          (("" (lemma "trace_semantic_rel_star_bounded_star")
            (("" (expand "ALLRUNS_tr")
              (("" (skeep)
                (("" (inst -1 "A" "trace")
                  (("" (assert)
                    (("" (skeep)
                      (("" (expand "normDLEVENTUALLY")
                        (("" (postpone) nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (dltl_STAREG 0
  (dltl_STAREG-1 nil 3889265671
   ("" (skeep)
    (("" (expand "DLAND")
      (("" (decompose-equality)
        (("" (iff)
          (("" (split)
            (("1" (flatten)
              (("1" (expand "ALLRUNS")
                (("1" (expand "ALLRUNS_tr")
                  (("1" (skeep)
                    (("1" (typepred "trace")
                      (("1" (case "length(trace)=1")
                        (("1" (expand "normDLEG")
                          (("1" (expand "finite_trace?")
                            (("1" (expand "last")
                              (("1"
                                (replace -1)
                                (("1"
                                  (assert)
                                  (("1"
                                    (replace -5)
                                    (("1" (assert) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2"
                          (case "length(trace)=2 AND (error?(last(trace)) OR inf_diff?(last(trace)))")
                          (("1" (expand "trace_semantic_rel" -6)
                            (("1" (assert)
                              (("1"
                                (flatten)
                                (("1"
                                  (split -7)
                                  (("1"
                                    (skeep)
                                    (("1"
                                      (typepred "trace1")
                                      (("1"
                                        (typepred "trace2")
                                        (("1"
                                          (lemma
                                           "length_append[TraceState]")
                                          (("1"
                                            (inst?)
                                            (("1"
                                              (replace -4)
                                              (("1"
                                                (replace -10)
                                                (("1"
                                                  (expand "wf_trace?")
                                                  (("1"
                                                    (flatten)
                                                    (("1"
                                                      (case
                                                       "cdr(trace2)=null")
                                                      (("1"
                                                        (lemma
                                                         "append_null[TraceState]")
                                                        (("1"
                                                          (inst
                                                           -1
                                                           "trace1")
                                                          (("1"
                                                            (replace
                                                             -2)
                                                            (("1"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (expand
                                                         "length"
                                                         -1)
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (expand
                                                             "length"
                                                             -1)
                                                            (("2"
                                                              (lift-if)
                                                              (("2"
                                                                (lift-if)
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (split)
                                                                    (("1"
                                                                      (flatten)
                                                                      (("1"
                                                                        (split)
                                                                        (("1"
                                                                          (lemma
                                                                           "last_append[TraceState]")
                                                                          (("1"
                                                                            (inst?)
                                                                            (("1"
                                                                              (replace
                                                                               -1)
                                                                              (("1"
                                                                                (lemma
                                                                                 "car_append[TraceState]")
                                                                                (("1"
                                                                                  (inst?)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "nth")
                                                                                    (("1"
                                                                                      (replace
                                                                                       -1)
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "normDLEG")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "finite_trace?")
                                                                                            (("1"
                                                                                              (replace
                                                                                               -2)
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (split
                                                                                                   3)
                                                                                                  (("1"
                                                                                                    (split
                                                                                                     -16)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (flatten)
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       -20
                                                                                                       "x!1")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "semantic_rel")
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -20
                                                                                                           "trace")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (postpone)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (flatten)
                                                                          (("2"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (flatten)
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (grind)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (flatten)
                                    (("2"
                                      (inst -7 "x!1")
                                      (("2"
                                        (expand "semantic_rel")
                                        (("2"
                                          (inst -7 "trace")
                                          (("2" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (postpone) nil nil)
                           ("3" (expand "wf_trace?")
                            (("3" (flatten) (("3" (assert) nil nil))
                              nil))
                            nil)
                           ("4" (expand "wf_trace?")
                            (("4" (flatten) (("4" (assert) nil nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (flatten)
              (("2" (expand "ALLRUNS")
                (("2" (expand "ALLRUNS_tr")
                  (("2" (split)
                    (("1" (expand "trace_semantic_rel")
                      (("1" (inst -1 "(: STATE(x!1) :)")
                        (("1" (assert)
                          (("1" (expand "nth")
                            (("1" (expand "normDLEG")
                              (("1"
                                (expand "finite_trace?")
                                (("1"
                                  (expand "last")
                                  (("1"
                                    (expand "length")
                                    (("1"
                                      (expand "length")
                                      (("1"
                                        (expand "nth")
                                        (("1" (propax) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (grind) nil nil))
                        nil))
                      nil)
                     ("2" (skeep*)
                      (("2"
                        (inst -4
                         "append((: STATE(x!1),STATE(envo) :), trace)")
                        (("1" (lemma "car_append[TraceState]")
                          (("1" (inst?)
                            (("1" (expand "nth")
                              (("1"
                                (assert)
                                (("1"
                                  (split)
                                  (("1"
                                    (expand "normDLEG")
                                    (("1"
                                      (expand "finite_trace?")
                                      (("1"
                                        (lemma
                                         "last_append[TraceState]")
                                        (("1"
                                          (typepred "trace")
                                          (("1"
                                            (expand "wf_trace?")
                                            (("1"
                                              (flatten)
                                              (("1"
                                                (inst
                                                 -3
                                                 "(: STATE(x!1), STATE(envo) :)"
                                                 "trace")
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (replace -3)
                                                    (("1"
                                                      (split)
                                                      (("1"
                                                        (flatten)
                                                        (("1"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (flatten)
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (expand
                                                             "DLEVENTUALLY")
                                                            (("2"
                                                              (expand
                                                               "DLGLOBALLY")
                                                              (("2"
                                                                (skeep)
                                                                (("2"
                                                                  (typepred
                                                                   "suffix")
                                                                  (("2"
                                                                    (case
                                                                     "length(trace)>=length(suffix)")
                                                                    (("1"
                                                                      (inst
                                                                       3
                                                                       "suffix")
                                                                      (("1"
                                                                        (lemma
                                                                         "suffix_append[TraceState]")
                                                                        (("1"
                                                                          (inst
                                                                           -1
                                                                           "(: STATE(x!1), STATE(envo) :)"
                                                                           "trace"
                                                                           "append((: STATE(x!1), STATE(envo) :), trace)"
                                                                           "suffix")
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (inst
                                                                       4
                                                                       "trace")
                                                                      (("1"
                                                                        (skeep)
                                                                        (("1"
                                                                          (inst
                                                                           -3
                                                                           "suffix_1")
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil)
                                                                           ("2"
                                                                            (postpone)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (lemma
                                                                         "suffix_reflexive[TraceState]")
                                                                        (("2"
                                                                          (inst?)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (hide 2)
                                    (("2" (postpone) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (expand "wf_trace?")
                          (("2" (split)
                            (("1" (grind) nil nil)
                             ("2" (skeep)
                              (("2"
                                (typepred "i")
                                (("2"
                                  (lemma "nth_append[TraceState]")
                                  (("2"
                                    (inst?)
                                    (("2"
                                      (assert)
                                      (("2"
                                        (lemma
                                         "length_append[TraceState]")
                                        (("2"
                                          (inst?)
                                          (("2"
                                            (assert)
                                            (("2"
                                              (lift-if)
                                              (("2"
                                                (split)
                                                (("1"
                                                  (flatten)
                                                  (("1"
                                                    (expand
                                                     "length"
                                                     -1)
                                                    (("1"
                                                      (expand
                                                       "length"
                                                       -1)
                                                      (("1"
                                                        (expand
                                                         "length"
                                                         -1)
                                                        (("1"
                                                          (replace -2)
                                                          (("1"
                                                            (case
                                                             "i=0")
                                                            (("1"
                                                              (replace
                                                               -1)
                                                              (("1"
                                                                (grind)
                                                                nil
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (case
                                                               "i=1")
                                                              (("1"
                                                                (replace
                                                                 -1)
                                                                (("1"
                                                                  (grind)
                                                                  nil
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (flatten)
                                                  (("2"
                                                    (replace -1)
                                                    (("2"
                                                      (expand
                                                       "length"
                                                       (1 2))
                                                      (("2"
                                                        (expand
                                                         "length"
                                                         (1 2))
                                                        (("2"
                                                          (expand
                                                           "length"
                                                           (1 2))
                                                          (("2"
                                                            (typepred
                                                             "trace")
                                                            (("2"
                                                              (expand
                                                               "wf_trace?")
                                                              (("2"
                                                                (flatten)
                                                                (("2"
                                                                  (replace
                                                                   -4)
                                                                  (("2"
                                                                    (expand
                                                                     "length"
                                                                     -5
                                                                     1)
                                                                    (("2"
                                                                      (expand
                                                                       "length"
                                                                       -5
                                                                       1)
                                                                      (("2"
                                                                        (expand
                                                                         "length"
                                                                         -5
                                                                         1)
                                                                        (("2"
                                                                          (inst
                                                                           -2
                                                                           "i-2")
                                                                          (("2"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (dltl_STARGE 0
  (dltl_STARGE-1 nil 3889265672 ("" (postpone) nil nil) nil shostak))
 (dltl_STARconcap_TCC1 0
  (dltl_STARconcap_TCC1-1 nil 3888506744 ("" (subtype-tcc) nil nil) nil
   nil
   (dltl_STARconcap subtype
    "list_props[TraceState_adt.TraceState].nth(temporal_logic.t, temporal_logic.i)"
    "(TraceState_adt.state?)")))
 (dltl_STARconcap_TCC2 0
  (dltl_STARconcap_TCC2-1 nil 3888506744 ("" (subtype-tcc) nil nil) nil
   nil
   (dltl_STARconcap subtype "(number_fields.-)(temporal_logic.k, 1)"
    "naturalnumbers.below(list_props[TraceState_adt.TraceState].length(temporal_logic.t))")))
 (dltl_STARconcap_TCC3 0
  (dltl_STARconcap_TCC3-1 nil 3888506744
   ("" (skeep)
    (("" (typepred "t")
      (("" (expand "wf_trace?") (("" (grind) nil nil)) nil)) nil))
    nil)
   ((Trace type-eq-decl nil trace_semantics nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (list type-decl nil list_adt nil)
    (TraceState type-decl nil TraceState_adt nil))
   nil
   (dltl_STARconcap subtype "0"
    "naturalnumbers.below(list_props[TraceState_adt.TraceState].length(temporal_logic.t))")))
 (dltl_STARconcap 0
  (dltl_STARconcap-1 nil 3889265674 ("" (postpone) nil nil) nil
   shostak)))


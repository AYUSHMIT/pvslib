(tl_star_lems
 (dltl_BSTARcap_temp 0
  (dltl_BSTARcap_temp-1 nil 3901786095
   ("" (skeep*)
    (("" (decompose-equality 1)
      (("" (iff)
        (("" (split 1)
          (("1" (flatten)
            (("1" (induct "i")
              (("1" (expand "ALLRUNS_tr" 1)
                (("1" (skeep)
                  (("1" (inst -3 "0")
                    (("1" (expand "DLAND" -3)
                      (("1" (flatten)
                        (("1" (hide -5)
                          (("1" (expand "BSTAR" -2)
                            (("1" (expand "trace_semantic_rel" -2)
                              (("1"
                                (split -2)
                                (("1"
                                  (flatten)
                                  (("1"
                                    (expand "normDLGLOBALLY" 1)
                                    (("1"
                                      (case
                                       "DLGLOBALLY(State_Trace(Q))(trace)")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (hide -1)
                                          (("1"
                                            (split 1)
                                            (("1"
                                              (flatten)
                                              (("1" (grind) nil nil))
                                              nil)
                                             ("2" (propax) nil nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (assert)
                                        (("2"
                                          (lemma "DLGLOBALLY_FORALL")
                                          (("2"
                                            (inst?)
                                            (("2"
                                              (assert)
                                              (("2"
                                                (hide 2)
                                                (("2"
                                                  (skeep)
                                                  (("2"
                                                    (case "i=0")
                                                    (("1"
                                                      (replace -1)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (grind)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (hide 2 3 4 5)
                                                      (("2"
                                                        (typepred "i")
                                                        (("2"
                                                          (grind)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (flatten)
                                  (("2"
                                    (typepred "trace")
                                    (("2" (grind) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (skeep)
                (("2" (expand "BSTAR" 1)
                  (("2" (expand "ALLRUNS_tr" 1)
                    (("2" (skeep)
                      (("2" (expand "trace_semantic_rel" -3)
                        (("2" (assert)
                          (("2"
                            (case " trace_semantic_rel(BSTAR(A, j))(trace)")
                            (("1" (expand "ALLRUNS_tr" -2)
                              (("1"
                                (assert)
                                (("1"
                                  (inst -2 "trace")
                                  (("1" (assert) nil nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (assert)
                              (("2"
                                (lemma
                                 "trace_semantic_rel_bounded_star_seq_switch_eq")
                                (("2"
                                  (inst?)
                                  (("2"
                                    (replace -1 -4)
                                    (("2"
                                      (hide -1)
                                      (("2"
                                        (inst-cp -4 "j")
                                        (("2"
                                          (expand "DLAND" -5)
                                          (("2"
                                            (flatten)
                                            (("2"
                                              (expand
                                               "trace_semantic_rel"
                                               -3)
                                              (("2"
                                                (skeep)
                                                (("2"
                                                  (expand
                                                   "ALLRUNS_tr"
                                                   -1)
                                                  (("2"
                                                    (inst -1 "trace1")
                                                    (("1"
                                                      (expand
                                                       "ALLRUNS_st"
                                                       -11)
                                                      (("1"
                                                        (inst
                                                         -11
                                                         "trace1")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (case
                                                             "init_env(trace1) = x!1")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (expand
                                                                 "ALLRUNS_tr"
                                                                 -12)
                                                                (("1"
                                                                  (inst
                                                                   -12
                                                                   "trace2")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (label
                                                                       "tbtar"
                                                                       1)
                                                                      (("1"
                                                                        (hide
                                                                         "tbtar")
                                                                        (("1"
                                                                          (expand
                                                                           "normDLGLOBALLY")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (case
                                                                               "NOT DLGLOBALLY(State_Trace(Q))(trace)")
                                                                              (("1"
                                                                                (hide
                                                                                 2)
                                                                                (("1"
                                                                                  (hide
                                                                                   -9)
                                                                                  (("1"
                                                                                    (case
                                                                                     "NOT DLGLOBALLY(State_Trace(Q))(trace2)")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil)
                                                                                     ("2"
                                                                                      (hide
                                                                                       -12)
                                                                                      (("2"
                                                                                        (flatten)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (lemma
                                                                                             "DLGLOBALLY_FORALL")
                                                                                            (("2"
                                                                                              (inst?)
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (hide
                                                                                                   -2)
                                                                                                  (("2"
                                                                                                    (lemma
                                                                                                     "DLGLOBALLY_FORALL")
                                                                                                    (("2"
                                                                                                      (inst?)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (hide
                                                                                                           2)
                                                                                                          (("2"
                                                                                                            (lemma
                                                                                                             "DLGLOBALLY_FORALL")
                                                                                                            (("2"
                                                                                                              (inst?)
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (hide
                                                                                                                   -5)
                                                                                                                  (("2"
                                                                                                                    (skeep)
                                                                                                                    (("2"
                                                                                                                      (lemma
                                                                                                                       "nth_append[TraceState]")
                                                                                                                      (("2"
                                                                                                                        (inst?
                                                                                                                         -1)
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -1
                                                                                                                           "i")
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (typepred
                                                                                                                               "i")
                                                                                                                              (("2"
                                                                                                                                (lemma
                                                                                                                                 "length_append[TraceState]")
                                                                                                                                (("2"
                                                                                                                                  (inst?
                                                                                                                                   -1)
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    (("2"
                                                                                                                                      (lift-if
                                                                                                                                       -3)
                                                                                                                                      (("2"
                                                                                                                                        (split
                                                                                                                                         -3)
                                                                                                                                        (("1"
                                                                                                                                          (flatten)
                                                                                                                                          (("1"
                                                                                                                                            (inst
                                                                                                                                             -5
                                                                                                                                             "i")
                                                                                                                                            (("1"
                                                                                                                                              (split
                                                                                                                                               -5)
                                                                                                                                              (("1"
                                                                                                                                                (grind)
                                                                                                                                                nil
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (flatten)
                                                                                                                                                (("2"
                                                                                                                                                  (grind)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil)
                                                                                                                                               ("3"
                                                                                                                                                (flatten)
                                                                                                                                                (("3"
                                                                                                                                                  (assert)
                                                                                                                                                  (("3"
                                                                                                                                                    (skeep)
                                                                                                                                                    (("3"
                                                                                                                                                      (inst
                                                                                                                                                       -2
                                                                                                                                                       "t")
                                                                                                                                                      (("3"
                                                                                                                                                        (assert)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil)
                                                                                                                                               ("4"
                                                                                                                                                (flatten)
                                                                                                                                                (("4"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (flatten)
                                                                                                                                          (("2"
                                                                                                                                            (assert)
                                                                                                                                            (("2"
                                                                                                                                              (inst
                                                                                                                                               -5
                                                                                                                                               "i - length(trace1)")
                                                                                                                                              (("2"
                                                                                                                                                (assert)
                                                                                                                                                (("2"
                                                                                                                                                  (split
                                                                                                                                                   -5)
                                                                                                                                                  (("1"
                                                                                                                                                    (flatten)
                                                                                                                                                    (("1"
                                                                                                                                                      (grind)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (flatten)
                                                                                                                                                    (("2"
                                                                                                                                                      (grind)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("3"
                                                                                                                                                    (flatten)
                                                                                                                                                    (("3"
                                                                                                                                                      (assert)
                                                                                                                                                      (("3"
                                                                                                                                                        (skeep)
                                                                                                                                                        (("3"
                                                                                                                                                          (inst
                                                                                                                                                           -2
                                                                                                                                                           "t")
                                                                                                                                                          (("3"
                                                                                                                                                            (grind)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("4"
                                                                                                                                                    (grind)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (split
                                                                                   1)
                                                                                  (("1"
                                                                                    (flatten)
                                                                                    (("1"
                                                                                      (case
                                                                                       "finite_trace?(trace2)")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (case
                                                                                           "final_env(trace2) = final_env(trace)")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil)
                                                                                           ("2"
                                                                                            (hide
                                                                                             -13)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "finite_trace?"
                                                                                                 -1)
                                                                                                (("2"
                                                                                                  (typepred
                                                                                                   "trace"
                                                                                                   "trace2")
                                                                                                  (("2"
                                                                                                    (hide
                                                                                                     -2)
                                                                                                    (("2"
                                                                                                      (lemma
                                                                                                       "last_append[TraceState]")
                                                                                                      (("2"
                                                                                                        (inst?)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "final_env")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (lift-if
                                                                                                                 1)
                                                                                                                (("1"
                                                                                                                  (split
                                                                                                                   1)
                                                                                                                  (("1"
                                                                                                                    (flatten)
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (flatten)
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (typepred
                                                                                                           "trace2")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "wf_trace?"
                                                                                                             -1)
                                                                                                            (("2"
                                                                                                              (flatten)
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (hide
                                                                                           -12)
                                                                                          (("2"
                                                                                            (hide
                                                                                             2)
                                                                                            (("2"
                                                                                              (lemma
                                                                                               "last_append[TraceState]")
                                                                                              (("2"
                                                                                                (inst?)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "finite_trace?")
                                                                                                    (("1"
                                                                                                      (flatten)
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (typepred
                                                                                                   "trace2")
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "wf_trace?"
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (flatten)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (propax)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (typepred
                                                                     "trace2")
                                                                    (("2"
                                                                      (typepred
                                                                       "trace")
                                                                      (("2"
                                                                        (expand
                                                                         "valid_trace?"
                                                                         1)
                                                                        (("2"
                                                                          (expand
                                                                           "valid_trace?"
                                                                           -2)
                                                                          (("2"
                                                                            (flatten)
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (lemma
                                                                                 "last_append[TraceState]")
                                                                                (("2"
                                                                                  (inst?)
                                                                                  (("2"
                                                                                    (split
                                                                                     -3)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "finite_trace?")
                                                                                        (("1"
                                                                                          (flatten)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (expand
                                                               "init_env"
                                                               1)
                                                              (("2"
                                                                (hide
                                                                 -11)
                                                                (("2"
                                                                  (hide
                                                                   -8)
                                                                  (("2"
                                                                    (case
                                                                     "car(trace)=car(trace1)")
                                                                    (("1"
                                                                      (expand
                                                                       "init_env"
                                                                       -3)
                                                                      (("1"
                                                                        (lift-if
                                                                         1)
                                                                        (("1"
                                                                          (split
                                                                           1)
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (flatten)
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (lemma
                                                                       "car_append[TraceState]")
                                                                      (("2"
                                                                        (inst?)
                                                                        (("1"
                                                                          (assert)
                                                                          nil
                                                                          nil)
                                                                         ("2"
                                                                          (typepred
                                                                           "trace1")
                                                                          (("2"
                                                                            (expand
                                                                             "wf_trace?"
                                                                             -1)
                                                                            (("2"
                                                                              (flatten)
                                                                              (("2"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (typepred
                                                       "trace")
                                                      (("2"
                                                        (expand
                                                         "valid_trace?")
                                                        (("2"
                                                          (lemma
                                                           "last_append[TraceState]")
                                                          (("2"
                                                            (inst?)
                                                            (("1"
                                                              (hide
                                                               -10)
                                                              (("1"
                                                                (grind)
                                                                nil
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (typepred
                                                               "trace2")
                                                              (("2"
                                                                (expand
                                                                 "wf_trace?"
                                                                 -1)
                                                                (("2"
                                                                  (flatten)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (flatten)
            (("2" (induct "i")
              (("1" (expand "DLAND" 1)
                (("1" (inst-cp -1 "0")
                  (("1" (expand "BSTAR" -2)
                    (("1" (expand "ALLRUNS_tr" -2)
                      (("1" (inst -2 "(: STATE( x!1) :)")
                        (("1" (assert)
                          (("1"
                            (case "  init_env((: STATE(x!1) :)) = x!1 ")
                            (("1" (assert)
                              (("1"
                                (split -3)
                                (("1"
                                  (lemma "DLGLOBALLY_FORALL")
                                  (("1"
                                    (expand "normDLGLOBALLY" -2)
                                    (("1"
                                      (split -2)
                                      (("1"
                                        (flatten)
                                        (("1"
                                          (lemma "DLGLOBALLY_FORALL")
                                          (("1"
                                            (inst?)
                                            (("1"
                                              (assert)
                                              (("1"
                                                (inst -1 "0")
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (case
                                                     "NOT (P(x!1) AND Q(x!1))")
                                                    (("1"
                                                      (hide 2)
                                                      (("1"
                                                        (hide -5)
                                                        (("1"
                                                          (grind)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (flatten)
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (hide -3)
                                                          (("2"
                                                            (hide
                                                             -3
                                                             -4
                                                             -5)
                                                            (("2"
                                                              (inst
                                                               -5
                                                               "1")
                                                              (("2"
                                                                (expand
                                                                 "ALLRUNS_st"
                                                                 1)
                                                                (("2"
                                                                  (skeep)
                                                                  (("2"
                                                                    (expand
                                                                     "ALLRUNS_tr"
                                                                     1)
                                                                    (("2"
                                                                      (skeep)
                                                                      (("2"
                                                                        (expand
                                                                         "ALLRUNS_tr"
                                                                         -9)
                                                                        (("2"
                                                                          (expand
                                                                           "BSTAR"
                                                                           -9)
                                                                          (("2"
                                                                            (inst
                                                                             -9
                                                                             "append( trace, trace_1)")
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (split
                                                                                 -9)
                                                                                (("1"
                                                                                  (expand
                                                                                   "normDLGLOBALLY")
                                                                                  (("1"
                                                                                    (case
                                                                                     "DLGLOBALLY(State_Trace(Q))(append(trace, trace_1))")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (case
                                                                                         "NOT DLGLOBALLY(State_Trace(Q))(trace_1)")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (lemma
                                                                                             "DLGLOBALLY_FORALL")
                                                                                            (("1"
                                                                                              (inst?)
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (lemma
                                                                                                   "DLGLOBALLY_FORALL")
                                                                                                  (("1"
                                                                                                    (hide
                                                                                                     2)
                                                                                                    (("1"
                                                                                                      (lemma
                                                                                                       "DLGLOBALLY_FORALL")
                                                                                                      (("1"
                                                                                                        (inst?)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (hide
                                                                                                             -2
                                                                                                             -3)
                                                                                                            (("1"
                                                                                                              (skeep)
                                                                                                              (("1"
                                                                                                                (hide
                                                                                                                 -5)
                                                                                                                (("1"
                                                                                                                  (lemma
                                                                                                                   "length_append[TraceState]")
                                                                                                                  (("1"
                                                                                                                    (lemma
                                                                                                                     "nth_append[TraceState]")
                                                                                                                    (("1"
                                                                                                                      (inst?
                                                                                                                       -2)
                                                                                                                      (("1"
                                                                                                                        (inst?
                                                                                                                         -1)
                                                                                                                        (("1"
                                                                                                                          (typepred
                                                                                                                           "i")
                                                                                                                          (("1"
                                                                                                                            (inst
                                                                                                                             -2
                                                                                                                             "length(trace)+i")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (inst
                                                                                                                                 -4
                                                                                                                                 "length(trace)+i")
                                                                                                                                (("1"
                                                                                                                                  (split
                                                                                                                                   -4)
                                                                                                                                  (("1"
                                                                                                                                    (flatten)
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (flatten)
                                                                                                                                    (("2"
                                                                                                                                      (assert)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("3"
                                                                                                                                    (flatten)
                                                                                                                                    (("3"
                                                                                                                                      (assert)
                                                                                                                                      (("3"
                                                                                                                                        (skeep)
                                                                                                                                        (("3"
                                                                                                                                          (inst
                                                                                                                                           -2
                                                                                                                                           "t")
                                                                                                                                          (("3"
                                                                                                                                            (assert)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("4"
                                                                                                                                    (flatten)
                                                                                                                                    (("4"
                                                                                                                                      (assert)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (split
                                                                                             1)
                                                                                            (("1"
                                                                                              (flatten)
                                                                                              (("1"
                                                                                                (split
                                                                                                 -4)
                                                                                                (("1"
                                                                                                  (flatten)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "final_env")
                                                                                                    (("1"
                                                                                                      (lemma
                                                                                                       "last_append[TraceState]")
                                                                                                      (("1"
                                                                                                        (inst?)
                                                                                                        (("1"
                                                                                                          (split
                                                                                                           1)
                                                                                                          (("1"
                                                                                                            (flatten)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (flatten)
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (split
                                                                                                           1)
                                                                                                          (("1"
                                                                                                            (flatten)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (typepred
                                                                                                                 "trace_1")
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "wf_trace?"
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (propax)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (flatten)
                                                                                                            (("2"
                                                                                                              (typepred
                                                                                                               "trace_1")
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "wf_trace?")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (expand
                                                                                                   "finite_trace?")
                                                                                                  (("2"
                                                                                                    (flatten)
                                                                                                    (("2"
                                                                                                      (lemma
                                                                                                       "last_append[TraceState]")
                                                                                                      (("2"
                                                                                                        (inst?)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (typepred
                                                                                                           "trace_1")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "wf_trace?")
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (propax)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil)
                                                                                     ("3"
                                                                                      (hide
                                                                                       2)
                                                                                      (("3"
                                                                                        (hide
                                                                                         -)
                                                                                        (("3"
                                                                                          (typepred
                                                                                           "trace"
                                                                                           "trace_1")
                                                                                          (("3"
                                                                                            (expand
                                                                                             "wf_trace?")
                                                                                            (("3"
                                                                                              (flatten)
                                                                                              (("3"
                                                                                                (split
                                                                                                 3)
                                                                                                (("1"
                                                                                                  (lemma
                                                                                                   "length_append[TraceState]")
                                                                                                  (("1"
                                                                                                    (inst?)
                                                                                                    (("1"
                                                                                                      (grind)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (lemma
                                                                                                   "car_append[TraceState]")
                                                                                                  (("2"
                                                                                                    (inst?)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (typepred
                                                                                                       "trace")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "wf_trace?")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("3"
                                                                                                  (typepred
                                                                                                   "trace")
                                                                                                  (("3"
                                                                                                    (expand
                                                                                                     "wf_trace?")
                                                                                                    (("3"
                                                                                                      (assert)
                                                                                                      (("3"
                                                                                                        (skeep)
                                                                                                        (("3"
                                                                                                          (lemma
                                                                                                           "length_append[TraceState]")
                                                                                                          (("3"
                                                                                                            (lemma
                                                                                                             "nth_append[TraceState]")
                                                                                                            (("3"
                                                                                                              (inst?
                                                                                                               -2)
                                                                                                              (("3"
                                                                                                                (inst?
                                                                                                                 -1)
                                                                                                                (("3"
                                                                                                                  (assert)
                                                                                                                  (("3"
                                                                                                                    (lift-if
                                                                                                                     -1)
                                                                                                                    (("3"
                                                                                                                      (split
                                                                                                                       -1)
                                                                                                                      (("1"
                                                                                                                        (flatten)
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (inst
                                                                                                                             -7
                                                                                                                             "i")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (assert)
                                                                                                                              (("2"
                                                                                                                                (case
                                                                                                                                 "NOT i  = length(trace)-1")
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (expand
                                                                                                                                   "finite_trace?"
                                                                                                                                   -6)
                                                                                                                                  (("2"
                                                                                                                                    (expand
                                                                                                                                     "last"
                                                                                                                                     -6)
                                                                                                                                    (("2"
                                                                                                                                      (propax)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (flatten)
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          (("2"
                                                                                                                            (inst
                                                                                                                             -9
                                                                                                                             "i-length(trace)")
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (expand
                                                                                   "init_env")
                                                                                  (("2"
                                                                                    (lemma
                                                                                     "car_append[TraceState]")
                                                                                    (("2"
                                                                                      (inst?)
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (lift-if
                                                                                           1)
                                                                                          (("1"
                                                                                            (split
                                                                                             1)
                                                                                            (("1"
                                                                                              (flatten)
                                                                                              (("1"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (flatten)
                                                                                              (("2"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (lift-if
                                                                                         1)
                                                                                        (("2"
                                                                                          (split
                                                                                           1)
                                                                                          (("1"
                                                                                            (flatten)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (typepred
                                                                                                 "trace")
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "wf_trace?")
                                                                                                  (("1"
                                                                                                    (propax)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (typepred
                                                                                               "trace")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "wf_trace?")
                                                                                                (("2"
                                                                                                  (propax)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("3"
                                                                                  (lemma
                                                                                   "trace_semantic_rel_bounded_star_seq_switch_eq")
                                                                                  (("3"
                                                                                    (inst?)
                                                                                    (("3"
                                                                                      (assert)
                                                                                      (("3"
                                                                                        (expand
                                                                                         "trace_semantic_rel"
                                                                                         1)
                                                                                        (("3"
                                                                                          (flatten)
                                                                                          (("3"
                                                                                            (replace
                                                                                             -1
                                                                                             1)
                                                                                            (("3"
                                                                                              (hide
                                                                                               -1)
                                                                                              (("3"
                                                                                                (hide
                                                                                                 2)
                                                                                                (("3"
                                                                                                  (expand
                                                                                                   "trace_semantic_rel"
                                                                                                   1)
                                                                                                  (("3"
                                                                                                    (flatten)
                                                                                                    (("3"
                                                                                                      (inst
                                                                                                       1
                                                                                                       "trace"
                                                                                                       "trace_1")
                                                                                                      (("3"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (split
                                                                                 1)
                                                                                (("1"
                                                                                  (hide
                                                                                   -3)
                                                                                  (("1"
                                                                                    (typepred
                                                                                     "trace"
                                                                                     "trace_1")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "wf_trace?")
                                                                                      (("1"
                                                                                        (flatten)
                                                                                        (("1"
                                                                                          (lemma
                                                                                           "length_append[TraceState]")
                                                                                          (("1"
                                                                                            (inst?)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (split
                                                                                                 3)
                                                                                                (("1"
                                                                                                  (grind)
                                                                                                  nil
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (lemma
                                                                                                   "car_append[TraceState]")
                                                                                                  (("2"
                                                                                                    (inst?)
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("3"
                                                                                                  (skeep)
                                                                                                  (("3"
                                                                                                    (lemma
                                                                                                     "length_append[TraceState]")
                                                                                                    (("3"
                                                                                                      (lemma
                                                                                                       "nth_append[TraceState]")
                                                                                                      (("3"
                                                                                                        (inst?
                                                                                                         -2)
                                                                                                        (("3"
                                                                                                          (inst?
                                                                                                           -1)
                                                                                                          (("3"
                                                                                                            (assert)
                                                                                                            (("3"
                                                                                                              (lift-if
                                                                                                               -1)
                                                                                                              (("3"
                                                                                                                (split
                                                                                                                 -1)
                                                                                                                (("1"
                                                                                                                  (flatten)
                                                                                                                  (("1"
                                                                                                                    (inst
                                                                                                                     -6
                                                                                                                     "i")
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (expand
                                                                                                                       "finite_trace?"
                                                                                                                       -6)
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "last")
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (flatten)
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       -8
                                                                                                                       "i-length(trace)")
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (expand
                                                                                   "valid_trace?"
                                                                                   1)
                                                                                  (("2"
                                                                                    (flatten)
                                                                                    (("2"
                                                                                      (typepred
                                                                                       "trace_1")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "valid_trace?"
                                                                                         -2)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "finite_trace?")
                                                                                          (("2"
                                                                                            (lemma
                                                                                             "last_append[TraceState]")
                                                                                            (("2"
                                                                                              (inst?)
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (flatten)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (typepred
                                                                                                 "trace_1")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "wf_trace? "
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (propax)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (flatten)
                                        (("2" (grind) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (hide-all-but 1)
                                  (("2"
                                    (grind)
                                    (("2"
                                      (expand "trace_semantic_rel" 1)
                                      (("2"
                                        (flatten)
                                        (("2" (grind) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide-all-but 1)
                              (("2" (grind) nil nil)) nil)
                             ("3" (expand "wf_trace?" 1)
                              (("3"
                                (skeep)
                                (("3"
                                  (hide -1 -2 3)
                                  (("3"
                                    (grind)
                                    (("3"
                                      (hide 2)
                                      (("3"
                                        (typepred "i")
                                        (("3"
                                          (expand "length" -1)
                                          (("3"
                                            (expand "length" -1)
                                            (("3" (grind) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (hide 2)
                          (("2" (expand "wf_trace?" 1)
                            (("2" (split 1)
                              (("1"
                                (skeep)
                                (("1"
                                  (typepred "i")
                                  (("1"
                                    (expand "length" -1)
                                    (("1"
                                      (expand "length" -1)
                                      (("1" (grind) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (expand "valid_trace?" 1)
                                (("2" (grind) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (skeep)
                (("2" (expand "DLAND" 1)
                  (("2" (expand "DLAND" -1)
                    (("2" (flatten)
                      (("2" (assert)
                        (("2" (expand "ALLRUNS_st" 1)
                          (("2" (skeep)
                            (("2" (expand "ALLRUNS_st" -3)
                              (("2"
                                (expand "BSTAR" -5)
                                (("2"
                                  (expand "trace_semantic_rel" -5)
                                  (("2"
                                    (case
                                     " trace_semantic_rel(BSTAR(A, j))(trace)")
                                    (("1"
                                      (inst -4 "trace")
                                      (("1" (assert) nil nil))
                                      nil)
                                     ("2"
                                      (assert)
                                      (("2"
                                        (lemma
                                         "trace_semantic_rel_bounded_star_seq_switch_eq")
                                        (("2"
                                          (inst?)
                                          (("2"
                                            (replace -1 -6)
                                            (("2"
                                              (hide -1)
                                              (("2"
                                                (inst -6 "j+2")
                                                (("2"
                                                  (expand
                                                   "ALLRUNS_tr"
                                                   -6)
                                                  (("2"
                                                    (expand
                                                     "ALLRUNS_tr"
                                                     2
                                                     1)
                                                    (("2"
                                                      (skeep)
                                                      (("2"
                                                        (inst
                                                         -8
                                                         "append(trace,trace_1)")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (name
                                                             "tracep"
                                                             "append(trace,trace_1)")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (split
                                                                 -9)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (hide
                                                                     1)
                                                                    (("1"
                                                                      (hide
                                                                       -5)
                                                                      (("1"
                                                                        (expand
                                                                         "normDLGLOBALLY")
                                                                        (("1"
                                                                          (case
                                                                           " DLGLOBALLY(State_Trace(Q))(append(trace, trace_1))")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (case
                                                                               "NOT DLGLOBALLY(State_Trace(Q))(trace_1)")
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (lemma
                                                                                   "DLGLOBALLY_FORALL")
                                                                                  (("1"
                                                                                    (inst?)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (hide
                                                                                         2)
                                                                                        (("1"
                                                                                          (lemma
                                                                                           "DLGLOBALLY_FORALL")
                                                                                          (("1"
                                                                                            (inst?)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (hide
                                                                                                 -2)
                                                                                                (("1"
                                                                                                  (skeep)
                                                                                                  (("1"
                                                                                                    (lemma
                                                                                                     "length_append[TraceState]")
                                                                                                    (("1"
                                                                                                      (lemma
                                                                                                       "nth_append[TraceState]")
                                                                                                      (("1"
                                                                                                        (inst?
                                                                                                         -2)
                                                                                                        (("1"
                                                                                                          (inst?
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               -1
                                                                                                               "i+length(trace)")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (inst
                                                                                                                   -3
                                                                                                                   "length(trace)+i")
                                                                                                                  (("1"
                                                                                                                    (split
                                                                                                                     -3)
                                                                                                                    (("1"
                                                                                                                      (flatten)
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (flatten)
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("3"
                                                                                                                      (flatten)
                                                                                                                      (("3"
                                                                                                                        (assert)
                                                                                                                        (("3"
                                                                                                                          (skeep)
                                                                                                                          (("3"
                                                                                                                            (inst
                                                                                                                             -2
                                                                                                                             "t")
                                                                                                                            (("3"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("4"
                                                                                                                      (flatten)
                                                                                                                      (("4"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (split
                                                                                   1)
                                                                                  (("1"
                                                                                    (flatten)
                                                                                    (("1"
                                                                                      (split
                                                                                       -4)
                                                                                      (("1"
                                                                                        (flatten)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "final_env")
                                                                                          (("1"
                                                                                            (lemma
                                                                                             "last_append[TraceState]")
                                                                                            (("1"
                                                                                              (inst?)
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (split
                                                                                                   1)
                                                                                                  (("1"
                                                                                                    (flatten)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (flatten)
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (split)
                                                                                                  (("1"
                                                                                                    (flatten)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (typepred
                                                                                                         "trace_1")
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "wf_trace?"
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (propax)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (flatten)
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (typepred
                                                                                                         "trace_1")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "wf_trace?"
                                                                                                           -1)
                                                                                                          (("2"
                                                                                                            (propax)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (expand
                                                                                         "finite_trace?")
                                                                                        (("2"
                                                                                          (lemma
                                                                                           "last_append[TraceState]")
                                                                                          (("2"
                                                                                            (inst?)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (flatten)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (typepred
                                                                                               "trace_1")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "wf_trace?")
                                                                                                (("2"
                                                                                                  (flatten)
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (propax)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (assert)
                                                                            nil
                                                                            nil)
                                                                           ("3"
                                                                            (hide
                                                                             2)
                                                                            (("3"
                                                                              (expand
                                                                               "wf_trace?"
                                                                               1)
                                                                              (("3"
                                                                                (typepred
                                                                                 "trace"
                                                                                 "trace_1")
                                                                                (("3"
                                                                                  (lemma
                                                                                   "length_append[TraceState]")
                                                                                  (("3"
                                                                                    (lemma
                                                                                     "nth_append[TraceState]")
                                                                                    (("3"
                                                                                      (inst?
                                                                                       -2)
                                                                                      (("3"
                                                                                        (inst?
                                                                                         -1)
                                                                                        (("3"
                                                                                          (split
                                                                                           1)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "wf_trace?")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (typepred
                                                                                                 "trace_1"
                                                                                                 "trace")
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "wf_trace? ")
                                                                                                  (("1"
                                                                                                    (flatten)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (grind)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (typepred
                                                                                             "trace_1"
                                                                                             "trace")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "wf_trace?")
                                                                                              (("2"
                                                                                                (flatten)
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (lemma
                                                                                                     "car_append[TraceState]")
                                                                                                    (("2"
                                                                                                      (inst?)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("3"
                                                                                            (skeep)
                                                                                            (("3"
                                                                                              (inst
                                                                                               -1
                                                                                               "i")
                                                                                              (("3"
                                                                                                (assert)
                                                                                                (("3"
                                                                                                  (lift-if
                                                                                                   -1)
                                                                                                  (("3"
                                                                                                    (split
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (flatten)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "wf_trace?")
                                                                                                        (("1"
                                                                                                          (flatten)
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             -5
                                                                                                             "i")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (expand
                                                                                                               "valid_trace?"
                                                                                                               -8)
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "last")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "finite_trace?"
                                                                                                                     -5)
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "last")
                                                                                                                      (("2"
                                                                                                                        (propax)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (flatten)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "wf_trace?")
                                                                                                        (("2"
                                                                                                          (flatten)
                                                                                                          (("2"
                                                                                                            (inst
                                                                                                             -7
                                                                                                             "i-length(trace)")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (expand
                                                                   "init_env")
                                                                  (("2"
                                                                    (lemma
                                                                     "car_append[TraceState]")
                                                                    (("2"
                                                                      (inst?)
                                                                      (("1"
                                                                        (lift-if
                                                                         1)
                                                                        (("1"
                                                                          (split
                                                                           1)
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (flatten)
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (typepred
                                                                         "trace")
                                                                        (("2"
                                                                          (expand
                                                                           "wf_trace?")
                                                                          (("2"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("3"
                                                                  (hide
                                                                   2)
                                                                  (("3"
                                                                    (expand
                                                                     "BSTAR"
                                                                     1)
                                                                    (("3"
                                                                      (expand
                                                                       "trace_semantic_rel"
                                                                       1
                                                                       1)
                                                                      (("3"
                                                                        (flatten)
                                                                        (("3"
                                                                          (lemma
                                                                           "trace_semantic_rel_bounded_star_seq_switch_eq")
                                                                          (("3"
                                                                            (inst?)
                                                                            (("3"
                                                                              (replace
                                                                               -1)
                                                                              (("3"
                                                                                (hide
                                                                                 -1)
                                                                                (("3"
                                                                                  (expand
                                                                                   "trace_semantic_rel"
                                                                                   1)
                                                                                  (("3"
                                                                                    (flatten)
                                                                                    (("3"
                                                                                      (typepred
                                                                                       "trace")
                                                                                      (("3"
                                                                                        (inst
                                                                                         1
                                                                                         "trace"
                                                                                         "trace_1")
                                                                                        (("3"
                                                                                          (assert)
                                                                                          (("3"
                                                                                            (hide
                                                                                             2)
                                                                                            (("3"
                                                                                              (expand
                                                                                               "BSTAR"
                                                                                               1)
                                                                                              (("3"
                                                                                                (expand
                                                                                                 "trace_semantic_rel"
                                                                                                 1)
                                                                                                (("3"
                                                                                                  (propax)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (split 1)
                                                          (("1"
                                                            (hide -3)
                                                            (("1"
                                                              (hide
                                                               2
                                                               3)
                                                              (("1"
                                                                (typepred
                                                                 "trace"
                                                                 "trace_1")
                                                                (("1"
                                                                  (expand
                                                                   "wf_trace?")
                                                                  (("1"
                                                                    (flatten)
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (split
                                                                         3)
                                                                        (("1"
                                                                          (lemma
                                                                           "length_append[TraceState]")
                                                                          (("1"
                                                                            (inst?)
                                                                            (("1"
                                                                              (grind)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (lemma
                                                                             "car_append[TraceState]")
                                                                            (("2"
                                                                              (inst?)
                                                                              (("2"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("3"
                                                                          (assert)
                                                                          (("3"
                                                                            (skeep)
                                                                            (("3"
                                                                              (lemma
                                                                               "length_append[TraceState]")
                                                                              (("3"
                                                                                (lemma
                                                                                 "nth_append[TraceState]")
                                                                                (("3"
                                                                                  (inst?
                                                                                   -2)
                                                                                  (("3"
                                                                                    (inst?
                                                                                     -1)
                                                                                    (("3"
                                                                                      (assert)
                                                                                      (("3"
                                                                                        (typepred
                                                                                         "i")
                                                                                        (("3"
                                                                                          (lift-if
                                                                                           -2)
                                                                                          (("3"
                                                                                            (split
                                                                                             -2)
                                                                                            (("1"
                                                                                              (flatten)
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -6
                                                                                                 "i")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "finite_trace?"
                                                                                                     -6)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "last")
                                                                                                      (("2"
                                                                                                        (propax)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (flatten)
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -8
                                                                                                   "i-length(trace)")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (expand
                                                             "valid_trace?"
                                                             1)
                                                            (("2"
                                                              (flatten)
                                                              (("2"
                                                                (expand
                                                                 "finite_trace?"
                                                                 1)
                                                                (("2"
                                                                  (lemma
                                                                   "last_append[TraceState]")
                                                                  (("2"
                                                                    (inst?)
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (typepred
                                                                         "trace_1")
                                                                        (("1"
                                                                          (expand
                                                                           "valid_trace?"
                                                                           -2)
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (expand
                                                                               "finite_trace?"
                                                                               -2)
                                                                              (("1"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (typepred
                                                                       "trace_1")
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (typepred
                                                                           "trace_1")
                                                                          (("2"
                                                                            (expand
                                                                             "wf_trace?")
                                                                            (("2"
                                                                              (propax)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((Environment type-eq-decl nil hp_def nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (DLAND const-decl "bool" bool_expr nil)
    (HP type-decl nil HP_adt nil)
    (ALLRUNS_st const-decl "bool" ltl_expr nil)
    (BSTAR def-decl "HP" bounded_star_semantics nil)
    (TraceState type-decl nil TraceState_adt nil)
    (list type-decl nil list_adt nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (ALLRUNS_tr const-decl "bool" ltl_expr nil)
    (normDLGLOBALLY const-decl "bool" ltl_expr nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (pred type-eq-decl nil defined_types nil)
    (nat_induction formula-decl nil naturalnumbers nil)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil)
    (DLGLOBALLY const-decl "bool" ltl_expr nil)
    (State_Trace const-decl "bool" ltl_expr nil)
    (valid_trace? const-decl "bool" trace_semantics nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (init_env const-decl "Environment" trace_semantics nil)
    (DLBOOL const-decl "bool" bool_expr nil)
    (final_env const-decl "Environment" trace_semantics nil)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (last const-decl "T" more_list_props structures)
    (nth def-decl "T" list_props nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (DLGLOBALLY_FORALL formula-decl nil ltl_expr nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (below type-eq-decl nil naturalnumbers nil)
    (length def-decl "nat" list_props nil)
    (< const-decl "bool" reals nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (car_append formula-decl nil more_list_props structures)
    (car adt-accessor-decl "[(cons?) -> T]" list_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (nth_append formula-decl nil more_list_props structures)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (max_ci const-decl "{rr: (d) | FORALL (x: (d)): x <= rr}"
            more_ci_props ODEs)
    (below type-eq-decl nil nat_types nil)
    (D adt-accessor-decl "[(state_diff?) ->
   {D: (dd?) | EXISTS (b: posreal): D = closed_interval(0, b)}]"
     TraceState_adt nil)
    (closed_interval const-decl "(closed_interval?(a, b))" interval_def
     ODEs)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (dd? const-decl "bool" hp_expr nil)
    (state_diff? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (length_append formula-decl nil list_props nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (last_append formula-decl nil more_list_props structures)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (trace_semantic_rel_bounded_star_seq_switch_eq formula-decl nil
     trace_bounded_star_semantics nil)
    (length_singleton formula-decl nil more_list_props structures)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (append def-decl "list[T]" list_props nil)
    (STATE adt-constructor-decl "[Environment -> (state?)]"
     TraceState_adt nil)
    (state? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   shostak))
 (dltl_STARcap_temp 0
  (dltl_STARcap_temp-1 nil 3902048227
   ("" (skeep)
    (("" (lemma "dltl_BSTARcap_temp")
      (("" (inst?)
        (("" (assert)
          (("" (decompose-equality -1)
            (("" (decompose-equality 1)
              (("" (inst -1 "x!1")
                (("" (iff)
                  (("" (flatten)
                    (("" (split 1)
                      (("1" (flatten)
                        (("1" (expand "DLAND" -1)
                          (("1" (flatten)
                            (("1" (lemma "allruns_st_star")
                              (("1"
                                (inst?)
                                (("1"
                                  (assert)
                                  (("1"
                                    (lemma "allruns_tr_star")
                                    (("1"
                                      (inst?)
                                      (("1"
                                        (assert)
                                        (("1"
                                          (hide 2)
                                          (("1"
                                            (skeep)
                                            (("1"
                                              (split -5)
                                              (("1"
                                                (inst -1 "i")
                                                nil
                                                nil)
                                               ("2"
                                                (skeep)
                                                (("2"
                                                  (inst -1 "i!1")
                                                  (("2"
                                                    (expand "DLAND" 1)
                                                    (("2"
                                                      (propax)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (flatten)
                        (("2" (expand "DLAND" 1)
                          (("2" (lemma "allruns_st_star")
                            (("2" (inst?)
                              (("2"
                                (assert)
                                (("2"
                                  (split -4)
                                  (("1"
                                    (inst-cp -1 "0")
                                    (("1"
                                      (expand "DLAND" -2)
                                      (("1"
                                        (flatten)
                                        (("1"
                                          (assert)
                                          (("1"
                                            (assert)
                                            (("1"
                                              (skeep)
                                              (("1"
                                                (inst -1 "i")
                                                (("1"
                                                  (expand "DLAND" -1)
                                                  (("1"
                                                    (propax)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (assert)
                                    (("2"
                                      (hide 2)
                                      (("2"
                                        (flatten)
                                        (("2"
                                          (lemma "allruns_tr_star")
                                          (("2"
                                            (inst?)
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((dltl_BSTARcap_temp formula-decl nil tl_star_lems nil)
    (STAR adt-constructor-decl "[HP -> (star?)]" HP_adt nil)
    (star? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (allruns_st_star formula-decl nil trace_bounded_star_semantics nil)
    (allruns_tr_star formula-decl nil trace_bounded_star_semantics nil)
    (normDLGLOBALLY const-decl "bool" ltl_expr nil)
    (ALLRUNS_tr const-decl "bool" ltl_expr nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (list type-decl nil list_adt nil)
    (TraceState type-decl nil TraceState_adt nil)
    (BSTAR def-decl "HP" bounded_star_semantics nil)
    (ALLRUNS_st const-decl "bool" ltl_expr nil)
    (DLAND const-decl "bool" bool_expr nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (Environment type-eq-decl nil hp_def nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (HP type-decl nil HP_adt nil))
   shostak))
 (dltl_BSTAREG_dual 0
  (dltl_BSTAREG_dual-1 nil 3902156388
   ("" (skeep)
    (("" (decompose-equality 1)
      (("" (iff)
        (("" (split 1)
          (("1" (flatten)
            (("1" (skeep)
              (("1" (expand "DLOR" -1)
                (("1" (split -1)
                  (("1" (inst 1 "0")
                    (("1" (expand "BSTAR" 1)
                      (("1" (expand "SOMERUNS_tr")
                        (("1" (inst 1 "(:STATE( x!1 ) :)")
                          (("1" (grind)
                            (("1" (expand "trace_semantic_rel" 1)
                              (("1" (grind) nil nil)) nil))
                            nil)
                           ("2" (grind) nil nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (inst 1 "i+1")
                    (("2" (expand "SOMERUNS_tr")
                      (("2" (expand "SOMERUNS_st")
                        (("2" (skeep*)
                          (("2" (inst 1 "append(trace_1,trace)")
                            (("1" (assert)
                              (("1"
                                (split 1)
                                (("1"
                                  (expand "init_env")
                                  (("1"
                                    (lemma "car_append[TraceState]")
                                    (("1"
                                      (inst?)
                                      (("1"
                                        (assert)
                                        (("1"
                                          (lift-if -2)
                                          (("1"
                                            (lift-if 1)
                                            (("1"
                                              (split 1)
                                              (("1"
                                                (flatten)
                                                (("1"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil)
                                               ("2"
                                                (flatten)
                                                (("2"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (typepred "trace_1")
                                        (("2"
                                          (expand "wf_trace?" -1)
                                          (("2"
                                            (flatten)
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (expand "BSTAR" 1)
                                  (("2"
                                    (expand "trace_semantic_rel" 1)
                                    (("2"
                                      (flatten)
                                      (("2"
                                        (lemma
                                         "trace_semantic_rel_bounded_star_seq_switch_eq")
                                        (("2"
                                          (inst?)
                                          (("2"
                                            (replace -1)
                                            (("2"
                                              (hide -1)
                                              (("2"
                                                (hide 2)
                                                (("2"
                                                  (expand
                                                   "trace_semantic_rel"
                                                   1)
                                                  (("2"
                                                    (flatten)
                                                    (("2"
                                                      (inst
                                                       1
                                                       "trace_1"
                                                       "trace")
                                                      (("2"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("3"
                                  (expand "normDLEG")
                                  (("3"
                                    (split 1)
                                    (("1"
                                      (flatten)
                                      (("1"
                                        (split -6)
                                        (("1"
                                          (flatten)
                                          (("1"
                                            (expand "final_env")
                                            (("1"
                                              (lemma
                                               "last_append[TraceState]")
                                              (("1"
                                                (inst?)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (split 1)
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (flatten)
                                                      (("2"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (typepred "trace")
                                                  (("2"
                                                    (expand
                                                     "wf_trace?"
                                                     -1)
                                                    (("2"
                                                      (flatten)
                                                      (("2"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (flatten)
                                          (("2"
                                            (assert)
                                            (("2"
                                              (expand "finite_trace?")
                                              (("2"
                                                (lemma
                                                 "last_append[TraceState]")
                                                (("2"
                                                  (inst?)
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (flatten)
                                                      (("2"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (flatten)
                                      (("2"
                                        (split -5)
                                        (("1"
                                          (flatten)
                                          (("1"
                                            (expand "finite_trace?")
                                            (("1"
                                              (lemma
                                               "last_append[TraceState]")
                                              (("1"
                                                (inst?)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (flatten)
                                                    (("1"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (flatten)
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (typepred
                                                       "trace")
                                                      (("2"
                                                        (expand
                                                         "wf_trace?")
                                                        (("2"
                                                          (propax)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (assert)
                                          (("2"
                                            (flatten)
                                            (("2"
                                              (rewrite "DLEG_nth")
                                              (("2"
                                                (rewrite "DLEG_nth")
                                                (("2"
                                                  (skeep)
                                                  (("2"
                                                    (typepred "j")
                                                    (("2"
                                                      (inst
                                                       4
                                                       "length(trace_1)+j")
                                                      (("1"
                                                        (split)
                                                        (("1"
                                                          (lemma
                                                           "length_append[TraceState]")
                                                          (("1"
                                                            (inst?)
                                                            (("1"
                                                              (lemma
                                                               "nth_append[TraceState]")
                                                              (("1"
                                                                (inst?)
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (assert)
                                                          (("2"
                                                            (skeep)
                                                            (("2"
                                                              (split 3)
                                                              (("1"
                                                                (flatten)
                                                                (("1"
                                                                  (typepred
                                                                   "i!1")
                                                                  (("1"
                                                                    (lemma
                                                                     "length_append[TraceState]")
                                                                    (("1"
                                                                      (inst?)
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (lemma
                                                                           "nth_append[TraceState]")
                                                                          (("1"
                                                                            (inst
                                                                             -6
                                                                             "i!1")
                                                                            (("1"
                                                                              (inst?)
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (split
                                                                                   -6)
                                                                                  (("1"
                                                                                    (grind)
                                                                                    nil
                                                                                    nil)
                                                                                   ("2"
                                                                                    (flatten)
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (skeep)
                                                                                        (("2"
                                                                                          (inst
                                                                                           1
                                                                                           "T")
                                                                                          (("2"
                                                                                            (skeep)
                                                                                            (("2"
                                                                                              (inst
                                                                                               -2
                                                                                               "t")
                                                                                              (("2"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("3"
                                                                                    (flatten)
                                                                                    (("3"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (flatten)
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (lemma
                                                                     "length_append[TraceState]")
                                                                    (("2"
                                                                      (lemma
                                                                       "nth_append[TraceState]")
                                                                      (("2"
                                                                        (inst?
                                                                         -2)
                                                                        (("2"
                                                                          (inst
                                                                           -4
                                                                           "i!1")
                                                                          (("1"
                                                                            (inst?
                                                                             -1)
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (split
                                                                                 -4)
                                                                                (("1"
                                                                                  (flatten)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (flatten)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil)
                                                                                 ("3"
                                                                                  (flatten)
                                                                                  (("3"
                                                                                    (assert)
                                                                                    (("3"
                                                                                      (skeep)
                                                                                      (("3"
                                                                                        (inst
                                                                                         -2
                                                                                         "t")
                                                                                        (("3"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("4"
                                                                                  (flatten)
                                                                                  (("4"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (assert)
                                                        (("2"
                                                          (lemma
                                                           "length_append[TraceState]")
                                                          (("2"
                                                            (inst?)
                                                            (("2"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (typepred "trace_1" "trace")
                              (("2"
                                (split 1)
                                (("1"
                                  (expand "wf_trace?")
                                  (("1"
                                    (lemma "length_append[TraceState]")
                                    (("1"
                                      (inst?)
                                      (("1"
                                        (lemma
                                         "nth_append[TraceState]")
                                        (("1"
                                          (split 1)
                                          (("1"
                                            (flatten)
                                            (("1"
                                              (assert)
                                              (("1" (grind) nil nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (flatten)
                                            (("2"
                                              (lemma
                                               "car_append[TraceState]")
                                              (("2"
                                                (inst?)
                                                (("1" (assert) nil nil)
                                                 ("2"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("3"
                                            (skeep)
                                            (("3"
                                              (inst
                                               -1
                                               "trace_1"
                                               "trace"
                                               "i!1")
                                              (("3"
                                                (assert)
                                                (("3"
                                                  (lift-if -1)
                                                  (("3"
                                                    (split -1)
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (inst -5 "i!1")
                                                        (("1"
                                                          (assert)
                                                          nil
                                                          nil)
                                                         ("2"
                                                          (expand
                                                           "valid_trace?"
                                                           -8)
                                                          (("2"
                                                            (typepred
                                                             "trace_1")
                                                            (("2"
                                                              (expand
                                                               "finite_trace?"
                                                               -2)
                                                              (("2"
                                                                (lemma
                                                                 "last_append[TraceState]")
                                                                (("2"
                                                                  (inst?)
                                                                  (("2"
                                                                    (expand
                                                                     "last")
                                                                    (("2"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (flatten)
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (inst
                                                           -7
                                                           "i!1-length(trace_1)")
                                                          (("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (expand "valid_trace?")
                                  (("2"
                                    (flatten)
                                    (("2"
                                      (lemma "last_append[TraceState]")
                                      (("2"
                                        (inst?)
                                        (("1"
                                          (assert)
                                          (("1"
                                            (expand "finite_trace?")
                                            (("1"
                                              (flatten)
                                              (("1" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (expand "wf_trace?")
                                          (("2"
                                            (flatten)
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (flatten)
            (("2" (skeep)
              (("2" (case "i=0")
                (("1" (inst 1 "0")
                  (("1" (expand "DLOR" 1)
                    (("1" (flatten)
                      (("1" (hide 2)
                        (("1" (expand "BSTAR" -2)
                          (("1" (expand "SOMERUNS_tr" -2)
                            (("1" (skeep)
                              (("1"
                                (assert)
                                (("1"
                                  (expand "trace_semantic_rel" -3)
                                  (("1"
                                    (split -3)
                                    (("1" (grind) nil nil)
                                     ("2"
                                      (flatten)
                                      (("2" (grind) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2"
                  (name "Ilo"
                        "min[nat](LAMBDA(i:nat): SOMERUNS_tr(BSTAR(A, i), normDLEG(P, Q))(x!1))")
                  (("1" (case "Ilo=0")
                    (("1" (inst 2 "0")
                      (("1" (typepred "Ilo")
                        (("1" (expand "DLOR" 2)
                          (("1" (replace -3)
                            (("1" (expand "BSTAR" -1)
                              (("1"
                                (hide -5 -2)
                                (("1"
                                  (flatten)
                                  (("1"
                                    (hide 3)
                                    (("1"
                                      (hide -3)
                                      (("1"
                                        (expand "SOMERUNS_tr" -1)
                                        (("1"
                                          (skeep)
                                          (("1"
                                            (expand
                                             "trace_semantic_rel"
                                             -2)
                                            (("1"
                                              (split -2)
                                              (("1" (grind) nil nil)
                                               ("2"
                                                (flatten)
                                                (("2" (grind) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (inst 3 "Ilo-1")
                      (("1" (expand "DLOR")
                        (("1" (hide -2)
                          (("1" (typepred "Ilo")
                            (("1" (flatten)
                              (("1"
                                (expand "SOMERUNS_st" 4)
                                (("1"
                                  (expand "SOMERUNS_tr" -1)
                                  (("1"
                                    (skeep)
                                    (("1"
                                      (expand "BSTAR" -2)
                                      (("1"
                                        (split -2)
                                        (("1" (flatten) nil nil)
                                         ("2"
                                          (flatten)
                                          (("2"
                                            (assert)
                                            (("2"
                                              (expand
                                               "trace_semantic_rel"
                                               -1)
                                              (("2"
                                                (split -1)
                                                (("1"
                                                  (hide -4)
                                                  (("1"
                                                    (lemma
                                                     "trace_semantic_rel_bounded_star_seq_switch_eq")
                                                    (("1"
                                                      (inst?)
                                                      (("1"
                                                        (replace -1)
                                                        (("1"
                                                          (hide -1)
                                                          (("1"
                                                            (expand
                                                             "trace_semantic_rel"
                                                             -1)
                                                            (("1"
                                                              (split
                                                               -1)
                                                              (("1"
                                                                (skeep)
                                                                (("1"
                                                                  (inst
                                                                   5
                                                                   "trace1")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (split
                                                                       5)
                                                                      (("1"
                                                                        (expand
                                                                         "init_env")
                                                                        (("1"
                                                                          (lemma
                                                                           "car_append[TraceState]")
                                                                          (("1"
                                                                            (inst?)
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (lift-if
                                                                                 1)
                                                                                (("1"
                                                                                  (split
                                                                                   1)
                                                                                  (("1"
                                                                                    (flatten)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (flatten)
                                                                                    (("2"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (typepred
                                                                               "trace1")
                                                                              (("2"
                                                                                (expand
                                                                                 "wf_trace?"
                                                                                 -1)
                                                                                (("2"
                                                                                  (flatten)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (expand
                                                                           "SOMERUNS_tr"
                                                                           1)
                                                                          (("2"
                                                                            (inst
                                                                             1
                                                                             "trace2")
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (hide
                                                                                 -8)
                                                                                (("1"
                                                                                  (expand
                                                                                   "normDLEG")
                                                                                  (("1"
                                                                                    (split
                                                                                     1)
                                                                                    (("1"
                                                                                      (flatten)
                                                                                      (("1"
                                                                                        (split
                                                                                         -8)
                                                                                        (("1"
                                                                                          (flatten)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "final_env")
                                                                                              (("1"
                                                                                                (lemma
                                                                                                 "last_append[TraceState]")
                                                                                                (("1"
                                                                                                  (inst?)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (split
                                                                                                       1)
                                                                                                      (("1"
                                                                                                        (flatten)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (flatten)
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (typepred
                                                                                                     "trace2")
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "wf_trace?"
                                                                                                       -1)
                                                                                                      (("2"
                                                                                                        (flatten)
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (flatten)
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "finite_trace?")
                                                                                              (("2"
                                                                                                (flatten)
                                                                                                (("2"
                                                                                                  (lemma
                                                                                                   "last_append[TraceState]")
                                                                                                  (("2"
                                                                                                    (inst?)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (typepred
                                                                                                       "trace2")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "wf_trace?"
                                                                                                         -1)
                                                                                                        (("2"
                                                                                                          (flatten)
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (flatten)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (split
                                                                                           -7)
                                                                                          (("1"
                                                                                            (flatten)
                                                                                            (("1"
                                                                                              (lemma
                                                                                               "last_append[TraceState]")
                                                                                              (("1"
                                                                                                (inst?)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "finite_trace?")
                                                                                                  (("1"
                                                                                                    (flatten)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (typepred
                                                                                                     "trace2")
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "wf_trace?"
                                                                                                       -1)
                                                                                                      (("2"
                                                                                                        (propax)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (flatten)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (hide
                                                                                                 1
                                                                                                 2)
                                                                                                (("2"
                                                                                                  (lemma
                                                                                                   "DLEG_nth")
                                                                                                  (("2"
                                                                                                    (inst?)
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (hide
                                                                                                         -2)
                                                                                                        (("2"
                                                                                                          (rewrite
                                                                                                           "DLEG_nth")
                                                                                                          (("2"
                                                                                                            (skeep)
                                                                                                            (("2"
                                                                                                              (typepred
                                                                                                               "j")
                                                                                                              (("2"
                                                                                                                (lemma
                                                                                                                 "length_append[TraceState]")
                                                                                                                (("2"
                                                                                                                  (inst?)
                                                                                                                  (("2"
                                                                                                                    (lemma
                                                                                                                     "nth_append[TraceState]")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (inst?
                                                                                                                         -1)
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          (("2"
                                                                                                                            (inst
                                                                                                                             -1
                                                                                                                             "j")
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              (("2"
                                                                                                                                (lift-if
                                                                                                                                 -1)
                                                                                                                                (("2"
                                                                                                                                  (split
                                                                                                                                   -1)
                                                                                                                                  (("1"
                                                                                                                                    (flatten)
                                                                                                                                    (("1"
                                                                                                                                      (inst
                                                                                                                                       2
                                                                                                                                       "0")
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        (("1"
                                                                                                                                          (split
                                                                                                                                           2)
                                                                                                                                          (("1"
                                                                                                                                            (typepred
                                                                                                                                             "trace2")
                                                                                                                                            (("1"
                                                                                                                                              (expand
                                                                                                                                               "wf_trace?"
                                                                                                                                               -1)
                                                                                                                                              (("1"
                                                                                                                                                (flatten)
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  (("1"
                                                                                                                                                    (inst
                                                                                                                                                     -2
                                                                                                                                                     "0")
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      nil
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (typepred
                                                                                                                                                       "trace2")
                                                                                                                                                      (("2"
                                                                                                                                                        (expand
                                                                                                                                                         "length"
                                                                                                                                                         1
                                                                                                                                                         1)
                                                                                                                                                        (("2"
                                                                                                                                                          (assert)
                                                                                                                                                          (("2"
                                                                                                                                                            (expand
                                                                                                                                                             "wf_trace?"
                                                                                                                                                             -1)
                                                                                                                                                            (("2"
                                                                                                                                                              (expand
                                                                                                                                                               "nth"
                                                                                                                                                               -)
                                                                                                                                                              (("2"
                                                                                                                                                                (propax)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (assert)
                                                                                                                                            (("2"
                                                                                                                                              (skeep)
                                                                                                                                              (("2"
                                                                                                                                                (assert)
                                                                                                                                                (("2"
                                                                                                                                                  (inst
                                                                                                                                                   -5
                                                                                                                                                   "i!1+length(trace1)-j")
                                                                                                                                                  (("2"
                                                                                                                                                    (assert)
                                                                                                                                                    (("2"
                                                                                                                                                      (lemma
                                                                                                                                                       "nth_append[TraceState]")
                                                                                                                                                      (("2"
                                                                                                                                                        (inst
                                                                                                                                                         -1
                                                                                                                                                         "trace1"
                                                                                                                                                         "trace2"
                                                                                                                                                         "length(trace1)+i!1")
                                                                                                                                                        (("2"
                                                                                                                                                          (assert)
                                                                                                                                                          (("2"
                                                                                                                                                            (split
                                                                                                                                                             -6)
                                                                                                                                                            (("1"
                                                                                                                                                              (flatten)
                                                                                                                                                              (("1"
                                                                                                                                                                (assert)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (flatten)
                                                                                                                                                              (("2"
                                                                                                                                                                (assert)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("3"
                                                                                                                                                              (flatten)
                                                                                                                                                              (("3"
                                                                                                                                                                (assert)
                                                                                                                                                                (("3"
                                                                                                                                                                  (case
                                                                                                                                                                   "i!1=0")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (inst
                                                                                                                                                                       3
                                                                                                                                                                       "0")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (skeep)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (inst
                                                                                                                                                                           -3
                                                                                                                                                                           "t")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil)
                                                                                                                                                                       ("2"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (typepred
                                                                                                                                                                           " D(nth[TraceState](trace2, i!1))")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (expand
                                                                                                                                                                             "dd?"
                                                                                                                                                                             -1)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (hide
                                                                                                                                                                               -1)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (skeep)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (replace
                                                                                                                                                                                   -1)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (hide-all-but
                                                                                                                                                                                     1)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (grind)
                                                                                                                                                                                      nil
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (skeep)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (inst
                                                                                                                                                                         -2
                                                                                                                                                                         "t")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (assert)
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("4"
                                                                                                                                                              (flatten)
                                                                                                                                                              (("4"
                                                                                                                                                                (assert)
                                                                                                                                                                (("4"
                                                                                                                                                                  (split
                                                                                                                                                                   3)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (flatten)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (inst
                                                                                                                                                                         1
                                                                                                                                                                         "0")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (skeep)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (inst
                                                                                                                                                                             -3
                                                                                                                                                                             "t")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (assert)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil)
                                                                                                                                                                         ("2"
                                                                                                                                                                          (expand
                                                                                                                                                                           "hp"
                                                                                                                                                                           1)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (assert)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (flatten)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (skeep)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (inst
                                                                                                                                                                         -2
                                                                                                                                                                         "t")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (assert)
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (typepred
                                                                                                                                         "trace2")
                                                                                                                                        (("2"
                                                                                                                                          (expand
                                                                                                                                           "wf_trace?"
                                                                                                                                           -1)
                                                                                                                                          (("2"
                                                                                                                                            (flatten)
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              (("2"
                                                                                                                                                (expand
                                                                                                                                                 "length"
                                                                                                                                                 2)
                                                                                                                                                (("2"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (flatten)
                                                                                                                                    (("2"
                                                                                                                                      (assert)
                                                                                                                                      (("2"
                                                                                                                                        (inst
                                                                                                                                         3
                                                                                                                                         "j-length(trace1)")
                                                                                                                                        (("2"
                                                                                                                                          (assert)
                                                                                                                                          (("2"
                                                                                                                                            (skeep)
                                                                                                                                            (("2"
                                                                                                                                              (typepred
                                                                                                                                               "i!1")
                                                                                                                                              (("2"
                                                                                                                                                (typepred
                                                                                                                                                 "i!1")
                                                                                                                                                (("2"
                                                                                                                                                  (lemma
                                                                                                                                                   "nth_append[TraceState]")
                                                                                                                                                  (("2"
                                                                                                                                                    (inst
                                                                                                                                                     -1
                                                                                                                                                     "trace1"
                                                                                                                                                     "trace2"
                                                                                                                                                     "_")
                                                                                                                                                    (("2"
                                                                                                                                                      (inst
                                                                                                                                                       -1
                                                                                                                                                       "i!1+j")
                                                                                                                                                      (("2"
                                                                                                                                                        (assert)
                                                                                                                                                        (("2"
                                                                                                                                                          (inst
                                                                                                                                                           -7
                                                                                                                                                           "i!1")
                                                                                                                                                          (("2"
                                                                                                                                                            (split
                                                                                                                                                             -7)
                                                                                                                                                            (("1"
                                                                                                                                                              (flatten)
                                                                                                                                                              (("1"
                                                                                                                                                                (assert)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (flatten)
                                                                                                                                                              (("2"
                                                                                                                                                                (assert)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("3"
                                                                                                                                                              (flatten)
                                                                                                                                                              (("3"
                                                                                                                                                                (assert)
                                                                                                                                                                (("3"
                                                                                                                                                                  (flatten)
                                                                                                                                                                  (("3"
                                                                                                                                                                    (split
                                                                                                                                                                     -2)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (flatten)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (skeep)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (inst
                                                                                                                                                                             5
                                                                                                                                                                             "T")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (skeep)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (inst
                                                                                                                                                                                 -2
                                                                                                                                                                                 "t")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil)
                                                                                                                                                                     ("2"
                                                                                                                                                                      (flatten)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (assert)
                                                                                                                                                                        nil
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("4"
                                                                                                                                                              (flatten)
                                                                                                                                                              (("4"
                                                                                                                                                                (assert)
                                                                                                                                                                (("4"
                                                                                                                                                                  (split
                                                                                                                                                                   -1)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (flatten)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (skeep)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (inst
                                                                                                                                                                           -2
                                                                                                                                                                           "t")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (flatten)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (assert)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (typepred
                                                                               "trace2")
                                                                              (("2"
                                                                                (expand
                                                                                 "valid_trace?"
                                                                                 1)
                                                                                (("2"
                                                                                  (flatten)
                                                                                  (("2"
                                                                                    (typepred
                                                                                     "trace")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "valid_trace?"
                                                                                       -2)
                                                                                      (("2"
                                                                                        (lemma
                                                                                         "last_append[TraceState]")
                                                                                        (("2"
                                                                                          (inst?)
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "finite_trace?")
                                                                                              (("2"
                                                                                                (flatten)
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (flatten)
                                                                (("2"
                                                                  (typepred
                                                                   "Ilo")
                                                                  (("2"
                                                                    (inst
                                                                     -2
                                                                     "Ilo-1")
                                                                    (("2"
                                                                      (case
                                                                       "inf_diff?(last(trace))")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (expand
                                                                           "SOMERUNS_tr"
                                                                           1)
                                                                          (("1"
                                                                            (inst
                                                                             1
                                                                             "trace")
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (typepred
                                                                           "trace")
                                                                          (("2"
                                                                            (expand
                                                                             "valid_trace?"
                                                                             -2)
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (expand
                                                                                 "finite_trace?"
                                                                                 -2)
                                                                                (("2"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("3"
                                                                        (typepred
                                                                         "trace")
                                                                        (("3"
                                                                          (expand
                                                                           "valid_trace?"
                                                                           -2)
                                                                          (("3"
                                                                            (assert)
                                                                            (("3"
                                                                              (expand
                                                                               "wf_trace?"
                                                                               -1)
                                                                              (("3"
                                                                                (propax)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (inst -4 "Ilo-1")
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (expand
                                                       "SOMERUNS_tr"
                                                       2)
                                                      (("2"
                                                        (inst
                                                         2
                                                         "trace")
                                                        (("2"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (assert) nil nil))
                      nil))
                    nil)
                   ("2" (expand "nonempty?" 1)
                    (("2" (expand "empty?" -1)
                      (("2" (inst -1 "i")
                        (("2" (expand "member" 1)
                          (("2" (propax) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((Environment type-eq-decl nil hp_def nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (DLOR const-decl "bool" bool_expr nil)
    (HP type-decl nil HP_adt nil)
    (SOMERUNS_st const-decl "bool" ltl_expr nil)
    (BSTAR def-decl "HP" bounded_star_semantics nil)
    (TraceState type-decl nil TraceState_adt nil)
    (list type-decl nil list_adt nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (SOMERUNS_tr const-decl "bool" ltl_expr nil)
    (normDLEG const-decl "bool" ltl_expr nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (state? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (STATE adt-constructor-decl "[Environment -> (state?)]"
     TraceState_adt nil)
    (valid_trace? const-decl "bool" trace_semantics nil)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil)
    (DLBOOL const-decl "bool" bool_expr nil)
    (length def-decl "nat" list_props nil)
    (nth def-decl "T" list_props nil)
    (last const-decl "T" more_list_props structures)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (final_env const-decl "Environment" trace_semantics nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (init_env const-decl "Environment" trace_semantics nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (< const-decl "bool" reals nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (below type-eq-decl nil naturalnumbers nil)
    (TRUE const-decl "bool" booleans nil)
    (DLEG_nth formula-decl nil ltl_expr nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (below type-eq-decl nil nat_types nil)
    (D adt-accessor-decl "[(state_diff?) ->
   {D: (dd?) | EXISTS (b: posreal): D = closed_interval(0, b)}]"
     TraceState_adt nil)
    (closed_interval const-decl "(closed_interval?(a, b))" interval_def
     ODEs)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (dd? const-decl "bool" hp_expr nil)
    (state_diff? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (length_append formula-decl nil list_props nil)
    (nth_append formula-decl nil more_list_props structures)
    (last_append formula-decl nil more_list_props structures)
    (trace_semantic_rel_bounded_star_seq_switch_eq formula-decl nil
     trace_bounded_star_semantics nil)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (car_append formula-decl nil more_list_props structures)
    (append def-decl "list[T]" list_props nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (min const-decl "{a | S(a) AND (FORALL x: S(x) IMPLIES a <= x)}"
         min_nat nil)
    (<= const-decl "bool" reals nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (nonempty? const-decl "bool" sets nil)
    (set type-eq-decl nil sets nil)
    (hp const-decl "bool" interval_def ODEs)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (inf_diff? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (empty? const-decl "bool" sets nil)
    (member const-decl "bool" sets nil))
   shostak))
 (dltl_BSTARGE_dual 0
  (dltl_BSTARGE_dual-1 nil 3902172348
   ("" (skeep)
    (("" (decompose-equality 1)
      (("" (iff)
        (("" (split 1)
          (("1" (flatten)
            (("1" (skeep)
              (("1" (expand "DLOR" -1)
                (("1" (split -1)
                  (("1" (inst 1 "0")
                    (("1" (expand "BSTAR" 1)
                      (("1" (expand "SOMERUNS_tr" 1)
                        (("1" (inst 1 "(: STATE(x!1) :)")
                          (("1" (split 1)
                            (("1" (grind) nil nil)
                             ("2" (expand "trace_semantic_rel" 1)
                              (("2"
                                (flatten)
                                (("2" (grind) nil nil))
                                nil))
                              nil)
                             ("3" (expand "normDLGE" 1)
                              (("3" (grind) nil nil)) nil))
                            nil)
                           ("2" (grind) nil nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (inst 1 "i+1")
                    (("2" (expand "BSTAR" 1)
                      (("2" (expand "SOMERUNS_tr" 1)
                        (("2" (expand "SOMERUNS_st" -1)
                          (("2" (skeep)
                            (("2" (expand "SOMERUNS_tr" -3)
                              (("2"
                                (skeep)
                                (("2"
                                  (inst 1 "append(trace,trace_1)")
                                  (("1"
                                    (split 1)
                                    (("1"
                                      (expand "init_env")
                                      (("1"
                                        (lemma
                                         "car_append[TraceState]")
                                        (("1"
                                          (inst?)
                                          (("1"
                                            (lift-if 1)
                                            (("1"
                                              (split 1)
                                              (("1"
                                                (flatten)
                                                (("1"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil)
                                               ("2"
                                                (flatten)
                                                (("2"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (typepred "trace")
                                            (("2"
                                              (expand "wf_trace?" -1)
                                              (("2"
                                                (flatten)
                                                (("2"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (expand "trace_semantic_rel" 1)
                                      (("2"
                                        (flatten)
                                        (("2"
                                          (lemma
                                           "trace_semantic_rel_bounded_star_seq_switch_eq")
                                          (("2"
                                            (inst?)
                                            (("2"
                                              (replace -1)
                                              (("2"
                                                (hide -1)
                                                (("2"
                                                  (hide 2)
                                                  (("2"
                                                    (expand
                                                     "trace_semantic_rel"
                                                     1)
                                                    (("2"
                                                      (flatten)
                                                      (("2"
                                                        (inst
                                                         1
                                                         "trace"
                                                         "trace_1")
                                                        (("2"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("3"
                                      (expand "normDLGE")
                                      (("3"
                                        (split 1)
                                        (("1"
                                          (flatten)
                                          (("1"
                                            (split -6)
                                            (("1"
                                              (flatten)
                                              (("1"
                                                (expand "final_env")
                                                (("1"
                                                  (lemma
                                                   "last_append[TraceState]")
                                                  (("1"
                                                    (inst?)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (split 1)
                                                        (("1"
                                                          (flatten)
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (flatten)
                                                          (("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (typepred
                                                       "trace_1")
                                                      (("2"
                                                        (expand
                                                         "wf_trace?"
                                                         -1)
                                                        (("2"
                                                          (flatten)
                                                          (("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (flatten)
                                              (("2"
                                                (expand
                                                 "finite_trace?")
                                                (("2"
                                                  (lemma
                                                   "last_append[TraceState]")
                                                  (("2"
                                                    (inst?)
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (flatten)
                                                        (("2"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (flatten)
                                          (("2"
                                            (assert)
                                            (("2"
                                              (split -5)
                                              (("1"
                                                (flatten)
                                                (("1"
                                                  (expand
                                                   "finite_trace?")
                                                  (("1"
                                                    (lemma
                                                     "last_append[TraceState]")
                                                    (("1"
                                                      (inst?)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (flatten)
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (flatten)
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (typepred
                                                             "trace_1")
                                                            (("2"
                                                              (expand
                                                               "wf_trace?"
                                                               -1)
                                                              (("2"
                                                                (propax)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (flatten)
                                                (("2"
                                                  (assert)
                                                  (("2"
                                                    (lemma "DLGE_nth")
                                                    (("2"
                                                      (inst?)
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (hide -2)
                                                          (("2"
                                                            (lemma
                                                             "DLGE_nth")
                                                            (("2"
                                                              (inst?)
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (hide
                                                                   4)
                                                                  (("2"
                                                                    (skeep)
                                                                    (("2"
                                                                      (typepred
                                                                       "j")
                                                                      (("2"
                                                                        (case
                                                                         "j <=  length[TraceState](trace)-1")
                                                                        (("1"
                                                                          (lemma
                                                                           "nth_append[TraceState]")
                                                                          (("1"
                                                                            (inst?)
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (lemma
                                                                                 "length_append[TraceState]")
                                                                                (("1"
                                                                                  (inst?
                                                                                   -1)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (inst
                                                                                       -5
                                                                                       "0")
                                                                                      (("1"
                                                                                        (split
                                                                                         -5)
                                                                                        (("1"
                                                                                          (typepred
                                                                                           "trace_1")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "valid_trace?"
                                                                                             -2)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "wf_trace?"
                                                                                               -1)
                                                                                              (("1"
                                                                                                (flatten)
                                                                                                (("1"
                                                                                                  (hide
                                                                                                   3)
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     -2
                                                                                                     "0")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "last"
                                                                                                         -)
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "nth"
                                                                                                             -2
                                                                                                             1)
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "length"
                                                                                                               1
                                                                                                               1)
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "length"
                                                                                                                   -2)
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "nth"
                                                                                                                       -3)
                                                                                                                      (("2"
                                                                                                                        (propax)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (skeep
                                                                                             -1)
                                                                                            (("2"
                                                                                              (case
                                                                                               "i!1=0")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   3
                                                                                                   "i!1 - j + length(trace)")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (lemma
                                                                                                       "nth_append[TraceState]")
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -1
                                                                                                         "_"
                                                                                                         "_"
                                                                                                         "length(trace)+i!1")
                                                                                                        (("1"
                                                                                                          (inst?
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (split
                                                                                                               -3)
                                                                                                              (("1"
                                                                                                                (flatten)
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (flatten)
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     -2
                                                                                                                     "0")
                                                                                                                    (("1"
                                                                                                                      (skeep
                                                                                                                       -2)
                                                                                                                      (("1"
                                                                                                                        (inst
                                                                                                                         4
                                                                                                                         "t")
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (typepred
                                                                                                                       " D(nth[TraceState](trace_1, i!1))")
                                                                                                                      (("2"
                                                                                                                        (skeep
                                                                                                                         -2)
                                                                                                                        (("2"
                                                                                                                          (replace
                                                                                                                           -2)
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "closed_interval"
                                                                                                                               1)
                                                                                                                              (("2"
                                                                                                                                (propax)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("3"
                                                                                                                (flatten)
                                                                                                                (("3"
                                                                                                                  (assert)
                                                                                                                  (("3"
                                                                                                                    (inst
                                                                                                                     -2
                                                                                                                     "0")
                                                                                                                    (("1"
                                                                                                                      (skeep)
                                                                                                                      (("1"
                                                                                                                        (inst
                                                                                                                         5
                                                                                                                         "t")
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (expand
                                                                                                                       "hp"
                                                                                                                       1)
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   4
                                                                                                   "i!1 - j + length(trace)")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (lemma
                                                                                                       "nth_append[TraceState]")
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         -1
                                                                                                         "_"
                                                                                                         "_"
                                                                                                         "length(trace)+i!1")
                                                                                                        (("2"
                                                                                                          (inst?)
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (split
                                                                                                               -2)
                                                                                                              (("1"
                                                                                                                (flatten)
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (flatten)
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (skeep)
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       5
                                                                                                                       "t")
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("3"
                                                                                                                (flatten)
                                                                                                                (("3"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (typepred
                                                                                           "trace_1")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "wf_trace?"
                                                                                             -1)
                                                                                            (("2"
                                                                                              (flatten)
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "length"
                                                                                                   2)
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (flip-ineq
                                                                           1)
                                                                          (("2"
                                                                            (inst
                                                                             -3
                                                                             "j - length(trace)")
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (split
                                                                                 -3)
                                                                                (("1"
                                                                                  (typepred
                                                                                   "trace_1")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "valid_trace?"
                                                                                     -2)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "wf_trace?"
                                                                                       -1)
                                                                                      (("1"
                                                                                        (flatten)
                                                                                        (("1"
                                                                                          (inst
                                                                                           -2
                                                                                           "j-length(trace)")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil)
                                                                                           ("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "last"
                                                                                               -2)
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (lemma
                                                                                                   "length_append[TraceState]")
                                                                                                  (("2"
                                                                                                    (inst?)
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (skeep
                                                                                   -1)
                                                                                  (("2"
                                                                                    (typepred
                                                                                     "i!1")
                                                                                    (("2"
                                                                                      (inst
                                                                                       3
                                                                                       "i!1")
                                                                                      (("1"
                                                                                        (split
                                                                                         3)
                                                                                        (("1"
                                                                                          (lemma
                                                                                           "nth_append[TraceState]")
                                                                                          (("1"
                                                                                            (inst?)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (flatten)
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (split
                                                                                               -3)
                                                                                              (("1"
                                                                                                (flatten)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (lemma
                                                                                                     "nth_append[TraceState]")
                                                                                                    (("1"
                                                                                                      (inst?)
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (flatten)
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (lemma
                                                                                                     "nth_append[TraceState]")
                                                                                                    (("2"
                                                                                                      (inst?)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (skeep)
                                                                                                          (("2"
                                                                                                            (inst
                                                                                                             -3
                                                                                                             "T")
                                                                                                            (("2"
                                                                                                              (skeep)
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 2
                                                                                                                 "t")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("3"
                                                                                                (flatten)
                                                                                                (("3"
                                                                                                  (lemma
                                                                                                   "nth_append[TraceState]")
                                                                                                  (("3"
                                                                                                    (inst?)
                                                                                                    (("3"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("3"
                                                                                          (flatten)
                                                                                          (("3"
                                                                                            (assert)
                                                                                            (("3"
                                                                                              (lemma
                                                                                               "nth_append[TraceState]")
                                                                                              (("3"
                                                                                                (inst?)
                                                                                                (("3"
                                                                                                  (assert)
                                                                                                  (("3"
                                                                                                    (split
                                                                                                     -3)
                                                                                                    (("1"
                                                                                                      (flatten)
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (flatten)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (skeep)
                                                                                                          (("2"
                                                                                                            (inst
                                                                                                             3
                                                                                                             "t")
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("3"
                                                                                                      (flatten)
                                                                                                      (("3"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (lemma
                                                                                           "length_append[TraceState]")
                                                                                          (("2"
                                                                                            (inst?)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (lemma
                                                                                 "length_append[TraceState]")
                                                                                (("2"
                                                                                  (inst?)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (hide -)
                                    (("2"
                                      (typepred "trace" "trace_1")
                                      (("2"
                                        (split 1)
                                        (("1"
                                          (expand "wf_trace?")
                                          (("1"
                                            (lemma
                                             "length_append[TraceState]")
                                            (("1"
                                              (lemma
                                               "nth_append[TraceState]")
                                              (("1"
                                                (split 1)
                                                (("1"
                                                  (inst? -2)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (grind)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (flatten)
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (lemma
                                                       "car_append[TraceState]")
                                                      (("2"
                                                        (inst?)
                                                        (("2"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("3"
                                                  (skeep)
                                                  (("3"
                                                    (inst?)
                                                    (("3"
                                                      (assert)
                                                      (("3"
                                                        (inst?)
                                                        (("3"
                                                          (assert)
                                                          (("3"
                                                            (lift-if
                                                             -1)
                                                            (("3"
                                                              (split
                                                               -1)
                                                              (("1"
                                                                (flatten)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (inst
                                                                     -5
                                                                     "i!1")
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil)
                                                                     ("2"
                                                                      (expand
                                                                       "valid_trace?")
                                                                      (("2"
                                                                        (typepred
                                                                         "trace")
                                                                        (("2"
                                                                          (grind)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (flatten)
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (inst
                                                                     -7
                                                                     "i!1-length(trace)")
                                                                    (("2"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (expand "valid_trace?")
                                          (("2"
                                            (lemma
                                             "last_append[TraceState]")
                                            (("2"
                                              (inst?)
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (flatten)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (expand
                                                       "finite_trace?")
                                                      (("1"
                                                        (flatten)
                                                        (("1"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (flatten)
                                                (("2"
                                                  (assert)
                                                  (("2"
                                                    (typepred
                                                     "trace_1")
                                                    (("2"
                                                      (expand
                                                       "wf_trace?"
                                                       -1)
                                                      (("2"
                                                        (propax)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (flatten)
            (("2" (skeep)
              (("2" (assert)
                (("2"
                  (name "Ilo"
                        "min[nat](LAMBDA(i:nat):  SOMERUNS_tr(BSTAR(A, i), normDLGE(P, Q))(x!1))")
                  (("1" (hide -2)
                    (("1" (case "Ilo = 0")
                      (("1" (inst 1 "0")
                        (("1" (typepred "Ilo")
                          (("1" (replace -3)
                            (("1" (expand "BSTAR" -1)
                              (("1"
                                (hide -2 -4)
                                (("1"
                                  (expand "SOMERUNS_tr" -1)
                                  (("1"
                                    (skeep)
                                    (("1"
                                      (expand "trace_semantic_rel" -2)
                                      (("1"
                                        (split -2)
                                        (("1"
                                          (flatten)
                                          (("1"
                                            (expand "normDLGE" -5)
                                            (("1"
                                              (expand "DLOR" 1)
                                              (("1"
                                                (flatten)
                                                (("1"
                                                  (split -5)
                                                  (("1"
                                                    (flatten)
                                                    (("1"
                                                      (hide 2)
                                                      (("1"
                                                        (hide -5)
                                                        (("1"
                                                          (grind)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (flatten)
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (grind)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (flatten)
                                          (("2"
                                            (assert)
                                            (("2" (grind) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (typepred "Ilo")
                        (("2" (inst 2 "Ilo-1")
                          (("1" (expand "DLOR" 2)
                            (("1" (flatten)
                              (("1"
                                (expand "SOMERUNS_st")
                                (("1"
                                  (expand "SOMERUNS_tr" -1)
                                  (("1"
                                    (skeep)
                                    (("1"
                                      (expand "BSTAR" -2)
                                      (("1"
                                        (assert)
                                        (("1"
                                          (expand
                                           "trace_semantic_rel"
                                           -2)
                                          (("1"
                                            (split -2)
                                            (("1"
                                              (assert)
                                              (("1"
                                                (lemma
                                                 "trace_semantic_rel_bounded_star_seq_switch_eq")
                                                (("1"
                                                  (inst?)
                                                  (("1"
                                                    (replace -1)
                                                    (("1"
                                                      (hide -1)
                                                      (("1"
                                                        (expand
                                                         "trace_semantic_rel"
                                                         -1)
                                                        (("1"
                                                          (split -1)
                                                          (("1"
                                                            (skeep)
                                                            (("1"
                                                              (inst
                                                               3
                                                               "trace1")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (split
                                                                   3)
                                                                  (("1"
                                                                    (lemma
                                                                     "car_append[TraceState]")
                                                                    (("1"
                                                                      (inst?)
                                                                      (("1"
                                                                        (expand
                                                                         "init_env")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (lift-if
                                                                             1)
                                                                            (("1"
                                                                              (split
                                                                               1)
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (flatten)
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (typepred
                                                                         "trace1")
                                                                        (("2"
                                                                          (expand
                                                                           "wf_trace?"
                                                                           -1)
                                                                          (("2"
                                                                            (flatten)
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (expand
                                                                     "SOMERUNS_tr"
                                                                     1)
                                                                    (("2"
                                                                      (inst
                                                                       1
                                                                       "trace2")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (hide
                                                                           -8
                                                                           -9)
                                                                          (("1"
                                                                            (expand
                                                                             "normDLGE")
                                                                            (("1"
                                                                              (split)
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (split
                                                                                   -8)
                                                                                  (("1"
                                                                                    (flatten)
                                                                                    (("1"
                                                                                      (lemma
                                                                                       "last_append[TraceState]")
                                                                                      (("1"
                                                                                        (inst?)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "final_env")
                                                                                            (("1"
                                                                                              (split
                                                                                               1)
                                                                                              (("1"
                                                                                                (flatten)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (flatten)
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (typepred
                                                                                           "trace2")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "wf_trace?"
                                                                                             -1)
                                                                                            (("2"
                                                                                              (flatten)
                                                                                              (("2"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (flatten)
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (expand
                                                                                         "finite_trace?")
                                                                                        (("2"
                                                                                          (lemma
                                                                                           "last_append[TraceState]")
                                                                                          (("2"
                                                                                            (inst?)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (flatten)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (flatten)
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (typepred
                                                                                                   "trace2")
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "wf_trace?"
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (propax)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (flatten)
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (split
                                                                                     -7)
                                                                                    (("1"
                                                                                      (flatten)
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "finite_trace?")
                                                                                          (("1"
                                                                                            (flatten)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (split)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (lemma
                                                                                                     "last_append[TraceState]")
                                                                                                    (("1"
                                                                                                      (inst?)
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (lemma
                                                                                                   "last_append[TraceState]")
                                                                                                  (("2"
                                                                                                    (inst?)
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (flatten)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (lemma
                                                                                           "DLGE_nth")
                                                                                          (("2"
                                                                                            (inst?)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (hide
                                                                                                 -2)
                                                                                                (("2"
                                                                                                  (lemma
                                                                                                   "DLGE_nth")
                                                                                                  (("2"
                                                                                                    (inst?)
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (hide
                                                                                                         4)
                                                                                                        (("2"
                                                                                                          (skeep)
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (typepred
                                                                                                               "j")
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 -2
                                                                                                                 "length(trace1)+j")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (lemma
                                                                                                                     "length_append[TraceState]")
                                                                                                                    (("1"
                                                                                                                      (inst?)
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (split
                                                                                                                           -3)
                                                                                                                          (("1"
                                                                                                                            (lemma
                                                                                                                             "nth_append[TraceState]")
                                                                                                                            (("1"
                                                                                                                              (inst?)
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (inst
                                                                                                                                   -1
                                                                                                                                   "length(trace1)+j")
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (skeep)
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              (("2"
                                                                                                                                (typepred
                                                                                                                                 "i!1")
                                                                                                                                (("2"
                                                                                                                                  (inst
                                                                                                                                   3
                                                                                                                                   "i!1")
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    (("2"
                                                                                                                                      (split
                                                                                                                                       -2)
                                                                                                                                      (("1"
                                                                                                                                        (flatten)
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          (("1"
                                                                                                                                            (lemma
                                                                                                                                             "nth_append[TraceState]")
                                                                                                                                            (("1"
                                                                                                                                              (inst?)
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                (("1"
                                                                                                                                                  (inst
                                                                                                                                                   -1
                                                                                                                                                   "length(trace1)+i!1+j")
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    (("1"
                                                                                                                                                      (split
                                                                                                                                                       -3)
                                                                                                                                                      (("1"
                                                                                                                                                        (flatten)
                                                                                                                                                        (("1"
                                                                                                                                                          (assert)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("2"
                                                                                                                                                        (flatten)
                                                                                                                                                        (("2"
                                                                                                                                                          (assert)
                                                                                                                                                          (("2"
                                                                                                                                                            (skeep)
                                                                                                                                                            (("2"
                                                                                                                                                              (inst
                                                                                                                                                               -2
                                                                                                                                                               "T")
                                                                                                                                                              (("2"
                                                                                                                                                                (skeep)
                                                                                                                                                                (("2"
                                                                                                                                                                  (inst
                                                                                                                                                                   4
                                                                                                                                                                   "t")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (assert)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("3"
                                                                                                                                                        (flatten)
                                                                                                                                                        (("3"
                                                                                                                                                          (assert)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (flatten)
                                                                                                                                        (("2"
                                                                                                                                          (assert)
                                                                                                                                          (("2"
                                                                                                                                            (lemma
                                                                                                                                             "nth_append[TraceState]")
                                                                                                                                            (("2"
                                                                                                                                              (inst?)
                                                                                                                                              (("2"
                                                                                                                                                (inst
                                                                                                                                                 -1
                                                                                                                                                 "length(trace1)+i!1+j")
                                                                                                                                                (("2"
                                                                                                                                                  (assert)
                                                                                                                                                  (("2"
                                                                                                                                                    (split
                                                                                                                                                     -2)
                                                                                                                                                    (("1"
                                                                                                                                                      (flatten)
                                                                                                                                                      (("1"
                                                                                                                                                        (assert)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (flatten)
                                                                                                                                                      (("2"
                                                                                                                                                        (assert)
                                                                                                                                                        (("2"
                                                                                                                                                          (skeep)
                                                                                                                                                          (("2"
                                                                                                                                                            (inst
                                                                                                                                                             5
                                                                                                                                                             "t")
                                                                                                                                                            (("2"
                                                                                                                                                              (assert)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("3"
                                                                                                                                                      (flatten)
                                                                                                                                                      (("3"
                                                                                                                                                        (assert)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (lemma
                                                                                                                     "length_append[TraceState]")
                                                                                                                    (("2"
                                                                                                                      (inst?)
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (typepred
                                                                         "trace2")
                                                                        (("2"
                                                                          (typepred
                                                                           "trace")
                                                                          (("2"
                                                                            (expand
                                                                             "valid_trace?")
                                                                            (("2"
                                                                              (flatten)
                                                                              (("2"
                                                                                (lemma
                                                                                 "last_append[TraceState]")
                                                                                (("2"
                                                                                  (inst?)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "finite_trace?")
                                                                                      (("2"
                                                                                        (flatten)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (flatten)
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (typepred
                                                                 "trace")
                                                                (("2"
                                                                  (expand
                                                                   "valid_trace?"
                                                                   -2)
                                                                  (("2"
                                                                    (inst
                                                                     -7
                                                                     "Ilo-1")
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (expand
                                                                         "SOMERUNS_tr"
                                                                         1)
                                                                        (("2"
                                                                          (inst
                                                                           1
                                                                           "trace")
                                                                          (("2"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (inst -4 "Ilo-1")
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (expand
                                                   "SOMERUNS_tr"
                                                   1)
                                                  (("2"
                                                    (inst 1 "trace")
                                                    (("2"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (assert) nil nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (expand "nonempty?" 1)
                    (("2" (expand "empty?" -1)
                      (("2" (inst -1 "i")
                        (("2" (expand "member" 1)
                          (("2" (propax) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((Environment type-eq-decl nil hp_def nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (DLOR const-decl "bool" bool_expr nil)
    (HP type-decl nil HP_adt nil)
    (SOMERUNS_st const-decl "bool" ltl_expr nil)
    (BSTAR def-decl "HP" bounded_star_semantics nil)
    (TraceState type-decl nil TraceState_adt nil)
    (list type-decl nil list_adt nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (SOMERUNS_tr const-decl "bool" ltl_expr nil)
    (normDLGE const-decl "bool" ltl_expr nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (state? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (STATE adt-constructor-decl "[Environment -> (state?)]"
     TraceState_adt nil)
    (valid_trace? const-decl "bool" trace_semantics nil)
    (nth def-decl "T" list_props nil)
    (last const-decl "T" more_list_props structures)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (final_env const-decl "Environment" trace_semantics nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil)
    (DLBOOL const-decl "bool" bool_expr nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (length def-decl "nat" list_props nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (init_env const-decl "Environment" trace_semantics nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (< const-decl "bool" reals nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (below type-eq-decl nil naturalnumbers nil)
    (append def-decl "list[T]" list_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nth_append formula-decl nil more_list_props structures)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (state_diff? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (dd? const-decl "bool" hp_expr nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (closed_interval const-decl "(closed_interval?(a, b))" interval_def
     ODEs)
    (D adt-accessor-decl "[(state_diff?) ->
   {D: (dd?) | EXISTS (b: posreal): D = closed_interval(0, b)}]"
     TraceState_adt nil)
    (below type-eq-decl nil nat_types nil)
    (hp const-decl "bool" interval_def ODEs)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (length_append formula-decl nil list_props nil)
    (<= const-decl "bool" reals nil)
    (DLGE_nth formula-decl nil ltl_expr nil)
    (last_append formula-decl nil more_list_props structures)
    (trace_semantic_rel_bounded_star_seq_switch_eq formula-decl nil
     trace_bounded_star_semantics nil)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (car_append formula-decl nil more_list_props structures)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (min const-decl "{a | S(a) AND (FORALL x: S(x) IMPLIES a <= x)}"
         min_nat nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (nonempty? const-decl "bool" sets nil)
    (set type-eq-decl nil sets nil)
    (max_ci const-decl "{rr: (d) | FORALL (x: (d)): x <= rr}"
            more_ci_props ODEs)
    (odd_minus_odd_is_even application-judgement "even_int" integers
     nil)
    (empty? const-decl "bool" sets nil)
    (member const-decl "bool" sets nil))
   shostak))
 (dltl_STAREG_dual 0
  (dltl_STAREG_dual-1 nil 3902158643
   ("" (skeep)
    (("" (decompose-equality 1)
      (("" (iff)
        (("" (split 1)
          (("1" (flatten)
            (("1" (lemma "someruns_tr_star")
              (("1" (inst?)
                (("1" (assert)
                  (("1" (hide 2)
                    (("1" (expand "DLOR" -1)
                      (("1" (case "P(x!1)")
                        (("1" (assert)
                          (("1" (inst 1 "0")
                            (("1" (expand "SOMERUNS_tr" 1)
                              (("1"
                                (inst 1 "(:STATE( x!1 ) :)")
                                (("1"
                                  (split 1)
                                  (("1" (grind) nil nil)
                                   ("2"
                                    (hide -2)
                                    (("2"
                                      (grind)
                                      (("2"
                                        (expand "trace_semantic_rel")
                                        (("2" (grind) nil nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("3"
                                    (expand "normDLEG" 1)
                                    (("3"
                                      (split 1)
                                      (("1"
                                        (flatten)
                                        (("1" (grind) nil nil))
                                        nil)
                                       ("2"
                                        (flatten)
                                        (("2" (grind) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2" (grind) nil nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (assert)
                          (("2" (lemma "someruns_st_star")
                            (("2" (inst?)
                              (("2"
                                (assert)
                                (("2"
                                  (lemma "dltl_BSTAREG_dual")
                                  (("2"
                                    (inst?)
                                    (("2"
                                      (decompose-equality -1)
                                      (("2"
                                        (inst -1 "x!1")
                                        (("2"
                                          (iff)
                                          (("2"
                                            (flatten)
                                            (("2"
                                              (split -1)
                                              (("1" (propax) nil nil)
                                               ("2"
                                                (hide 3)
                                                (("2"
                                                  (skeep -2)
                                                  (("2"
                                                    (inst 1 "i")
                                                    (("2"
                                                      (expand "DLOR" 1)
                                                      (("2"
                                                        (propax)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (flatten)
            (("2" (lemma "someruns_st_star")
              (("2" (lemma "someruns_tr_star")
                (("2" (inst? -1)
                  (("2" (assert)
                    (("2" (expand "DLOR" 1)
                      (("2" (flatten)
                        (("2" (assert)
                          (("2" (inst?)
                            (("2" (flatten)
                              (("2"
                                (assert)
                                (("2"
                                  (hide 3)
                                  (("2"
                                    (hide -2)
                                    (("2"
                                      (lemma "dltl_BSTAREG_dual")
                                      (("2"
                                        (inst?)
                                        (("2"
                                          (decompose-equality -1)
                                          (("2"
                                            (inst -1 "x!1")
                                            (("2"
                                              (iff)
                                              (("2"
                                                (flatten)
                                                (("2"
                                                  (split -2)
                                                  (("1"
                                                    (skeep -1)
                                                    (("1"
                                                      (expand
                                                       "DLOR"
                                                       -1)
                                                      (("1"
                                                        (inst 1 "i")
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (propax)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((Environment type-eq-decl nil hp_def nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (DLOR const-decl "bool" bool_expr nil)
    (HP type-decl nil HP_adt nil)
    (SOMERUNS_st const-decl "bool" ltl_expr nil)
    (star? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (STAR adt-constructor-decl "[HP -> (star?)]" HP_adt nil)
    (TraceState type-decl nil TraceState_adt nil)
    (list type-decl nil list_adt nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (SOMERUNS_tr const-decl "bool" ltl_expr nil)
    (normDLEG const-decl "bool" ltl_expr nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (someruns_tr_star formula-decl nil trace_bounded_star_semantics
     nil)
    (dltl_BSTAREG_dual formula-decl nil tl_star_lems nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (someruns_st_star formula-decl nil trace_bounded_star_semantics
     nil)
    (below type-eq-decl nil naturalnumbers nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (< const-decl "bool" reals nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (init_env const-decl "Environment" trace_semantics nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (BSTAR def-decl "HP" bounded_star_semantics nil)
    (DLBOOL const-decl "bool" bool_expr nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (length def-decl "nat" list_props nil)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (final_env const-decl "Environment" trace_semantics nil)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (last const-decl "T" more_list_props structures)
    (nth def-decl "T" list_props nil)
    (valid_trace? const-decl "bool" trace_semantics nil)
    (STATE adt-constructor-decl "[Environment -> (state?)]"
     TraceState_adt nil)
    (state? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil))
   shostak))
 (dltl_STARGE_dual 0
  (dltl_STARGE_dual-1 nil 3902165656
   ("" (skeep)
    (("" (decompose-equality 1)
      (("" (iff)
        (("" (split 1)
          (("1" (flatten)
            (("1" (expand "DLOR" -1)
              (("1" (split -1)
                (("1" (expand "SOMERUNS_tr" 1)
                  (("1" (inst 1 "(: STATE( x!1 ) :)")
                    (("1" (split 1)
                      (("1" (grind) nil nil)
                       ("2" (grind)
                        (("2" (expand "trace_semantic_rel" 1)
                          (("2" (flatten)
                            (("2" (hide 2) (("2" (grind) nil nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("3" (grind) nil nil))
                      nil)
                     ("2" (grind) nil nil))
                    nil))
                  nil)
                 ("2" (lemma "someruns_tr_star")
                  (("2" (inst?)
                    (("2" (assert)
                      (("2" (hide 2)
                        (("2" (lemma "someruns_st_star")
                          (("2" (inst?)
                            (("2" (assert)
                              (("2"
                                (hide -2)
                                (("2"
                                  (skeep*)
                                  (("2"
                                    (lemma "dltl_BSTARGE_dual")
                                    (("2"
                                      (inst?)
                                      (("2"
                                        (decompose-equality -1)
                                        (("2"
                                          (inst -1 "x!1")
                                          (("2"
                                            (iff -1)
                                            (("2"
                                              (flatten)
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (split -1)
                                                  (("1"
                                                    (propax)
                                                    nil
                                                    nil)
                                                   ("2"
                                                    (hide 2)
                                                    (("2"
                                                      (inst 1 "i")
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (expand
                                                           "DLOR"
                                                           1)
                                                          (("2"
                                                            (propax)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (flatten)
            (("2" (lemma "dltl_BSTARGE_dual")
              (("2" (lemma "someruns_st_star")
                (("2" (expand "DLOR" 1)
                  (("2" (flatten)
                    (("2" (inst?)
                      (("2" (assert)
                        (("2" (lemma "someruns_tr_star")
                          (("2" (inst?)
                            (("2" (assert)
                              (("2"
                                (skeep)
                                (("2"
                                  (hide -3)
                                  (("2"
                                    (inst -2 "A" "_" "_")
                                    (("2"
                                      (inst? -2)
                                      (("2"
                                        (decompose-equality -2)
                                        (("2"
                                          (inst -1 "x!1")
                                          (("2"
                                            (iff -1)
                                            (("2"
                                              (flatten)
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (split -2)
                                                  (("1"
                                                    (skeep -1)
                                                    (("1"
                                                      (inst 1 "i!1")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (expand
                                                           "DLOR"
                                                           -1)
                                                          (("1"
                                                            (propax)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((Environment type-eq-decl nil hp_def nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (DLOR const-decl "bool" bool_expr nil)
    (HP type-decl nil HP_adt nil)
    (SOMERUNS_st const-decl "bool" ltl_expr nil)
    (star? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (STAR adt-constructor-decl "[HP -> (star?)]" HP_adt nil)
    (TraceState type-decl nil TraceState_adt nil)
    (list type-decl nil list_adt nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (SOMERUNS_tr const-decl "bool" ltl_expr nil)
    (normDLGE const-decl "bool" ltl_expr nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (someruns_tr_star formula-decl nil trace_bounded_star_semantics
     nil)
    (someruns_st_star formula-decl nil trace_bounded_star_semantics
     nil)
    (TRUE const-decl "bool" booleans nil)
    (BSTAR def-decl "HP" bounded_star_semantics nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (dltl_BSTARGE_dual formula-decl nil tl_star_lems nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (< const-decl "bool" reals nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (below type-eq-decl nil naturalnumbers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (init_env const-decl "Environment" trace_semantics nil)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (length def-decl "nat" list_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (final_env const-decl "Environment" trace_semantics nil)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (last const-decl "T" more_list_props structures)
    (nth def-decl "T" list_props nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (state? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (STATE adt-constructor-decl "[Environment -> (state?)]"
     TraceState_adt nil)
    (valid_trace? const-decl "bool" trace_semantics nil))
   shostak))
 (dltl_STARconcap 0
  (dltl_STARconcap-1 nil 3902177727
   ("" (skeep)
    (("" (rewrite "dlSequent_equiv")
      (("" (expand "dlSequent" 1)
        (("" (skeep)
          (("" (inst -2 "0")
            (("" (expand "nth" -2)
              (("" (expand "DLAND" -2)
                (("" (flatten)
                  (("" (expand "DLEXISTS" -2)
                    (("" (skeep)
                      (("" (inst 1 "0")
                        (("" (expand "nth" 1)
                          (("" (assert)
                            ((""
                              (case "FORALL(i:nat):  SOMERUNS_tr(STAR(A),
                                normDLGLOBALLY(qQ(x - i*1), P))(env_1)")
                              (("1"
                                (inst -1 "ceiling(x)+1")
                                (("1"
                                  (assert)
                                  (("1"
                                    (case "NOT x- ceiling(x)-1 < 0")
                                    (("1" (assert) nil nil)
                                     ("2"
                                      (expand "SOMERUNS_tr")
                                      (("2"
                                        (skeep)
                                        (("2"
                                          (inst 1 "trace")
                                          (("2"
                                            (assert)
                                            (("2"
                                              (expand "normDLGLOBALLY")
                                              (("2"
                                                (split 1)
                                                (("1"
                                                  (flatten)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (inst
                                                           1
                                                           "-1-ceiling(x)+x")
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (assert)
                                                  (("2"
                                                    (flatten)
                                                    (("2"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (case "NOT x<=0")
                                  (("1" (assert) nil nil)
                                   ("2"
                                    (expand "SOMERUNS_tr" 2)
                                    (("2"
                                      (inst 2 "(: STATE(env_1) :)")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (split 2)
                                          (("1" (grind) nil nil)
                                           ("2"
                                            (expand
                                             "trace_semantic_rel"
                                             1)
                                            (("2"
                                              (flatten)
                                              (("2" (grind) nil nil))
                                              nil))
                                            nil)
                                           ("3"
                                            (expand "normDLGLOBALLY" 1)
                                            (("3"
                                              (split 1)
                                              (("1"
                                                (flatten)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (split 1)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (inst 1 "x")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (grind)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (lemma
                                                       "DLGLOBALLY_FORALL")
                                                      (("2"
                                                        (inst?)
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (skeep)
                                                            (("2"
                                                              (typepred
                                                               "i")
                                                              (("2"
                                                                (grind)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (flatten)
                                                (("2"
                                                  (assert)
                                                  (("2"
                                                    (hide 2)
                                                    (("2"
                                                      (grind)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2" (grind) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (hide -1)
                                (("2"
                                  (hide -1)
                                  (("2"
                                    (assert)
                                    (("2"
                                      (reveal -)
                                      (("2"
                                        (hide 2)
                                        (("2"
                                          (induct "i" 1)
                                          (("1"
                                            (expand "SOMERUNS_tr" 1)
                                            (("1"
                                              (inst
                                               1
                                               "(: STATE(env_1) :)")
                                              (("1"
                                                (split 1)
                                                (("1" (grind) nil nil)
                                                 ("2"
                                                  (expand
                                                   "trace_semantic_rel"
                                                   1)
                                                  (("2"
                                                    (flatten)
                                                    (("2"
                                                      (hide 2)
                                                      (("2"
                                                        (grind)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("3"
                                                  (expand
                                                   "normDLGLOBALLY")
                                                  (("3"
                                                    (split 1)
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (split 1)
                                                        (("1"
                                                          (grind)
                                                          nil
                                                          nil)
                                                         ("2"
                                                          (lemma
                                                           "DLGLOBALLY_FORALL")
                                                          (("2"
                                                            (inst?)
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (hide
                                                                 2)
                                                                (("2"
                                                                  (skeep)
                                                                  (("2"
                                                                    (typepred
                                                                     "i")
                                                                    (("2"
                                                                      (expand
                                                                       "length"
                                                                       -1)
                                                                      (("2"
                                                                        (expand
                                                                         "length"
                                                                         -1)
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (grind)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (flatten)
                                                      (("2"
                                                        (hide 2)
                                                        (("2"
                                                          (grind)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (hide -2)
                                                (("2" (grind) nil nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (skeep)
                                            (("2"
                                              (expand "SOMERUNS_tr")
                                              (("2"
                                                (skeep -1)
                                                (("2"
                                                  (inst -5 "x-j")
                                                  (("2"
                                                    (rewrite
                                                     "dlSequent_equiv")
                                                    (("2"
                                                      (expand
                                                       "dlSequent"
                                                       -5)
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (expand
                                                           "normDLGLOBALLY"
                                                           -3)
                                                          (("2"
                                                            (split -3)
                                                            (("1"
                                                              (flatten)
                                                              (("1"
                                                                (inst
                                                                 -7
                                                                 "final_env(trace)")
                                                                (("1"
                                                                  (split
                                                                   -7)
                                                                  (("1"
                                                                    (skeep)
                                                                    (("1"
                                                                      (typepred
                                                                       "j_1")
                                                                      (("1"
                                                                        (expand
                                                                         "length"
                                                                         -1)
                                                                        (("1"
                                                                          (expand
                                                                           "length"
                                                                           -1)
                                                                          (("1"
                                                                            (expand
                                                                             "nth"
                                                                             -2)
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (skeep)
                                                                                (("1"
                                                                                  (inst
                                                                                   1
                                                                                   "append(trace,trace_1)")
                                                                                  (("1"
                                                                                    (split
                                                                                     1)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "init_env")
                                                                                      (("1"
                                                                                        (lemma
                                                                                         "car_append[TraceState]")
                                                                                        (("1"
                                                                                          (inst?)
                                                                                          (("1"
                                                                                            (lift-if
                                                                                             1)
                                                                                            (("1"
                                                                                              (split
                                                                                               1)
                                                                                              (("1"
                                                                                                (flatten)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (flatten)
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (typepred
                                                                                             "trace")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "wf_trace?"
                                                                                               -1)
                                                                                              (("2"
                                                                                                (flatten)
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (expand
                                                                                       "trace_semantic_rel"
                                                                                       1)
                                                                                      (("2"
                                                                                        (flatten)
                                                                                        (("2"
                                                                                          (lemma
                                                                                           "trace_semantic_rel_star_seq_switch_eq")
                                                                                          (("2"
                                                                                            (inst?)
                                                                                            (("2"
                                                                                              (replace
                                                                                               -1)
                                                                                              (("2"
                                                                                                (hide
                                                                                                 -1)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "trace_semantic_rel"
                                                                                                   2)
                                                                                                  (("2"
                                                                                                    (flatten)
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       2
                                                                                                       "trace"
                                                                                                       "trace_1")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("3"
                                                                                      (expand
                                                                                       "normDLGLOBALLY")
                                                                                      (("3"
                                                                                        (case
                                                                                         "NOT DLGLOBALLY(State_Trace(P))(append(trace, trace_1))")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (case
                                                                                             " DLGLOBALLY(State_Trace(P))(trace_1)")
                                                                                            (("1"
                                                                                              (hide
                                                                                               -5)
                                                                                              (("1"
                                                                                                (lemma
                                                                                                 "DLGLOBALLY_FORALL")
                                                                                                (("1"
                                                                                                  (inst?)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (hide
                                                                                                       -2)
                                                                                                      (("1"
                                                                                                        (lemma
                                                                                                         "DLGLOBALLY_FORALL")
                                                                                                        (("1"
                                                                                                          (inst?)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (hide
                                                                                                               2)
                                                                                                              (("1"
                                                                                                                (lemma
                                                                                                                 "DLGLOBALLY_FORALL")
                                                                                                                (("1"
                                                                                                                  (inst?)
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (hide
                                                                                                                       -8)
                                                                                                                      (("1"
                                                                                                                        (skeep)
                                                                                                                        (("1"
                                                                                                                          (lemma
                                                                                                                           "length_append[TraceState]")
                                                                                                                          (("1"
                                                                                                                            (lemma
                                                                                                                             "nth_append[TraceState]")
                                                                                                                            (("1"
                                                                                                                              (inst?
                                                                                                                               -1)
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (inst?
                                                                                                                                   -2)
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    (("1"
                                                                                                                                      (lift-if
                                                                                                                                       -1)
                                                                                                                                      (("1"
                                                                                                                                        (split
                                                                                                                                         -1)
                                                                                                                                        (("1"
                                                                                                                                          (flatten)
                                                                                                                                          (("1"
                                                                                                                                            (inst
                                                                                                                                             -4
                                                                                                                                             "i")
                                                                                                                                            (("1"
                                                                                                                                              (hide
                                                                                                                                               -5)
                                                                                                                                              (("1"
                                                                                                                                                (split
                                                                                                                                                 -4)
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  (("1"
                                                                                                                                                    (grind)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (flatten)
                                                                                                                                                  (("2"
                                                                                                                                                    (assert)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("3"
                                                                                                                                                  (flatten)
                                                                                                                                                  (("3"
                                                                                                                                                    (assert)
                                                                                                                                                    (("3"
                                                                                                                                                      (skeep)
                                                                                                                                                      (("3"
                                                                                                                                                        (inst
                                                                                                                                                         -2
                                                                                                                                                         "t")
                                                                                                                                                        (("3"
                                                                                                                                                          (assert)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("4"
                                                                                                                                                  (flatten)
                                                                                                                                                  (("4"
                                                                                                                                                    (assert)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (flatten)
                                                                                                                                          (("2"
                                                                                                                                            (inst
                                                                                                                                             -4
                                                                                                                                             "i-length(trace)")
                                                                                                                                            (("1"
                                                                                                                                              (hide
                                                                                                                                               -3)
                                                                                                                                              (("1"
                                                                                                                                                (split
                                                                                                                                                 -3)
                                                                                                                                                (("1"
                                                                                                                                                  (flatten)
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (flatten)
                                                                                                                                                  (("2"
                                                                                                                                                    (assert)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("3"
                                                                                                                                                  (flatten)
                                                                                                                                                  (("3"
                                                                                                                                                    (assert)
                                                                                                                                                    (("3"
                                                                                                                                                      (skeep)
                                                                                                                                                      (("3"
                                                                                                                                                        (inst
                                                                                                                                                         -2
                                                                                                                                                         "t")
                                                                                                                                                        (("3"
                                                                                                                                                          (assert)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("4"
                                                                                                                                                  (flatten)
                                                                                                                                                  (("4"
                                                                                                                                                    (assert)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (split
                                                                                             1)
                                                                                            (("1"
                                                                                              (flatten)
                                                                                              (("1"
                                                                                                (split
                                                                                                 -6)
                                                                                                (("1"
                                                                                                  (flatten)
                                                                                                  (("1"
                                                                                                    (lemma
                                                                                                     "last_append[TraceState]")
                                                                                                    (("1"
                                                                                                      (inst?)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "final_env")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (split
                                                                                                             1)
                                                                                                            (("1"
                                                                                                              (flatten)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (flatten)
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (typepred
                                                                                                         "trace_1")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "wf_trace?"
                                                                                                           -1)
                                                                                                          (("2"
                                                                                                            (flatten)
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (flatten)
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "finite_trace?")
                                                                                                      (("2"
                                                                                                        (lemma
                                                                                                         "last_append[TraceState]")
                                                                                                        (("2"
                                                                                                          (inst?)
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (flatten)
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (propax)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("3"
                                                                                          (hide
                                                                                           2)
                                                                                          (("3"
                                                                                            (typepred
                                                                                             "trace"
                                                                                             "trace_1")
                                                                                            (("3"
                                                                                              (hide
                                                                                               -8)
                                                                                              (("3"
                                                                                                (expand
                                                                                                 "wf_trace?")
                                                                                                (("3"
                                                                                                  (lemma
                                                                                                   "length_append[TraceState]")
                                                                                                  (("3"
                                                                                                    (lemma
                                                                                                     "nth_append[TraceState]")
                                                                                                    (("3"
                                                                                                      (inst?
                                                                                                       -2)
                                                                                                      (("3"
                                                                                                        (inst?
                                                                                                         -1)
                                                                                                        (("3"
                                                                                                          (split
                                                                                                           1)
                                                                                                          (("1"
                                                                                                            (grind)
                                                                                                            nil
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (flatten)
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (lemma
                                                                                                                 "car_append[TraceState]")
                                                                                                                (("2"
                                                                                                                  (inst?)
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("3"
                                                                                                            (skeep)
                                                                                                            (("3"
                                                                                                              (typepred
                                                                                                               "i")
                                                                                                              (("3"
                                                                                                                (inst
                                                                                                                 -2
                                                                                                                 "i")
                                                                                                                (("3"
                                                                                                                  (assert)
                                                                                                                  (("3"
                                                                                                                    (lift-if
                                                                                                                     -2)
                                                                                                                    (("3"
                                                                                                                      (split
                                                                                                                       -2)
                                                                                                                      (("1"
                                                                                                                        (flatten)
                                                                                                                        (("1"
                                                                                                                          (inst
                                                                                                                           -6
                                                                                                                           "i")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "valid_trace?"
                                                                                                                               -6)
                                                                                                                              (("2"
                                                                                                                                (grind)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (flatten)
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -8
                                                                                                                           "i-length(trace)")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (typepred
                                                                                     "trace"
                                                                                     "trace_1")
                                                                                    (("2"
                                                                                      (split
                                                                                       1)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "wf_trace?")
                                                                                        (("1"
                                                                                          (lemma
                                                                                           "length_append[TraceState]")
                                                                                          (("1"
                                                                                            (lemma
                                                                                             "nth_append[TraceState]")
                                                                                            (("1"
                                                                                              (split
                                                                                               1)
                                                                                              (("1"
                                                                                                (grind)
                                                                                                nil
                                                                                                nil)
                                                                                               ("2"
                                                                                                (grind)
                                                                                                nil
                                                                                                nil)
                                                                                               ("3"
                                                                                                (skeep)
                                                                                                (("3"
                                                                                                  (inst?)
                                                                                                  (("3"
                                                                                                    (inst?
                                                                                                     -2)
                                                                                                    (("3"
                                                                                                      (assert)
                                                                                                      (("3"
                                                                                                        (lift-if
                                                                                                         -1)
                                                                                                        (("3"
                                                                                                          (split
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (flatten)
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               -5
                                                                                                               "i")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (grind)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (flatten)
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               -7
                                                                                                               "i-length(trace)")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (expand
                                                                                         "valid_trace?")
                                                                                        (("2"
                                                                                          (flatten)
                                                                                          (("2"
                                                                                            (lemma
                                                                                             "length_append[TraceState]")
                                                                                            (("2"
                                                                                              (inst?)
                                                                                              (("2"
                                                                                                (lemma
                                                                                                 "last_append[TraceState]")
                                                                                                (("2"
                                                                                                  (inst?)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "finite_trace?"
                                                                                                       -6)
                                                                                                      (("1"
                                                                                                        (grind)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (typepred
                                                                                                     "trace_1")
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "wf_trace?"
                                                                                                       -1)
                                                                                                      (("2"
                                                                                                        (flatten)
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (skeep)
                                                                    (("2"
                                                                      (hide
                                                                       2)
                                                                      (("2"
                                                                        (typepred
                                                                         "i")
                                                                        (("2"
                                                                          (expand
                                                                           "length"
                                                                           -1)
                                                                          (("2"
                                                                            (expand
                                                                             "length"
                                                                             -1)
                                                                            (("2"
                                                                              (expand
                                                                               "nth"
                                                                               1)
                                                                              (("2"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (flatten)
                                                              (("2"
                                                                (inst
                                                                 2
                                                                 "trace")
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (expand
                                                                     "normDLGLOBALLY"
                                                                     2)
                                                                    (("2"
                                                                      (propax)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((dlSequent_equiv formula-decl nil dynamic_logic nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (Environment type-eq-decl nil hp_def nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (list type-decl nil list_adt nil)
    (Formulas type-eq-decl nil bool_expr nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (HP type-decl nil HP_adt nil)
    (TraceState type-decl nil TraceState_adt nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (SOMERUNS_tr const-decl "bool" ltl_expr nil)
    (star? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (STAR adt-constructor-decl "[HP -> (star?)]" HP_adt nil)
    (normDLGLOBALLY const-decl "bool" ltl_expr nil)
    (<= const-decl "bool" reals nil)
    (nonpos_real nonempty-type-eq-decl nil real_types nil)
    (QBoolExpr type-eq-decl nil hp_def nil)
    (DLAND const-decl "bool" bool_expr nil)
    (DLEXISTS const-decl "bool" bool_expr nil)
    (nth def-decl "T" list_props nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (state? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (STATE adt-constructor-decl "[Environment -> (state?)]"
     TraceState_adt nil)
    (env_1 skolem-const-decl "Environment" tl_star_lems nil)
    (init_env const-decl "Environment" trace_semantics nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil)
    (DLGLOBALLY_FORALL formula-decl nil ltl_expr nil)
    (final_env const-decl "Environment" trace_semantics nil)
    (last const-decl "T" more_list_props structures)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (for_it def-decl
     "{t: T | t = for_def(i, upto, a, ext2int(upfrom, upto, f))}"
     for_iterate structures)
    (for const-decl "T" for_iterate structures)
    (iterate_left const-decl "T" for_iterate structures)
    (max_ci const-decl "{rr: (d) | FORALL (x: (d)): x <= rr}"
            more_ci_props ODEs)
    (State_Trace const-decl "bool" ltl_expr nil)
    (cut_state_diff const-decl
     "{tt: Trace | length(tt) = length(trace)}" ltl_expr nil)
    (cut_inf_diff const-decl "Trace" ltl_expr nil)
    (DLGLOBALLY const-decl "bool" ltl_expr nil)
    (\|- const-decl "bool" dynamic_logic nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (int_times_int_is_int application-judgement "int" integers nil)
    (valid_trace? const-decl "bool" trace_semantics nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (x skolem-const-decl "real" tl_star_lems nil)
    (ceiling const-decl "{i | x <= i & i < x + 1}" floor_ceil nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (integer nonempty-type-from-decl nil integers nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (pred type-eq-decl nil defined_types nil)
    (nat_induction formula-decl nil naturalnumbers nil)
    (append def-decl "list[T]" list_props nil)
    (trace skolem-const-decl "(valid_trace?)" tl_star_lems nil)
    (trace_1 skolem-const-decl "(valid_trace?)" tl_star_lems nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (i skolem-const-decl
       "below(length(append[TraceState](trace, trace_1)) - 1)"
       tl_star_lems nil)
    (last_append formula-decl nil more_list_props structures)
    (length_append formula-decl nil list_props nil)
    (i skolem-const-decl "below(length(append(trace, trace_1)))"
       tl_star_lems nil)
    (below type-eq-decl nil nat_types nil)
    (D adt-accessor-decl "[(state_diff?) ->
   {D: (dd?) | EXISTS (b: posreal): D = closed_interval(0, b)}]"
     TraceState_adt nil)
    (closed_interval const-decl "(closed_interval?(a, b))" interval_def
     ODEs)
    (closed_interval? const-decl "bool" interval_def ODEs)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (dd? const-decl "bool" hp_expr nil)
    (state_diff? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (listn_0 name-judgement "listn[real](0)" vector_arithmetic
     mv_analysis)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (nth_append formula-decl nil more_list_props structures)
    (trace_semantic_rel_star_seq_switch_eq formula-decl nil
     trace_bounded_star_semantics nil)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (car_append formula-decl nil more_list_props structures)
    (i skolem-const-decl
       "below(length(append[TraceState](trace, trace_1)) - 1)"
       tl_star_lems nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (length_singleton formula-decl nil more_list_props structures)
    (< const-decl "bool" reals nil)
    (length def-decl "nat" list_props nil)
    (below type-eq-decl nil naturalnumbers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (dlSequent const-decl "bool" dynamic_logic nil))
   shostak)))

